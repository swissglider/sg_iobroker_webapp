[
    {
        "id": "8e2e889e14c077b8",
        "type": "tab",
        "label": "Shelly Adapter",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "56cb5db772fc3848",
        "type": "tab",
        "label": "SwitchConsumerMappingDevice",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d012f2eded9735e0",
        "type": "tab",
        "label": "Scripte",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f3fb093646919445",
        "type": "subflow",
        "name": "SwitchConsumerMappingDevice",
        "info": "",
        "category": "SG MiHome",
        "in": [
            {
                "x": 100,
                "y": 120,
                "wires": [
                    {
                        "id": "79f421bdae8df7b4"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1880,
                "y": 480,
                "wires": [
                    {
                        "id": "45986278e39e3ddd",
                        "port": 0
                    },
                    {
                        "id": "d0f1f5519ed56be8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#D8BFD8",
        "icon": "font-awesome/fa-circle-thin",
        "status": {
            "x": 1860,
            "y": 580,
            "wires": [
                {
                    "id": "2d5215b2bac98bff",
                    "port": 0
                },
                {
                    "id": "4d9d298728e347f5",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "2a5c9ff66c4fad1d",
        "type": "subflow",
        "name": "SwitchConsumerMappingDevice",
        "info": "",
        "category": "SG Shelly",
        "in": [
            {
                "x": 140,
                "y": 140,
                "wires": [
                    {
                        "id": "74a06fc0c6163540"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1820,
                "y": 80,
                "wires": [
                    {
                        "id": "7178b63dbec26716",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#FDF0C2",
        "icon": "font-awesome/fa-circle-thin",
        "status": {
            "x": 1820,
            "y": 140,
            "wires": [
                {
                    "id": "75276020a1afd395",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "14ce7768b920ca39",
        "type": "subflow",
        "name": "SwitchConsumerMappingDevice",
        "info": "",
        "category": "SG Hue",
        "in": [
            {
                "x": 100,
                "y": 180,
                "wires": [
                    {
                        "id": "b0a745975e027d4d"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1840,
                "y": 120,
                "wires": [
                    {
                        "id": "13d3ad7b0bb54bfd",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#C0DEED",
        "icon": "font-awesome/fa-circle-thin",
        "status": {
            "x": 1840,
            "y": 60,
            "wires": [
                {
                    "id": "d33b25a0b1a82156",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "164be6b67a87f9cb",
        "type": "subflow",
        "name": "SwitchConsumerMappingDevice",
        "info": "",
        "category": "SG Smartthings",
        "in": [
            {
                "x": 120,
                "y": 180,
                "wires": [
                    {
                        "id": "f504f03fb899dd6e"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1760,
                "y": 100,
                "wires": [
                    {
                        "id": "6c27e7c3b07e9829",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#E6E0F8",
        "icon": "font-awesome/fa-circle-o-notch",
        "status": {
            "x": 1760,
            "y": 160,
            "wires": [
                {
                    "id": "62fe0603e324af66",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "28b7f32dd29b3136",
        "type": "subflow",
        "name": "Swicht HTTP Service & Filter mappings",
        "info": "",
        "category": "SG_D Switch Consumer Mapping",
        "in": [],
        "out": [
            {
                "x": 1920,
                "y": 420,
                "wires": [
                    {
                        "id": "b94c7a7887519a53",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#FF4500",
        "icon": "font-awesome/fa-circle-o-notch",
        "status": {
            "x": 1920,
            "y": 280,
            "wires": [
                {
                    "id": "b7a1452e0c0fc858",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "fc41063a409cd0e5",
        "type": "subflow",
        "name": "get nodered host config",
        "info": "",
        "category": "sg_helper",
        "in": [
            {
                "x": 160,
                "y": 240,
                "wires": [
                    {
                        "id": "06dcb6fa3c9b5d4c"
                    },
                    {
                        "id": "dd10f5636232e6ad"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1080,
                "y": 240,
                "wires": [
                    {
                        "id": "7506b599d833ebef",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#17d362"
    },
    {
        "id": "608bcb4eabe9512f",
        "type": "group",
        "z": "8e2e889e14c077b8",
        "name": "EnvSettings",
        "style": {
            "label": true,
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "color": "#0070c0"
        },
        "nodes": [
            "05dd875338a9d5ea",
            "0e5f0d5f837c0752",
            "5abe19a568fb37fa",
            "42ab86d2ccb639a9",
            "14d9b33db857ad02"
        ],
        "x": 254,
        "y": 19,
        "w": 592,
        "h": 142
    },
    {
        "id": "2b87b7793c66ec0f",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "init (startup && every day at 3 am) - Also init Devices and IOBroker Config",
        "style": {
            "stroke": "#001f60",
            "fill": "#bfdbef",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "05aa48719cfb1121",
            "fea58fe386d5e05f",
            "e8aa6bbea6362c42",
            "e3cf91088496c53f",
            "e2973f0a529c3104",
            "7a00a2c975e98e9b",
            "ed5d5c63d2e25d8b",
            "df4c01558db57118",
            "84c638aaae2acf96",
            "67e77eb3c7cf1a78",
            "36cf720bb0b524a9",
            "263c4fe68215bb7f"
        ],
        "x": 494,
        "y": 19
    },
    {
        "id": "302fdc27221dc26e",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "EnvSettings",
        "style": {
            "label": true,
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "color": "#0070c0"
        },
        "nodes": [
            "146aa1b45c9060a5",
            "6496b92504361d05"
        ],
        "x": 14,
        "y": 19
    },
    {
        "id": "720d21e31012ce8d",
        "type": "group",
        "z": "f3fb093646919445",
        "name": "refresh MobilerSchalter",
        "style": {
            "label": true,
            "stroke": "#001f60",
            "fill": "#dbcbe7",
            "color": "#001f60",
            "fill-opacity": "0.6"
        },
        "nodes": [
            "b677ede3b5f46fb3",
            "c2630ebb166f8456",
            "8c3fc4fc2376c698",
            "00f65cc87683e2ca",
            "fe4784a6ed7b749b",
            "d0f1f5519ed56be8",
            "2d5215b2bac98bff"
        ],
        "x": 194,
        "y": 479
    },
    {
        "id": "4eddd4e8ac78ecab",
        "type": "group",
        "z": "f3fb093646919445",
        "name": "Is responsible for ?",
        "style": {
            "label": true,
            "stroke": "#001f60",
            "fill": "#dbcbe7",
            "color": "#001f60",
            "fill-opacity": "0.6"
        },
        "nodes": [
            "68f1a6cb6436281d",
            "49af7241b4750be3",
            "09d7aba9ef1ed554",
            "79f421bdae8df7b4"
        ],
        "x": 194,
        "y": 59
    },
    {
        "id": "fb8ff4807cb75bd2",
        "type": "group",
        "z": "f3fb093646919445",
        "name": "init MobilerSchalter",
        "style": {
            "label": true,
            "stroke": "#001f60",
            "fill": "#dbcbe7",
            "color": "#001f60",
            "fill-opacity": "0.6"
        },
        "nodes": [
            "45986278e39e3ddd",
            "d8a4f609a9263903",
            "4d9d298728e347f5"
        ],
        "x": 194,
        "y": 359
    },
    {
        "id": "d632100434f155f7",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "refresh ( every 15 minutes) - Only Refreshes IOBroker Config",
        "style": {
            "stroke": "#001f60",
            "fill": "#bfdbef",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "0b091d762507f934",
            "3374e25bff1a6346",
            "2f59cd5ebf479de4",
            "8702b7498c76e9c6",
            "ceae67b59ad601b9",
            "539fbc8df6e4e451",
            "03a41f5d1f3045c8",
            "8bba49f52e184dee",
            "050d0f5ad8a64f0d",
            "4bfdc2fcb4549a15",
            "a36b255dfe72b7b4",
            "642f6fa5575a0e49",
            "9161986243c97407",
            "985e770126f9f489",
            "c2531f9a5b5b4de4"
        ],
        "x": 14,
        "y": 433
    },
    {
        "id": "6e2d3df7f56df82c",
        "type": "group",
        "z": "2a5c9ff66c4fad1d",
        "name": "Is responsible for ?",
        "style": {
            "label": true,
            "stroke": "#ffC000",
            "fill": "#ffefbf",
            "color": "#001f60"
        },
        "nodes": [
            "12f70f3d1503da9a",
            "8bb028bd06ba4286",
            "23df6109aba4716f",
            "74a06fc0c6163540",
            "f4eb30be71f216f9",
            "c066a98d6489c1cd"
        ],
        "x": 314,
        "y": 59
    },
    {
        "id": "90623cc58d225d1e",
        "type": "group",
        "z": "2a5c9ff66c4fad1d",
        "name": "init",
        "style": {
            "label": true,
            "stroke": "#ffC000",
            "fill": "#ffefbf",
            "color": "#001f60"
        },
        "nodes": [
            "8f4f64a0d21b848d",
            "45b646d30eede878",
            "d82a8eac7c901079",
            "4bf55df7d455c3f4",
            "fab1d24c63f22c02"
        ],
        "x": 174,
        "y": 399
    },
    {
        "id": "8946da95c7d91a60",
        "type": "group",
        "z": "14ce7768b920ca39",
        "name": "init",
        "style": {
            "label": true,
            "stroke": "#001f60",
            "fill": "#bfdbef",
            "color": "#001f60"
        },
        "nodes": [
            "412fa5d342764b09",
            "c9cba3a3f5432784",
            "42e8d4519fe61afe",
            "24c92333848d6777",
            "8e71790c1ddb2c56"
        ],
        "x": 194,
        "y": 319
    },
    {
        "id": "dc295ae887fd872b",
        "type": "group",
        "z": "14ce7768b920ca39",
        "name": "refresh consumer lampe - zimmer/zone",
        "style": {
            "stroke": "#001f60",
            "fill": "#bfdbef",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "a86c40700b24cb5c",
            "192ae33a0b42e9bb",
            "054c8b2e7e6c6512",
            "ad69a369d5d411be",
            "603ccdc66f3cf421",
            "0d204a960be5dd95",
            "10aefccfac2d9d2e",
            "ab11bae1af10ac0b",
            "a8e1d10b3e4aa4e4"
        ],
        "x": 194,
        "y": 459
    },
    {
        "id": "ddab64da02903325",
        "type": "group",
        "z": "164be6b67a87f9cb",
        "name": "Is responsible for ?",
        "style": {
            "label": true,
            "stroke": "#6f2fa0",
            "fill": "#dbcbe7",
            "color": "#001f60"
        },
        "nodes": [
            "faa50b888618f78e",
            "3c02f87d30b56ac4",
            "b7600645f32b5762",
            "f504f03fb899dd6e",
            "0f0e53e3db7f0632"
        ],
        "x": 214,
        "y": 99
    },
    {
        "id": "b774d1cde5b050d9",
        "type": "group",
        "z": "164be6b67a87f9cb",
        "name": "init",
        "style": {
            "label": true,
            "stroke": "#6f2fa0",
            "fill": "#dbcbe7",
            "color": "#001f60"
        },
        "nodes": [
            "7685ebb832b100dd",
            "10f12116ddb33a2b",
            "fddb602a4b3245a3",
            "dee837e82e6d137d",
            "50eb16f1c4805b8f"
        ],
        "x": 214,
        "y": 279
    },
    {
        "id": "f3136e65fb993a51",
        "type": "group",
        "z": "164be6b67a87f9cb",
        "name": "refresh consumer OnOff",
        "style": {
            "stroke": "#6f2fa0",
            "fill": "#dbcbe7",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "c614bce773ef17d9",
            "c51de9d77d7ad9c3",
            "a739d73faa0466c8",
            "11024d8ae0308a76",
            "80a5a5f2cf60c5cd",
            "8a6ef6f7fb369c4f",
            "e47651209bef1e61"
        ],
        "x": 214,
        "y": 419
    },
    {
        "id": "096cfeb3ddca584d",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "Test Mapping Table",
        "style": {
            "stroke": "#ffC000",
            "fill": "#ffffbf",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "cab0465d3ed25fba",
            "7a02329e52e48eeb",
            "713611af8ff0c62a",
            "49ff69fef955d712"
        ],
        "x": 14,
        "y": 139
    },
    {
        "id": "c9c211bf640ffacb",
        "type": "group",
        "z": "28b7f32dd29b3136",
        "name": "Switch HTTP Service  & Filter Mappings",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ff7f7f",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "bf4ed86a596c028b",
            "bb76238178db3f9c",
            "ebdc8c9475e61b09",
            "aec8094a0fdd93ae",
            "a188297e6d715908",
            "f8e1c877eb35365e",
            "814c6f0c1bba0b79",
            "776a9ed5d8b55ba7",
            "b7a1452e0c0fc858",
            "02b68d95d8031e2a",
            "a8cb12c64e116771",
            "44d4265ac2891046",
            "b94c7a7887519a53",
            "7b85248607e4ca05",
            "17cc7957f03d58bd",
            "20aec828cd287820",
            "01df626fae4790f2",
            "933197bc48ba1f8d",
            "cde451b7d3b31662",
            "4d5346b1da2e8891"
        ],
        "x": 94,
        "y": 39
    },
    {
        "id": "46fd50ff78af5efa",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "Switch on URL Input",
        "style": {
            "stroke": "#92d04f",
            "fill": "#e3f3d3",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "10896b17fee1ecc7",
            "95778deb4780634b",
            "a68c5ea689a23eca",
            "d3a358d0a5fe454e",
            "ee9d91eaadd86107",
            "3c6a1c727e33ee16"
        ],
        "x": 1134,
        "y": 739
    },
    {
        "id": "be55fa3cfa708c56",
        "type": "group",
        "z": "14ce7768b920ca39",
        "name": "Hue Switch Wanschalter Lampe",
        "style": {
            "stroke": "#001f60",
            "fill": "#bfdbef",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "5337bde0491572f6",
            "6b897fa9ded0fdbe",
            "3806378a9d80f656",
            "7e092ac45b318bb0",
            "c3fec32d64a2e3a6",
            "38ca08c8f2594498",
            "36dbbb80267d3b9e",
            "242e587788cd3f39"
        ],
        "x": 194,
        "y": 1039
    },
    {
        "id": "d7d1ce4144ef0cfd",
        "type": "group",
        "z": "164be6b67a87f9cb",
        "name": "Hue Switch Wanschalter Lampe",
        "style": {
            "stroke": "#6f2fa0",
            "fill": "#dbcbe7",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "d849044759438be7",
            "cde9ba75675deee2",
            "ea787059d75a19f1",
            "b30ddaa50bb77cb4",
            "43cc3442395c67f2",
            "b493234c7ae7246a",
            "02cf9d08481ac276",
            "e845c4b0e8ad4130"
        ],
        "x": 214,
        "y": 599
    },
    {
        "id": "83627ee6b876f4c5",
        "type": "group",
        "z": "2a5c9ff66c4fad1d",
        "name": "refresh consumer",
        "style": {
            "stroke": "#ffC000",
            "fill": "#ffefbf",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "70bbf05885123c8f",
            "baa3f696c8f94250",
            "63cd05e60ae46765",
            "fbd240f58d09b3ea",
            "de4e8fd389b4d55a",
            "ce9aa9572b944141",
            "a791314d33e08fe6"
        ],
        "x": 174,
        "y": 759
    },
    {
        "id": "dc59e02c193d10fc",
        "type": "group",
        "z": "14ce7768b920ca39",
        "name": "Is responsible for ?",
        "style": {
            "label": true,
            "stroke": "#001f60",
            "fill": "#bfdbef",
            "color": "#001f60"
        },
        "nodes": [
            "f3eabd0beb5d4265",
            "071a794bf78da75c",
            "b2302f119246dc7a",
            "b0a745975e027d4d",
            "c6c1eb945d2da304",
            "53f89d972e28c673"
        ],
        "x": 194,
        "y": 79
    },
    {
        "id": "1ac7ade21d6999b6",
        "type": "group",
        "z": "2a5c9ff66c4fad1d",
        "name": "Switch Shelly Comsumer",
        "style": {
            "stroke": "#ffC000",
            "fill": "#ffefbf",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "87427ab93fde3961",
            "18448c756276d352",
            "5d916b2219ff8dd7",
            "3cb7e02d4514c813",
            "9f8584ebea9b099f",
            "67238bd58ba74634",
            "5d93fac9545bf507",
            "ee38ff30dbc03563",
            "931fc9ec79ebfa64",
            "088e91780e312a0e",
            "ff6bb2971e82fe70"
        ],
        "x": 174,
        "y": 899
    },
    {
        "id": "71e4f9620c065295",
        "type": "group",
        "z": "14ce7768b920ca39",
        "name": "refresh Switch",
        "style": {
            "label": true,
            "fill": "#7fb7df",
            "stroke": "#001f60",
            "color": "#001f60",
            "fill-opacity": "0.43"
        },
        "nodes": [
            "66f8273f56f877e0",
            "ddfd8995031c3fe1",
            "daf1f413e80e0fe5",
            "a3aca04773d9dddf",
            "297977e4ebdc9f64",
            "5ed35c680b030820",
            "de5aceaff14cabf6"
        ],
        "x": 194,
        "y": 799
    },
    {
        "id": "d5cf4cf9191699ba",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "helper - add All StyleButton Mappings",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ffbfbf",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "63a9e920374cd420",
            "05114c08e8883d20",
            "11631d1c6898e1a1",
            "b261326171c504d2",
            "c74f314df002d612",
            "f382a65beb5e8561",
            "850aff3d92bf0df2"
        ],
        "x": 1434,
        "y": 2419
    },
    {
        "id": "5556ddbab7caf80c",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "delete all mappings",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ff7f7f",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "c3f5ae4ccca7498e",
            "4ffdeea35a703b52",
            "9cbc7fc01cd76baf",
            "710a466010c6bb35",
            "e666b4cd3d8924b3",
            "7e1f077e4dfa883c",
            "92d24cdf3a1f283d",
            "83da244a4712be6a",
            "afd40f9b31243c62"
        ],
        "x": 14,
        "y": 2259
    },
    {
        "id": "50c57295c4c8e77a",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "get all mappings",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ff7f7f",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "fd8c703ff11a14df",
            "ed705c1392b1ec93",
            "2efdb0920dfd6082",
            "835399a23d348a5c"
        ],
        "x": 14,
        "y": 2119
    },
    {
        "id": "fbf48a5c6959f16e",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "get single mapping",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ff7f7f",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "35173d1130b19a4a",
            "b36f4c7111666fb5",
            "c090ef86e2b65544",
            "97157167c54395e3",
            "e088fdbd83af047a",
            "fe15477c13152019"
        ],
        "x": 334,
        "y": 2119
    },
    {
        "id": "d6191b2cb0a4400d",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "add Mapping",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ff7f7f",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "ba2945fcc6ef023a",
            "8e04544527b84345",
            "479fabf5052d9e74",
            "53bfa1651474f53b",
            "27a992142238e5b0",
            "6552ce52702943e7",
            "39911bf05decd3fa",
            "25b19bfd971dc7f6",
            "fcb3129c941cd7b4",
            "a8d941495148f42e",
            "c22076d71d641ad2",
            "575f7a10be197b08",
            "1f8f7c5cc407a66d"
        ],
        "x": 14,
        "y": 2699
    },
    {
        "id": "c6db4e196ccb8cb9",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "IOBroker manipulation",
        "style": {
            "stroke": "#92d04f",
            "fill": "#e3f3d3",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "343f7b62881d5eee",
            "d78ea6ced71f2895",
            "5c090b3d6ac6999a",
            "fe9be47307547f41",
            "8c1cc076da147d90",
            "0f0019c76aa9b2c8",
            "4da0fb3f137f6264",
            "a380a3a4ccae9433",
            "2446e92ecc52b9e9",
            "c0edbe700f901013",
            "4307e811c9364fce",
            "1c70fa22a086c780",
            "f12a43ed013dd349",
            "d06efa2d207a499d",
            "69734db52ab756cb",
            "a31990303b2cc41b",
            "b936c4b2667fcac7",
            "f07895d419ca3379",
            "d4631af68cdbef27",
            "efa72ecd0d9efb73"
        ],
        "x": 14,
        "y": 739
    },
    {
        "id": "f0049f45ce09ebb0",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "helper - get Mappings from IoB",
        "style": {
            "label": true,
            "stroke": "#ff0000",
            "fill": "#ffbfbf",
            "color": "#001f60"
        },
        "nodes": [
            "938b712ea27f19f7",
            "d23ca10885f76fd1",
            "9fcffc37a12e49fc",
            "8c3a573c15f9f7f0",
            "e931cdf3de6df77d",
            "e9d165b3a9849f3a",
            "16b85f6eeb664ada"
        ],
        "x": 1434,
        "y": 2139
    },
    {
        "id": "bd19de5ccd074a20",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "helper - check if init is finished",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ffbfbf",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "7cc02b9e219dcef9",
            "ca604a62a60a6001",
            "955406f82ce83c3c",
            "9a6053dcb135c907",
            "5c6bbd11973a1a31",
            "e1d0fdfd6e561ec8",
            "c43a51bdca0afe48"
        ],
        "x": 1434,
        "y": 1979
    },
    {
        "id": "94643627157a481b",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "init mappings",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ff7f7f",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "35c63c08ed7e4f72",
            "f05211d048619b67",
            "281212159939fd48",
            "f26e8fd564575e90",
            "c09e096f594b50c3",
            "e4572e9d5aaef48d",
            "3b0643fd73c0c1b0",
            "7d5b85f0dffa4810"
        ],
        "x": 14,
        "y": 1979
    },
    {
        "id": "99a575cc6659e616",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "Dispatch mappings Handler",
        "style": {
            "stroke": "#92d04f",
            "fill": "#e3f3d3",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "d46c6bcfc1af13be",
            "aa652de7f30fe6f6",
            "5ebe8d2f7b553201",
            "b6aff314fa4f3ad2",
            "993e3a967c0c5f62",
            "a5c90ee399d2b890",
            "41b724f988ccfcea",
            "29b4d3351b5394b2",
            "312bd2e6d1f75f4b",
            "16ce550c1be3ece7",
            "bd5c4c47030ab3db",
            "b6cae4f29673d4be",
            "6c95acc9b56f7e6b",
            "b321a7e87046f588",
            "061cd86bdf2dcd13",
            "0be28bf68bb1baee",
            "b89dba25e716f564"
        ],
        "x": 14,
        "y": 1379
    },
    {
        "id": "17860d7cf8884a5a",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "delete Mapping",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ff7f7f",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "4473b25ab0b3f517",
            "cd37ad7e182c1795",
            "9648eb362d5c88ee",
            "2ba2b389ce46ac42",
            "8a324d8cfb293e66",
            "3af26513644cdfd7",
            "92e1084ca59cbb0b",
            "4b5582e877aeb5df",
            "aa9e84c7cd7e35d8",
            "4a7ed1be549dcf0f",
            "12f4157faa44caec",
            "59981fad65ceefa0"
        ],
        "x": 14,
        "y": 2399
    },
    {
        "id": "d70acdfc626c44e3",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "helper - delete StyleButton Mappings",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ffbfbf",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "6a9250ad1910bbb0",
            "e1d58ba2a048c92d",
            "31ecd12185cfa34d",
            "a923a0846f01e6b2",
            "580be89e912716ea",
            "9a569b6e35859b9d"
        ],
        "x": 1434,
        "y": 2559
    },
    {
        "id": "fd2a8d4e66d37ad2",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "helper - add single StyleButton mapping",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ffbfbf",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "557d5ab56fefaafb",
            "6b614cf62a1d1452",
            "6a194a64fcdfaf5e",
            "d65b77e1f112656e",
            "f6035bc8855f2dfc",
            "5c08266ac30e3b38"
        ],
        "x": 1434,
        "y": 2699
    },
    {
        "id": "820c7528eb1934f2",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "set all mappings",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ff7f7f",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "7d939e05ac17abdd",
            "9cf59065727c472d",
            "9ec65c11594618b4",
            "26a0f4286fe3f050",
            "f537a4505b9ffe6f",
            "76c235d6b118656a",
            "3e1d1e3113fe6157",
            "7f3524e124ed3237",
            "3d9b35e93cb5be72",
            "60c766df43488f1a",
            "c8830264e9d53ced",
            "40bb5cba30b7fe53"
        ],
        "x": 14,
        "y": 2559
    },
    {
        "id": "dc19a4bcf38f0673",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "Tests",
        "style": {
            "stroke": "#ffC000",
            "fill": "#ffffbf",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "f9656a651af5b88e",
            "51dfb0e0275cf0ca",
            "6633442a3fd08f53",
            "e897fb7ad66b1758",
            "6efc421c7d6332d8",
            "35b8a7c9bce8b54c",
            "38e5e8030ef85b2a",
            "dd6d4d4fc828bd97",
            "75ccc9a81acce6dc",
            "03f508b74ae36106",
            "a888ca5ab922b19d",
            "98273a30e2583f9e",
            "afb24c16fb1451f6",
            "1e94827f89af2147",
            "425b7b115b8ce4f9",
            "3819205f16c4bf22",
            "caa68ec3642a6996",
            "3caf5e497890f412",
            "77f3d5e5480718a7",
            "8c0369ab564fe0f4",
            "49769e1a045b2703"
        ],
        "x": 794,
        "y": 1379
    },
    {
        "id": "d0238f59f65bdf55",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "Change Mapping",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ff7f7f",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "4490852279317458",
            "a84555afa7c98efa",
            "8480744815bcf880",
            "fcfbdca2e0e91f6f",
            "9b75e7defece6ca9",
            "dd4f6651d02c255a",
            "3dd022e18f7ffac6",
            "5f82bee4f171318a",
            "e8a85aaf1eacaddc",
            "921ecf5020a29d0f",
            "685c9034f440afe5",
            "66ec8019c3288a55",
            "4bd7e18b6ddd8060",
            "71b8982179b86635",
            "bd5d805b9dc2811d",
            "75f8a8e4ba5812e8",
            "7abc4626458fd07f",
            "02b35159af2e8c21",
            "f26a88e324eb2aa3"
        ],
        "x": 14,
        "y": 2839
    },
    {
        "id": "baad898d7c78a816",
        "type": "group",
        "z": "2a5c9ff66c4fad1d",
        "name": "refresh Switch",
        "style": {
            "label": true,
            "fill": "#ffefbf",
            "stroke": "#ffC000",
            "color": "#001f60"
        },
        "nodes": [
            "8893ee69347cdfdb",
            "122fd3c162c6d9ac",
            "d4170e5b930ad56c",
            "3ee5aaea9040c9de",
            "86ca891fa5e2cedb",
            "71999253aaed51f8"
        ],
        "x": 174,
        "y": 539
    },
    {
        "id": "25dca1802782ff81",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "check mapping",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ffbfbf",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "b24ed0679be56911",
            "b0d112b768431ae2",
            "44b855a13840e870",
            "57e7e52275986df8"
        ],
        "x": 1434,
        "y": 2839
    },
    {
        "id": "7a607ca9e7452423",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "check mappings",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ffbfbf",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "ed44dd5d79ea370b",
            "1f1fd9bf4cb96224",
            "02e5325b6930f1ed",
            "29fdf08801e00d6c",
            "ea6bfe04df68c36f",
            "0c240bcf8da27eab",
            "377bb62175c30f4e"
        ],
        "x": 1434,
        "y": 2999
    },
    {
        "id": "90e2359804ab0380",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "check new mapping",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ffbfbf",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "4a2831749dd38244",
            "32548b26e7d05ada",
            "817af22f9e1b2402",
            "980490cbb3066b51",
            "db38cb0f97b8c717"
        ],
        "x": 1754,
        "y": 2839
    },
    {
        "id": "141c382388db17d3",
        "type": "group",
        "z": "d012f2eded9735e0",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "3b1bb5ff1c7e4022",
            "165c4ba355b225fc",
            "52c8c4cb0e20b0a9",
            "4e0f6f2b6464dbad",
            "2ce7c1e5857ca959",
            "f420af6a154bd258"
        ],
        "x": 34,
        "y": 59
    },
    {
        "id": "9e89abb4f8cdeec8",
        "type": "group",
        "z": "d012f2eded9735e0",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "5382e1a7820f9322",
            "abbc7c532288d85f",
            "7593b7e03a9d4625"
        ],
        "x": 34,
        "y": 239
    },
    {
        "id": "1b89fcdd6bfe016f",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "helper - extend ConfigFunctions with Lists",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ffbfbf",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "93e0f2f375b829ad",
            "c25f4a3e87254140",
            "38a3ce815b6744e3",
            "595fe361d49b5acb",
            "350a8353ca73edaa",
            "22da41a834303f8e"
        ],
        "x": 1434,
        "y": 3159
    },
    {
        "id": "356ce99ca6d1b9a2",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "get Configuration",
        "style": {
            "label": true,
            "color": "#001f60",
            "fill": "#e3f3d3",
            "stroke": "#92d04f"
        },
        "nodes": [
            "f7099618b285e397",
            "596981ad36298f0f",
            "c15437a4eb24adb9",
            "4023fc5ab4ef29e4",
            "d6a43d1501edb4d5",
            "6b4a830b6ea213ef",
            "185fe6f639de36fb",
            "5329992d3ee642aa",
            "53f95205ed441f77",
            "fa8994ed4bfeec73",
            "1c38a8a8b58be731",
            "f89258c4debe20c9",
            "c6154eac364b26a4"
        ],
        "x": 14,
        "y": 1079
    },
    {
        "id": "f6456617e15f5358",
        "type": "group",
        "z": "56cb5db772fc3848",
        "name": "helper - write mappings to IoB",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ffbfbf",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "75d1d4529f34f6c3",
            "8bf39362515fdc92",
            "59384571eb1d628f",
            "2700da950341d669",
            "87c393c23483b207",
            "f0e544d770b8bfd3",
            "716af178cd88a7b5"
        ],
        "x": 1434,
        "y": 2279
    },
    {
        "id": "a1ce16352877d0d7",
        "type": "group",
        "z": "8e2e889e14c077b8",
        "name": "Store all shellies found on mdns",
        "style": {
            "label": true,
            "stroke": "#001f60",
            "color": "#001f60",
            "fill": "#bfdbef"
        },
        "nodes": [
            "3a24205a2ae1e3df",
            "4c2b048c7486dd51"
        ],
        "x": 874,
        "y": 19,
        "w": 392,
        "h": 82
    },
    {
        "id": "7529fb642014bbe2",
        "type": "group",
        "z": "8e2e889e14c077b8",
        "name": "shelly update",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ff7f7f",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "1703d30bb5827cd6",
            "068e95bd023fe48f",
            "e53ac6a1ffc5a839",
            "be30928444179890"
        ],
        "x": 44,
        "y": 1099,
        "w": 482,
        "h": 82
    },
    {
        "id": "3e3159a06022c48d",
        "type": "group",
        "z": "8e2e889e14c077b8",
        "name": "BLE SetConfig",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ff7f7f",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "16d876078f2a8d63",
            "12f1587fbe11f9f1",
            "387f55d6f30db5b4",
            "0dae7e0205070f5a"
        ],
        "x": 44,
        "y": 1199,
        "w": 482,
        "h": 82
    },
    {
        "id": "b4c5697408538620",
        "type": "group",
        "z": "8e2e889e14c077b8",
        "name": "Cloud.SetConfig",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ff7f7f",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "405e3f50dbfeeddf",
            "76d22ef5ae654ec2",
            "5c6dda08fa80182b",
            "97b0088674c7835e"
        ],
        "x": 44,
        "y": 1299,
        "w": 472,
        "h": 82
    },
    {
        "id": "1e09ef214bd99392",
        "type": "group",
        "z": "8e2e889e14c077b8",
        "name": "MQTT SetConfig",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ff7f7f",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "0c5a662ad7225d96",
            "386e28aadb753ae1",
            "ed392d7e0e0d2193",
            "87a530167ac36a87"
        ],
        "x": 44,
        "y": 1399,
        "w": 472,
        "h": 82
    },
    {
        "id": "6d481a8e9c07d8b9",
        "type": "group",
        "z": "8e2e889e14c077b8",
        "name": "Shelly Reboot",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ff7f7f",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "4b505041d90c0a46",
            "ca9da79fffe139a9",
            "f3c193c1b31e367f",
            "4be28a2e5ca89006"
        ],
        "x": 544,
        "y": 1099,
        "w": 472,
        "h": 82
    },
    {
        "id": "453e87f282e67248",
        "type": "group",
        "z": "8e2e889e14c077b8",
        "name": "Sys SetConfig",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ff7f7f",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "cbde744a5f797bd4",
            "204d977218e7f438",
            "a5a1d13582c9973f",
            "e25f0008fc39639b"
        ],
        "x": 544,
        "y": 1199,
        "w": 472,
        "h": 82
    },
    {
        "id": "55fccb29f8ea2410",
        "type": "group",
        "z": "8e2e889e14c077b8",
        "name": "Webhook",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ff7f7f",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "c0559ff75137f97a",
            "de98fc096141cb11",
            "504bfee405228205",
            "6f69052eb1c78f03",
            "96246328b9441322",
            "87a7e889552d5bc5",
            "cf6d6d2364ad0c91",
            "60abfa17f7220d13",
            "1d2f4b6591a401f5",
            "2c267bd40590df8c"
        ],
        "x": 44,
        "y": 1739,
        "w": 942,
        "h": 142
    },
    {
        "id": "fed38b316335d6dc",
        "type": "group",
        "z": "8e2e889e14c077b8",
        "name": "init Script.Create",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ff7f7f",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "607944c1e4fbab26",
            "2b78f1d8241ad02e",
            "404e6db842f1f949",
            "bc0e8a892a361eba",
            "08aaa60b54688648",
            "13321e1fd63350b9",
            "e5a6cd4aac18ef5c",
            "8da4726c53632d98"
        ],
        "x": 544,
        "y": 1299,
        "w": 472,
        "h": 162
    },
    {
        "id": "e0df35a1487a9926",
        "type": "group",
        "z": "8e2e889e14c077b8",
        "name": "Init Shellies",
        "style": {
            "stroke": "#001f60",
            "fill": "#bfdbef",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "fae8d278c96ec5a6",
            "23bb157b7ae3a64e",
            "44877b4fa4350589",
            "69a1d7db8741d5cf",
            "fdb79000bbeef62e",
            "9e352bcb7ea05560",
            "fb23d663d1996ff4",
            "bd2db71a13b6841f",
            "7b39f4addd8b3767",
            "d8c6cd1bce973b8b",
            "52215c2b08944854",
            "112a8b5cb07ebb8f",
            "65532ce68f7f05e5",
            "e4d57f080b2c487f",
            "7d647b50dadfe714",
            "41b54ba50f519d55",
            "51155897866c3e84",
            "33270e7fd62656be",
            "b08c9d2a93acbcfa",
            "fb3a715bc66f25c9",
            "9973dad889c2a81f",
            "a6579f766cce45b6"
        ],
        "x": 54,
        "y": 419,
        "w": 1392,
        "h": 322
    },
    {
        "id": "b572a010f1f21020",
        "type": "group",
        "z": "8e2e889e14c077b8",
        "name": "get all shellies",
        "style": {
            "stroke": "#92d04f",
            "fill": "#e3f3d3",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "28d8d25672ebd498",
            "f897f225bcc17878",
            "da75cc7cfaadc678",
            "c868ca1b694bf154",
            "d00743afdaa29a83"
        ],
        "x": 54,
        "y": 839,
        "w": 652,
        "h": 122
    },
    {
        "id": "60eaf3183a2f1b08",
        "type": "group",
        "z": "8e2e889e14c077b8",
        "name": "init",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "3d013ed7131cbfd8",
            "b44383ecb2d3a599",
            "d6b956eeaafb8fd7",
            "c52a57a0e413252a",
            "d9777f84d44ce103",
            "3a6e9d904dbef7bd",
            "4c736ec1e8076a35",
            "e3955ec7de1dd5f0",
            "7cbd0c3690ac5ba5",
            "822d62f1d5cc3cc3",
            "86259027ec165607",
            "69cc5e7b877e5c80",
            "9ed2e5fbdbf2b939",
            "fd60ceed9dfabb45",
            "8e94e06d6d873012",
            "f8a702773c297a34",
            "9c62623b455b9df7",
            "301a2cb06e0af6a8",
            "7d5ae7b0f3927507",
            "6154c66acbd494b3",
            "ae8b3927738e1e75"
        ],
        "x": 54,
        "y": 179,
        "w": 1372,
        "h": 222
    },
    {
        "id": "7f2c2b9883eaece7",
        "type": "group",
        "z": "8e2e889e14c077b8",
        "name": "Switch SetConfig",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ff7f7f",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "6256228fbc7a3c64",
            "eff53443c07a73d3",
            "3a544423c358835b",
            "fdcadb4d8c2be756",
            "5b488310419150a6",
            "ddf3a0f4459e8445",
            "0d2c73a5ed40a3fd",
            "d3f235aa25639161",
            "e3c453ea694b1e79",
            "9e083eedc6048ce9",
            "be38c78b1a5bf0a5",
            "26a1c51e8de4a96b",
            "70eed40310b8dd44"
        ],
        "x": 44,
        "y": 1491.5,
        "w": 1122,
        "h": 229.5
    },
    {
        "id": "19244311e3ab0ec2",
        "type": "group",
        "z": "8e2e889e14c077b8",
        "name": "helper Loop ",
        "style": {
            "stroke": "#6f2fa0",
            "fill": "#dbcbe7",
            "label": true,
            "color": "#001f60"
        },
        "nodes": [
            "491d439b8d9da2fc",
            "1a25576d03b03b83",
            "8a796b928016eb05",
            "0a84c08b88417111",
            "9c97a9722e82ec67",
            "8744c85f90d76172"
        ],
        "x": 44,
        "y": 1999,
        "w": 462,
        "h": 167
    },
    {
        "id": "ad69a369d5d411be",
        "type": "group",
        "z": "14ce7768b920ca39",
        "g": "dc295ae887fd872b",
        "name": "get Scenes",
        "style": {
            "stroke": "#777777",
            "fill": "#d1d1d1",
            "label": true,
            "color": "#777777"
        },
        "nodes": [
            "df414c3e2f9802d5",
            "d46fd3b0aa7baead",
            "88b5123ec0a52a86",
            "71d803d948586175",
            "4035eb2352ecfd14",
            "6a2ec7f01db16bc1",
            "3c8322198b834078"
        ],
        "x": 954,
        "y": 539
    },
    {
        "id": "a36b255dfe72b7b4",
        "type": "group",
        "z": "56cb5db772fc3848",
        "g": "d632100434f155f7",
        "name": "join switches / split consumers",
        "style": {
            "label": true
        },
        "nodes": [
            "3e7b8c75a4fe3057",
            "13958edb4758eec9",
            "151db519b0da645c",
            "9fd0454ec9a91df5",
            "7551827320087f13"
        ],
        "x": 814,
        "y": 459
    },
    {
        "id": "642f6fa5575a0e49",
        "type": "group",
        "z": "56cb5db772fc3848",
        "g": "d632100434f155f7",
        "name": "join / init mappings / finishing refresh",
        "style": {
            "label": true
        },
        "nodes": [
            "e37893560118893e",
            "74a5f285e03eb0e6",
            "e0eb904b969d027e",
            "e6153885a1f4bc1c",
            "65244882681ca07b",
            "09d2a0230ce4b95b"
        ],
        "x": 1614,
        "y": 479
    },
    {
        "id": "9161986243c97407",
        "type": "group",
        "z": "56cb5db772fc3848",
        "g": "d632100434f155f7",
        "name": "split switches",
        "style": {
            "label": true
        },
        "nodes": [
            "7ac3219a6dfa8a5f",
            "2c8cb9ea682d218d",
            "7830a1c5776e9853",
            "45d568974bb8d92e"
        ],
        "x": 234,
        "y": 459
    },
    {
        "id": "36cf720bb0b524a9",
        "type": "group",
        "z": "56cb5db772fc3848",
        "g": "2b87b7793c66ec0f",
        "name": "check/join/store",
        "style": {
            "label": true
        },
        "nodes": [
            "ceca1f3e575a1b0a",
            "d6aeca2830390f52",
            "ce0cbd53da6e9507"
        ],
        "x": 1294,
        "y": 99
    },
    {
        "id": "263c4fe68215bb7f",
        "type": "group",
        "z": "56cb5db772fc3848",
        "g": "2b87b7793c66ec0f",
        "name": "create info",
        "style": {
            "label": true
        },
        "nodes": [
            "8101d3eb2ecad436",
            "6d6f6cd7414acf76",
            "d3d3aec723c93dbd"
        ],
        "x": 734,
        "y": 79
    },
    {
        "id": "4d5346b1da2e8891",
        "type": "junction",
        "z": "28b7f32dd29b3136",
        "g": "c9c211bf640ffacb",
        "x": 1320,
        "y": 160,
        "wires": [
            [
                "b7a1452e0c0fc858",
                "b94c7a7887519a53"
            ]
        ]
    },
    {
        "id": "e4d57f080b2c487f",
        "type": "junction",
        "z": "8e2e889e14c077b8",
        "g": "e0df35a1487a9926",
        "x": 1080,
        "y": 480,
        "wires": [
            [
                "23bb157b7ae3a64e"
            ]
        ]
    },
    {
        "id": "8744c85f90d76172",
        "type": "junction",
        "z": "8e2e889e14c077b8",
        "g": "19244311e3ab0ec2",
        "x": 120,
        "y": 2140,
        "wires": [
            [
                "491d439b8d9da2fc"
            ]
        ]
    },
    {
        "id": "79f48094a950d368",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD.MM.YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "b677ede3b5f46fb3",
        "type": "link in",
        "z": "f3fb093646919445",
        "g": "720d21e31012ce8d",
        "name": "refreshSwitch",
        "links": [
            "09d7aba9ef1ed554",
            "f01e837037861082",
            "19895dc6bb279080"
        ],
        "x": 235,
        "y": 540,
        "wires": [
            [
                "8c3fc4fc2376c698"
            ]
        ]
    },
    {
        "id": "c2630ebb166f8456",
        "type": "function",
        "z": "f3fb093646919445",
        "g": "720d21e31012ce8d",
        "name": "filter",
        "func": "const ret1 = {};\nmsg.payload.filter(e => e.channelType.toLowerCase() === msg.filter.toLowerCase()).forEach(e => {\n    ret1[e.ioBrokerChannelPath] = e;\n})\nmsg.payload = Object.fromEntries(Object.entries(ret1).map(([key, e]) => [key,{\n    name: e.name, \n    adapterName:e.adapterName, \n    channelType: e.channelType, \n    room: e.room, \n    place: e.place, \n    ioBrokerChannelPath: e.ioBrokerChannelPath, \n    availableStyleButtons:e.availableStyleButtons.filter(ee => ee.role === \"button\" )\n    //availableStyleButtons:e.availableStyleButtons\n}]));\nreturn [msg, {payload:Object.values(msg.payload)}];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 540,
        "wires": [
            [
                "d0f1f5519ed56be8"
            ],
            []
        ],
        "outputLabels": [
            "object",
            "array"
        ]
    },
    {
        "id": "68f1a6cb6436281d",
        "type": "switch",
        "z": "f3fb093646919445",
        "g": "4eddd4e8ac78ecab",
        "name": "",
        "property": "command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "init",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "refreshSwitch",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 120,
        "wires": [
            [
                "49af7241b4750be3"
            ],
            [
                "09d7aba9ef1ed554"
            ]
        ],
        "outputLabels": [
            "initSwitch",
            "refreshSwitch"
        ]
    },
    {
        "id": "49af7241b4750be3",
        "type": "link out",
        "z": "f3fb093646919445",
        "g": "4eddd4e8ac78ecab",
        "name": "initSwitch",
        "mode": "link",
        "links": [
            "d8a4f609a9263903"
        ],
        "x": 545,
        "y": 100,
        "wires": []
    },
    {
        "id": "09d7aba9ef1ed554",
        "type": "link out",
        "z": "f3fb093646919445",
        "g": "4eddd4e8ac78ecab",
        "name": "refreshSwitch",
        "mode": "link",
        "links": [
            "b677ede3b5f46fb3"
        ],
        "x": 545,
        "y": 140,
        "wires": []
    },
    {
        "id": "8c3fc4fc2376c698",
        "type": "function",
        "z": "f3fb093646919445",
        "g": "720d21e31012ce8d",
        "name": "url",
        "func": "msg.url = flow.get('$parent.sgWebAPIURL') + 'iobroker/miioGetSimpleMappingGet'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 540,
        "wires": [
            [
                "00f65cc87683e2ca"
            ]
        ]
    },
    {
        "id": "00f65cc87683e2ca",
        "type": "http request",
        "z": "f3fb093646919445",
        "g": "720d21e31012ce8d",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 560,
        "y": 540,
        "wires": [
            [
                "fe4784a6ed7b749b"
            ]
        ]
    },
    {
        "id": "fe4784a6ed7b749b",
        "type": "change",
        "z": "f3fb093646919445",
        "g": "720d21e31012ce8d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.result",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 540,
        "wires": [
            [
                "c2630ebb166f8456"
            ]
        ]
    },
    {
        "id": "45986278e39e3ddd",
        "type": "function",
        "z": "f3fb093646919445",
        "g": "fb8ff4807cb75bd2",
        "name": "init",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 400,
        "wires": [
            [
                "4d9d298728e347f5"
            ]
        ],
        "outputLabels": [
            "objects"
        ]
    },
    {
        "id": "d8a4f609a9263903",
        "type": "link in",
        "z": "f3fb093646919445",
        "g": "fb8ff4807cb75bd2",
        "name": "initSwitch",
        "links": [
            "49af7241b4750be3",
            "3f062304b0170e9d"
        ],
        "x": 235,
        "y": 400,
        "wires": [
            [
                "45986278e39e3ddd"
            ]
        ]
    },
    {
        "id": "d0f1f5519ed56be8",
        "type": "change",
        "z": "f3fb093646919445",
        "g": "720d21e31012ce8d",
        "name": "clean",
        "rules": [
            {
                "t": "delete",
                "p": "_event",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "url",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "method",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "statusCode",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "headers",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "responseUrl",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "redirectList",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "retry",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "id",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1220,
        "y": 520,
        "wires": [
            [
                "2d5215b2bac98bff"
            ]
        ]
    },
    {
        "id": "79f421bdae8df7b4",
        "type": "switch",
        "z": "f3fb093646919445",
        "g": "4eddd4e8ac78ecab",
        "name": "in pl",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "mihome",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 270,
        "y": 120,
        "wires": [
            [
                "68f1a6cb6436281d"
            ]
        ],
        "outputLabels": [
            "initSwitch"
        ]
    },
    {
        "id": "dea690eed3d81111",
        "type": "comment",
        "z": "f3fb093646919445",
        "name": "MiHome - Switch Consumer Mapping Device",
        "info": "",
        "x": 230,
        "y": 20,
        "wires": []
    },
    {
        "id": "2d5215b2bac98bff",
        "type": "change",
        "z": "f3fb093646919445",
        "g": "720d21e31012ce8d",
        "name": "set new Status",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"fill\":\"green\",\"text\":\"MiHome refresh for MobilerSchalter finished\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "4d9d298728e347f5",
        "type": "change",
        "z": "f3fb093646919445",
        "g": "fb8ff4807cb75bd2",
        "name": "set new Status",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"fill\":\"green\",\"text\":\"MiHome init for MobilerSchalter finished\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "12f70f3d1503da9a",
        "type": "switch",
        "z": "2a5c9ff66c4fad1d",
        "g": "6e2d3df7f56df82c",
        "name": "",
        "property": "command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "init",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "refreshSwitch",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "refreshConsumers",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "switch",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 510,
        "y": 140,
        "wires": [
            [
                "8bb028bd06ba4286"
            ],
            [
                "23df6109aba4716f"
            ],
            [
                "f4eb30be71f216f9"
            ],
            [
                "c066a98d6489c1cd"
            ]
        ],
        "outputLabels": [
            "initSwitch",
            "refreshSwitch",
            "refreshConsumers",
            "switch"
        ]
    },
    {
        "id": "8bb028bd06ba4286",
        "type": "link out",
        "z": "2a5c9ff66c4fad1d",
        "g": "6e2d3df7f56df82c",
        "name": "initSwitch",
        "mode": "link",
        "links": [
            "45b646d30eede878"
        ],
        "x": 645,
        "y": 100,
        "wires": []
    },
    {
        "id": "23df6109aba4716f",
        "type": "link out",
        "z": "2a5c9ff66c4fad1d",
        "g": "6e2d3df7f56df82c",
        "name": "refreshSwitch",
        "mode": "link",
        "links": [
            "8893ee69347cdfdb"
        ],
        "x": 645,
        "y": 140,
        "wires": []
    },
    {
        "id": "74a06fc0c6163540",
        "type": "switch",
        "z": "2a5c9ff66c4fad1d",
        "g": "6e2d3df7f56df82c",
        "name": "in pl",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "shelly",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 140,
        "wires": [
            [
                "12f70f3d1503da9a"
            ]
        ],
        "outputLabels": [
            "initSwitch"
        ]
    },
    {
        "id": "7ede5037ef8c5578",
        "type": "comment",
        "z": "2a5c9ff66c4fad1d",
        "name": "Shelly - Switch Consumer Mapping Device",
        "info": "",
        "x": 220,
        "y": 20,
        "wires": []
    },
    {
        "id": "8f4f64a0d21b848d",
        "type": "function",
        "z": "2a5c9ff66c4fad1d",
        "g": "90623cc58d225d1e",
        "name": "init",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 440,
        "wires": [
            [
                "d82a8eac7c901079",
                "4bf55df7d455c3f4"
            ]
        ],
        "outputLabels": [
            "objects"
        ]
    },
    {
        "id": "45b646d30eede878",
        "type": "link in",
        "z": "2a5c9ff66c4fad1d",
        "g": "90623cc58d225d1e",
        "name": "initSwitch",
        "links": [
            "8bb028bd06ba4286"
        ],
        "x": 215,
        "y": 440,
        "wires": [
            [
                "8f4f64a0d21b848d"
            ]
        ]
    },
    {
        "id": "d82a8eac7c901079",
        "type": "change",
        "z": "2a5c9ff66c4fad1d",
        "g": "90623cc58d225d1e",
        "name": "set new Status",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"fill\":\"green\",\"text\":\"Shelly init finished\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 480,
        "wires": [
            [
                "fab1d24c63f22c02"
            ]
        ]
    },
    {
        "id": "70bbf05885123c8f",
        "type": "ioBroker list",
        "z": "2a5c9ff66c4fad1d",
        "g": "83627ee6b876f4c5",
        "name": "get all shelly channels with Relays",
        "topic": "shelly.0.*",
        "objType": "channel",
        "regex": "\\bRelay|\\bCover",
        "asArray": "true",
        "onlyIDs": "false",
        "withValues": "false",
        "x": 540,
        "y": 820,
        "wires": [
            [
                "63cd05e60ae46765",
                "baa3f696c8f94250"
            ]
        ]
    },
    {
        "id": "baa3f696c8f94250",
        "type": "function",
        "z": "2a5c9ff66c4fad1d",
        "g": "83627ee6b876f4c5",
        "name": "create List and filter channelType",
        "func": "const tmpPL = {};\nfor(const channel of msg.payload){\n    const subs = channel.common.name.split(' ');\n    const type = subs[0] ? subs[0] : ''\n    if((subs[0] !== 'Channel' && ['Storen', 'Lichtschalter'].includes(type) )){\n        tmpPL[`${channel._id}`] = {\n            id:channel._id,\n            name:channel.common.name,\n            adapterName:'Shelly',\n            channelType:type,\n            room:subs[1] ? subs[1] : '',\n            place:subs[2] ? subs[2] : '',\n            type:type,\n            info:subs.join(\" \"),\n            scenes: (type === 'Storen')\n                ? [\n                    {\n                        id:channel._id + '.Open',\n                        name:'Open'\n                    },\n                    {\n                        id:channel._id + '.Stop',\n                        name:'Stop'\n                    },\n                    {\n                        id:channel._id + '.Close',\n                        name:'Close'\n                    }\n                ]\n                : []\n        }\n    }\n}\nmsg.payload = tmpPL\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 800,
        "wires": [
            [
                "ce9aa9572b944141"
            ]
        ]
    },
    {
        "id": "63cd05e60ae46765",
        "type": "change",
        "z": "2a5c9ff66c4fad1d",
        "g": "83627ee6b876f4c5",
        "name": "set new Status",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"fill\":\"green\",\"text\":\"Shelly refresh finished\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 840,
        "wires": [
            [
                "a791314d33e08fe6"
            ]
        ]
    },
    {
        "id": "fbd240f58d09b3ea",
        "type": "switch",
        "z": "2a5c9ff66c4fad1d",
        "g": "83627ee6b876f4c5",
        "name": "filter",
        "property": "filter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "wandschalter",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Mobilerschalter",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 310,
        "y": 820,
        "wires": [
            [
                "70bbf05885123c8f"
            ],
            [
                "70bbf05885123c8f"
            ]
        ],
        "outputLabels": [
            "wandschalter",
            "Mobilerschalter"
        ]
    },
    {
        "id": "de4e8fd389b4d55a",
        "type": "link in",
        "z": "2a5c9ff66c4fad1d",
        "g": "83627ee6b876f4c5",
        "name": "initSwitch",
        "links": [
            "f4eb30be71f216f9"
        ],
        "x": 215,
        "y": 820,
        "wires": [
            [
                "fbd240f58d09b3ea"
            ]
        ]
    },
    {
        "id": "ce9aa9572b944141",
        "type": "link out",
        "z": "2a5c9ff66c4fad1d",
        "g": "83627ee6b876f4c5",
        "name": "",
        "mode": "link",
        "links": [
            "7178b63dbec26716"
        ],
        "x": 1255,
        "y": 800,
        "wires": []
    },
    {
        "id": "a791314d33e08fe6",
        "type": "link out",
        "z": "2a5c9ff66c4fad1d",
        "g": "83627ee6b876f4c5",
        "name": "",
        "mode": "link",
        "links": [
            "75276020a1afd395"
        ],
        "x": 1255,
        "y": 840,
        "wires": []
    },
    {
        "id": "f4eb30be71f216f9",
        "type": "link out",
        "z": "2a5c9ff66c4fad1d",
        "g": "6e2d3df7f56df82c",
        "name": "",
        "mode": "link",
        "links": [
            "de4e8fd389b4d55a"
        ],
        "x": 645,
        "y": 180,
        "wires": []
    },
    {
        "id": "7178b63dbec26716",
        "type": "link in",
        "z": "2a5c9ff66c4fad1d",
        "name": "",
        "links": [
            "4bf55df7d455c3f4",
            "86ca891fa5e2cedb",
            "ce9aa9572b944141"
        ],
        "x": 1705,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "4bf55df7d455c3f4",
        "type": "link out",
        "z": "2a5c9ff66c4fad1d",
        "g": "90623cc58d225d1e",
        "name": "",
        "mode": "link",
        "links": [
            "7178b63dbec26716"
        ],
        "x": 1255,
        "y": 440,
        "wires": []
    },
    {
        "id": "75276020a1afd395",
        "type": "link in",
        "z": "2a5c9ff66c4fad1d",
        "name": "",
        "links": [
            "71999253aaed51f8",
            "fab1d24c63f22c02",
            "a791314d33e08fe6"
        ],
        "x": 1705,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "fab1d24c63f22c02",
        "type": "link out",
        "z": "2a5c9ff66c4fad1d",
        "g": "90623cc58d225d1e",
        "name": "",
        "mode": "link",
        "links": [
            "75276020a1afd395"
        ],
        "x": 1255,
        "y": 480,
        "wires": []
    },
    {
        "id": "87427ab93fde3961",
        "type": "ioBroker out",
        "z": "2a5c9ff66c4fad1d",
        "g": "1ac7ade21d6999b6",
        "name": "",
        "topic": "",
        "ack": "false",
        "autoCreate": "false",
        "stateName": "",
        "role": "",
        "payloadType": "",
        "readonly": "",
        "stateUnit": "",
        "stateMin": "",
        "stateMax": "",
        "x": 1480,
        "y": 940,
        "wires": []
    },
    {
        "id": "18448c756276d352",
        "type": "ioBroker get",
        "z": "2a5c9ff66c4fad1d",
        "g": "1ac7ade21d6999b6",
        "name": "Read current Lampe Status",
        "topic": "",
        "attrname": "result",
        "payloadType": "value",
        "errOnInvalidState": "nothing",
        "x": 820,
        "y": 940,
        "wires": [
            [
                "3cb7e02d4514c813"
            ]
        ]
    },
    {
        "id": "5d916b2219ff8dd7",
        "type": "function",
        "z": "2a5c9ff66c4fad1d",
        "g": "1ac7ade21d6999b6",
        "name": "set relay topic",
        "func": "msg.topic = msg.mapping.consumerIOBrokerChannelPath + '.Switch';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 940,
        "wires": [
            [
                "18448c756276d352"
            ]
        ]
    },
    {
        "id": "3cb7e02d4514c813",
        "type": "function",
        "z": "2a5c9ff66c4fad1d",
        "g": "1ac7ade21d6999b6",
        "name": "set Switch",
        "func": "msg.topic = msg.mapping.consumerIOBrokerChannelPath + '.Switch';\nmsg.payload = !msg.result;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 940,
        "wires": [
            [
                "088e91780e312a0e"
            ]
        ]
    },
    {
        "id": "9f8584ebea9b099f",
        "type": "change",
        "z": "2a5c9ff66c4fad1d",
        "g": "1ac7ade21d6999b6",
        "name": "set new Status",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"fill\":\"green\",\"text\":\"Shelly switched\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 1020,
        "wires": [
            [
                "5d93fac9545bf507"
            ]
        ]
    },
    {
        "id": "67238bd58ba74634",
        "type": "link in",
        "z": "2a5c9ff66c4fad1d",
        "g": "1ac7ade21d6999b6",
        "name": "",
        "links": [
            "c066a98d6489c1cd"
        ],
        "x": 215,
        "y": 980,
        "wires": [
            [
                "931fc9ec79ebfa64"
            ]
        ]
    },
    {
        "id": "5d93fac9545bf507",
        "type": "link out",
        "z": "2a5c9ff66c4fad1d",
        "g": "1ac7ade21d6999b6",
        "name": "",
        "mode": "link",
        "links": [],
        "x": 1645,
        "y": 1020,
        "wires": []
    },
    {
        "id": "ee38ff30dbc03563",
        "type": "link out",
        "z": "2a5c9ff66c4fad1d",
        "g": "1ac7ade21d6999b6",
        "name": "",
        "mode": "link",
        "links": [],
        "x": 1645,
        "y": 980,
        "wires": []
    },
    {
        "id": "c066a98d6489c1cd",
        "type": "link out",
        "z": "2a5c9ff66c4fad1d",
        "g": "6e2d3df7f56df82c",
        "name": "",
        "mode": "link",
        "links": [
            "67238bd58ba74634"
        ],
        "x": 645,
        "y": 220,
        "wires": []
    },
    {
        "id": "931fc9ec79ebfa64",
        "type": "switch",
        "z": "2a5c9ff66c4fad1d",
        "g": "1ac7ade21d6999b6",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Relay",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Cover",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 980,
        "wires": [
            [
                "5d916b2219ff8dd7"
            ],
            [
                "ff6bb2971e82fe70"
            ]
        ],
        "outputLabels": [
            "Relay",
            "Cover"
        ]
    },
    {
        "id": "088e91780e312a0e",
        "type": "change",
        "z": "2a5c9ff66c4fad1d",
        "g": "1ac7ade21d6999b6",
        "name": ".",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 980,
        "wires": [
            [
                "87427ab93fde3961",
                "ee38ff30dbc03563",
                "9f8584ebea9b099f"
            ]
        ]
    },
    {
        "id": "ff6bb2971e82fe70",
        "type": "function",
        "z": "2a5c9ff66c4fad1d",
        "g": "1ac7ade21d6999b6",
        "name": "set cover",
        "func": "msg.topic = msg.mapping.consumerIOBrokerStatePath;\nmsg.payload = true;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 1000,
        "wires": [
            [
                "088e91780e312a0e"
            ]
        ]
    },
    {
        "id": "8893ee69347cdfdb",
        "type": "link in",
        "z": "2a5c9ff66c4fad1d",
        "g": "baad898d7c78a816",
        "name": "refreshSwitch",
        "links": [
            "23df6109aba4716f"
        ],
        "x": 215,
        "y": 580,
        "wires": [
            [
                "122fd3c162c6d9ac"
            ]
        ]
    },
    {
        "id": "122fd3c162c6d9ac",
        "type": "ioBroker list",
        "z": "2a5c9ff66c4fad1d",
        "g": "baad898d7c78a816",
        "name": "get all shelly channels with Relays",
        "topic": "shelly.0.*",
        "objType": "channel",
        "regex": "\\bRelay|\\bCover",
        "asArray": "true",
        "onlyIDs": "false",
        "withValues": "false",
        "x": 410,
        "y": 580,
        "wires": [
            [
                "d4170e5b930ad56c"
            ]
        ]
    },
    {
        "id": "d4170e5b930ad56c",
        "type": "function",
        "z": "2a5c9ff66c4fad1d",
        "g": "baad898d7c78a816",
        "name": "create List and filter channelType",
        "func": "const tmpPL = {};\nfor(const channel of msg.payload){\n    const subs = channel.common.name.split(' ')\n    if((!msg.filter && subs[0] !== 'Channel' )|| subs[0].toLowerCase() === msg.filter.toLowerCase()){\n        tmpPL[`${channel._id}`] = {\n            name:channel.common.name,\n            adapterName:'Shelly',\n            channelType:subs[0] ? subs[0] : '',\n            room:subs[1] ? subs[1] : '',\n            place:subs[2] ? subs[2] : '',\n            availableStyles: [\n                'input.push',\n                //'input.on',\n                //'input.off',\n                'switch.on',\n                'switch.off'\n            ]\n        }\n    }\n}\nmsg.payload = tmpPL\nreturn [msg, {payload:Object.values(msg.payload)}];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 580,
        "wires": [
            [
                "3ee5aaea9040c9de",
                "86ca891fa5e2cedb"
            ],
            []
        ],
        "outputLabels": [
            "object",
            "array"
        ]
    },
    {
        "id": "3ee5aaea9040c9de",
        "type": "change",
        "z": "2a5c9ff66c4fad1d",
        "g": "baad898d7c78a816",
        "name": "set new Status",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"fill\":\"green\",\"text\":\"Shelly refresh finished\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 620,
        "wires": [
            [
                "71999253aaed51f8"
            ]
        ]
    },
    {
        "id": "86ca891fa5e2cedb",
        "type": "link out",
        "z": "2a5c9ff66c4fad1d",
        "g": "baad898d7c78a816",
        "name": "",
        "mode": "link",
        "links": [
            "7178b63dbec26716"
        ],
        "x": 1255,
        "y": 580,
        "wires": []
    },
    {
        "id": "71999253aaed51f8",
        "type": "link out",
        "z": "2a5c9ff66c4fad1d",
        "g": "baad898d7c78a816",
        "name": "",
        "mode": "link",
        "links": [
            "75276020a1afd395"
        ],
        "x": 1255,
        "y": 620,
        "wires": []
    },
    {
        "id": "a86c40700b24cb5c",
        "type": "ioBroker list",
        "z": "14ce7768b920ca39",
        "g": "dc295ae887fd872b",
        "name": "get all hue Lampen Channels (Zimmer/Zone)",
        "topic": "hue.0.*",
        "objType": "channel",
        "regex": "\\bZimmer|\\bZone",
        "asArray": "true",
        "onlyIDs": "false",
        "withValues": "false",
        "x": 670,
        "y": 500,
        "wires": [
            [
                "054c8b2e7e6c6512",
                "192ae33a0b42e9bb"
            ]
        ]
    },
    {
        "id": "192ae33a0b42e9bb",
        "type": "function",
        "z": "14ce7768b920ca39",
        "g": "dc295ae887fd872b",
        "name": "create List and filter channelType",
        "func": "const tmpPL = {};\nfor(const channel of msg.payload){\n    const subs = channel.common.name.split(' ')\n    tmpPL[`${channel._id}`] = {\n        id:channel._id,\n        name:channel.common.name,\n        adapterName:'Hue',\n        channelType:'Lampe',\n        type:subs.shift(),\n        info:subs.join(\" \"),\n        scenes:[]\n    }\n}\nmsg.payload = tmpPL\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 580,
        "wires": [
            [
                "df414c3e2f9802d5"
            ]
        ]
    },
    {
        "id": "054c8b2e7e6c6512",
        "type": "change",
        "z": "14ce7768b920ca39",
        "g": "dc295ae887fd872b",
        "name": "set new Status",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"fill\":\"green\",\"text\":\"Hue refresh finished\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 500,
        "wires": [
            [
                "10aefccfac2d9d2e"
            ]
        ]
    },
    {
        "id": "df414c3e2f9802d5",
        "type": "split",
        "z": "14ce7768b920ca39",
        "g": "ad69a369d5d411be",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1030,
        "y": 580,
        "wires": [
            [
                "71d803d948586175"
            ]
        ]
    },
    {
        "id": "d46fd3b0aa7baead",
        "type": "join",
        "z": "14ce7768b920ca39",
        "g": "ad69a369d5d411be",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1530,
        "y": 700,
        "wires": [
            [
                "a8e1d10b3e4aa4e4"
            ]
        ]
    },
    {
        "id": "88b5123ec0a52a86",
        "type": "change",
        "z": "14ce7768b920ca39",
        "g": "ad69a369d5d411be",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "tmp",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1370,
        "y": 700,
        "wires": [
            [
                "d46fd3b0aa7baead"
            ]
        ]
    },
    {
        "id": "71d803d948586175",
        "type": "change",
        "z": "14ce7768b920ca39",
        "g": "ad69a369d5d411be",
        "name": "Create Topic & tmp",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload.id",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "tmp",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 580,
        "wires": [
            [
                "6a2ec7f01db16bc1"
            ]
        ]
    },
    {
        "id": "4035eb2352ecfd14",
        "type": "ioBroker list",
        "z": "14ce7768b920ca39",
        "g": "ad69a369d5d411be",
        "name": "get all scene",
        "topic": "",
        "objType": "state",
        "regex": "\\bscene_",
        "asArray": "true",
        "onlyIDs": "false",
        "withValues": "false",
        "x": 1210,
        "y": 640,
        "wires": [
            [
                "3c8322198b834078"
            ]
        ]
    },
    {
        "id": "6a2ec7f01db16bc1",
        "type": "function",
        "z": "14ce7768b920ca39",
        "g": "ad69a369d5d411be",
        "name": "add a *",
        "func": "msg.topic = msg.topic + \".*\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 580,
        "wires": [
            [
                "4035eb2352ecfd14"
            ]
        ]
    },
    {
        "id": "3c8322198b834078",
        "type": "function",
        "z": "14ce7768b920ca39",
        "g": "ad69a369d5d411be",
        "name": "create List and filter channelType",
        "func": "for(const scene of msg.payload){\n    msg.tmp.scenes.push({\n        id:scene._id,\n        name:scene.common.name\n    })\n}\nmsg.payload = msg.tmp\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 700,
        "wires": [
            [
                "88b5123ec0a52a86"
            ]
        ]
    },
    {
        "id": "cf2fe18c5c468037",
        "type": "comment",
        "z": "14ce7768b920ca39",
        "name": "Hue - Switch Consumer Mapping Device",
        "info": "",
        "x": 260,
        "y": 40,
        "wires": []
    },
    {
        "id": "412fa5d342764b09",
        "type": "function",
        "z": "14ce7768b920ca39",
        "g": "8946da95c7d91a60",
        "name": "init",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 400,
        "wires": [
            [
                "42e8d4519fe61afe",
                "8e71790c1ddb2c56"
            ]
        ],
        "outputLabels": [
            "objects"
        ]
    },
    {
        "id": "c9cba3a3f5432784",
        "type": "link in",
        "z": "14ce7768b920ca39",
        "g": "8946da95c7d91a60",
        "name": "init",
        "links": [
            "071a794bf78da75c"
        ],
        "x": 235,
        "y": 400,
        "wires": [
            [
                "412fa5d342764b09"
            ]
        ]
    },
    {
        "id": "603ccdc66f3cf421",
        "type": "link in",
        "z": "14ce7768b920ca39",
        "g": "dc295ae887fd872b",
        "name": "",
        "links": [
            "b2302f119246dc7a"
        ],
        "x": 235,
        "y": 500,
        "wires": [
            [
                "0d204a960be5dd95"
            ]
        ]
    },
    {
        "id": "0d204a960be5dd95",
        "type": "switch",
        "z": "14ce7768b920ca39",
        "g": "dc295ae887fd872b",
        "name": "filter",
        "property": "filter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "wandschalter",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Mobilerschalter",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 500,
        "wires": [
            [
                "a86c40700b24cb5c"
            ],
            [
                "a86c40700b24cb5c"
            ]
        ],
        "outputLabels": [
            "wandschalter",
            "Mobilerschalter"
        ]
    },
    {
        "id": "42e8d4519fe61afe",
        "type": "change",
        "z": "14ce7768b920ca39",
        "g": "8946da95c7d91a60",
        "name": "set new Status",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"fill\":\"green\",\"text\":\"Hue refresh finished\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1400,
        "y": 360,
        "wires": [
            [
                "24c92333848d6777"
            ]
        ]
    },
    {
        "id": "38ca08c8f2594498",
        "type": "link in",
        "z": "14ce7768b920ca39",
        "g": "be55fa3cfa708c56",
        "name": "",
        "links": [
            "c6c1eb945d2da304"
        ],
        "x": 235,
        "y": 1080,
        "wires": [
            [
                "3806378a9d80f656"
            ]
        ]
    },
    {
        "id": "5337bde0491572f6",
        "type": "ioBroker out",
        "z": "14ce7768b920ca39",
        "g": "be55fa3cfa708c56",
        "name": "",
        "topic": "",
        "ack": "false",
        "autoCreate": "false",
        "stateName": "",
        "role": "",
        "payloadType": "",
        "readonly": "",
        "stateUnit": "",
        "stateMin": "",
        "stateMax": "",
        "x": 1180,
        "y": 1120,
        "wires": []
    },
    {
        "id": "6b897fa9ded0fdbe",
        "type": "ioBroker get",
        "z": "14ce7768b920ca39",
        "g": "be55fa3cfa708c56",
        "name": "Read current Lampe Status",
        "topic": "",
        "attrname": "result",
        "payloadType": "value",
        "errOnInvalidState": "nothing",
        "x": 580,
        "y": 1080,
        "wires": [
            [
                "7e092ac45b318bb0"
            ]
        ]
    },
    {
        "id": "3806378a9d80f656",
        "type": "function",
        "z": "14ce7768b920ca39",
        "g": "be55fa3cfa708c56",
        "name": "set topic",
        "func": "msg.topic = (msg.mapping.consumerIOBrokerChannelPath !== 'hue.0.All.anyOn') ? msg.mapping.consumerIOBrokerChannelPath + '.on' : msg.mapping.consumerIOBrokerChannelPath;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1080,
        "wires": [
            [
                "6b897fa9ded0fdbe"
            ]
        ]
    },
    {
        "id": "7e092ac45b318bb0",
        "type": "function",
        "z": "14ce7768b920ca39",
        "g": "be55fa3cfa708c56",
        "name": "set topic",
        "func": "const switchOff = (selectedLampeID) => {\n    msg.topic = (selectedLampeID !== 'hue.0.All.anyOn') ? selectedLampeID + '.on' : selectedLampeID;\n    msg.payload = false;\n    return msg;\n}\n\nconst switchOn = (selectedLampeID) => {\n    msg.topic = selectedLampeID + '.on';\n    msg.payload = true;\n    return msg;\n}\n\nconst switchScene = (selectedLampeID, selectedSceneID) => {\n    const msg1 = {}\n    msg1.topic = selectedLampeID + '.on'\n    msg1.payload = true\n    msg.topic = selectedSceneID\n    msg.payload = true\n    return [msg, msg1];\n    //return msg;\n}\n\nif(msg.result){\n    return switchOff(msg.mapping.consumerIOBrokerChannelPath);\n}\nreturn (msg.mapping.consumerIOBrokerStatePath)\n    ? switchScene(msg.mapping.consumerIOBrokerChannelPath, msg.mapping.consumerIOBrokerStatePath) \n    : switchOn(msg.mapping.consumerIOBrokerChannelPath);",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1080,
        "wires": [
            [
                "5337bde0491572f6",
                "c3fec32d64a2e3a6",
                "242e587788cd3f39"
            ],
            [
                "5337bde0491572f6"
            ]
        ]
    },
    {
        "id": "c3fec32d64a2e3a6",
        "type": "change",
        "z": "14ce7768b920ca39",
        "g": "be55fa3cfa708c56",
        "name": "set new Status",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"fill\":\"green\",\"text\":\"Hue Lampe set\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 1160,
        "wires": [
            [
                "36dbbb80267d3b9e"
            ]
        ]
    },
    {
        "id": "d33b25a0b1a82156",
        "type": "link in",
        "z": "14ce7768b920ca39",
        "name": "",
        "links": [
            "10aefccfac2d9d2e",
            "36dbbb80267d3b9e",
            "24c92333848d6777",
            "de5aceaff14cabf6"
        ],
        "x": 1735,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "10aefccfac2d9d2e",
        "type": "link out",
        "z": "14ce7768b920ca39",
        "g": "dc295ae887fd872b",
        "name": "",
        "mode": "link",
        "links": [
            "d33b25a0b1a82156"
        ],
        "x": 1665,
        "y": 500,
        "wires": []
    },
    {
        "id": "36dbbb80267d3b9e",
        "type": "link out",
        "z": "14ce7768b920ca39",
        "g": "be55fa3cfa708c56",
        "name": "",
        "mode": "link",
        "links": [
            "d33b25a0b1a82156"
        ],
        "x": 1665,
        "y": 1160,
        "wires": []
    },
    {
        "id": "24c92333848d6777",
        "type": "link out",
        "z": "14ce7768b920ca39",
        "g": "8946da95c7d91a60",
        "name": "",
        "mode": "link",
        "links": [
            "d33b25a0b1a82156"
        ],
        "x": 1665,
        "y": 360,
        "wires": []
    },
    {
        "id": "13d3ad7b0bb54bfd",
        "type": "link in",
        "z": "14ce7768b920ca39",
        "name": "",
        "links": [
            "8e71790c1ddb2c56",
            "ab11bae1af10ac0b",
            "242e587788cd3f39",
            "5ed35c680b030820"
        ],
        "x": 1735,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "8e71790c1ddb2c56",
        "type": "link out",
        "z": "14ce7768b920ca39",
        "g": "8946da95c7d91a60",
        "name": "",
        "mode": "link",
        "links": [
            "13d3ad7b0bb54bfd"
        ],
        "x": 1665,
        "y": 400,
        "wires": []
    },
    {
        "id": "ab11bae1af10ac0b",
        "type": "link out",
        "z": "14ce7768b920ca39",
        "g": "dc295ae887fd872b",
        "name": "",
        "mode": "link",
        "links": [
            "13d3ad7b0bb54bfd"
        ],
        "x": 1825,
        "y": 700,
        "wires": []
    },
    {
        "id": "242e587788cd3f39",
        "type": "link out",
        "z": "14ce7768b920ca39",
        "g": "be55fa3cfa708c56",
        "name": "",
        "mode": "link",
        "links": [
            "13d3ad7b0bb54bfd"
        ],
        "x": 1665,
        "y": 1080,
        "wires": []
    },
    {
        "id": "f3eabd0beb5d4265",
        "type": "switch",
        "z": "14ce7768b920ca39",
        "g": "dc59e02c193d10fc",
        "name": "",
        "property": "command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "init",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "refreshConsumers",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "refreshSwitch",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "switch",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 410,
        "y": 180,
        "wires": [
            [
                "071a794bf78da75c"
            ],
            [
                "b2302f119246dc7a"
            ],
            [
                "53f89d972e28c673"
            ],
            [
                "c6c1eb945d2da304"
            ]
        ],
        "outputLabels": [
            "initSwitch",
            "refreshConsumers",
            "refreshSwitch",
            "switch"
        ]
    },
    {
        "id": "071a794bf78da75c",
        "type": "link out",
        "z": "14ce7768b920ca39",
        "g": "dc59e02c193d10fc",
        "name": "init",
        "mode": "link",
        "links": [
            "c9cba3a3f5432784"
        ],
        "x": 525,
        "y": 120,
        "wires": []
    },
    {
        "id": "b2302f119246dc7a",
        "type": "link out",
        "z": "14ce7768b920ca39",
        "g": "dc59e02c193d10fc",
        "name": "refreshConsumer",
        "mode": "link",
        "links": [
            "603ccdc66f3cf421"
        ],
        "x": 525,
        "y": 160,
        "wires": []
    },
    {
        "id": "b0a745975e027d4d",
        "type": "switch",
        "z": "14ce7768b920ca39",
        "g": "dc59e02c193d10fc",
        "name": "in pl",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "hue",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 270,
        "y": 180,
        "wires": [
            [
                "f3eabd0beb5d4265"
            ]
        ],
        "outputLabels": [
            "initSwitch"
        ]
    },
    {
        "id": "c6c1eb945d2da304",
        "type": "link out",
        "z": "14ce7768b920ca39",
        "g": "dc59e02c193d10fc",
        "name": "",
        "mode": "link",
        "links": [
            "38ca08c8f2594498"
        ],
        "x": 525,
        "y": 240,
        "wires": []
    },
    {
        "id": "53f89d972e28c673",
        "type": "link out",
        "z": "14ce7768b920ca39",
        "g": "dc59e02c193d10fc",
        "name": "",
        "mode": "link",
        "links": [
            "66f8273f56f877e0"
        ],
        "x": 525,
        "y": 200,
        "wires": []
    },
    {
        "id": "66f8273f56f877e0",
        "type": "link in",
        "z": "14ce7768b920ca39",
        "g": "71e4f9620c065295",
        "name": "refreshSwitch",
        "links": [
            "53f89d972e28c673"
        ],
        "x": 235,
        "y": 840,
        "wires": [
            [
                "daf1f413e80e0fe5"
            ]
        ]
    },
    {
        "id": "ddfd8995031c3fe1",
        "type": "link out",
        "z": "14ce7768b920ca39",
        "g": "71e4f9620c065295",
        "name": "",
        "mode": "link",
        "links": [],
        "x": 985,
        "y": 960,
        "wires": []
    },
    {
        "id": "daf1f413e80e0fe5",
        "type": "ioBroker list",
        "z": "14ce7768b920ca39",
        "g": "71e4f9620c065295",
        "name": "get all hue channels with Mobilerschalter",
        "topic": "hue.0.*",
        "objType": "channel",
        "regex": "\\bMobilerschalter",
        "asArray": "true",
        "onlyIDs": "false",
        "withValues": "false",
        "x": 450,
        "y": 840,
        "wires": [
            [
                "a3aca04773d9dddf"
            ]
        ]
    },
    {
        "id": "a3aca04773d9dddf",
        "type": "function",
        "z": "14ce7768b920ca39",
        "g": "71e4f9620c065295",
        "name": "create List and filter channelType",
        "func": "const tmpPL = {};\nfor(const channel of msg.payload){\n    const subs = channel.common.name.split(' ')\n    if((!msg.filter && subs[0] !== 'Channel' )|| subs[0].toLowerCase() === msg.filter.toLowerCase()){\n        tmpPL[`${channel._id}`] = {\n            name:channel.common.name,\n            adapterName:'Hue',\n            channelType:subs[0] ? subs[0] : '',\n            room:subs[1] ? subs[1] : '',\n            place:subs[2] ? subs[2] : '',\n            availableStyleButtons: [\n                { name: 'Button 1', id: 'hue.0.Mobilerschalter_Büro_HueTab.lastupdated&%&34', role: 'button' },\n                { name: 'Button 2', id: 'hue.0.Mobilerschalter_Büro_HueTab.lastupdated&%&16', role: 'button' },\n                { name: 'Button 3', id: 'hue.0.Mobilerschalter_Büro_HueTab.lastupdated&%&17', role: 'button' },\n                { name: 'Button 4', id: 'hue.0.Mobilerschalter_Büro_HueTab.lastupdated&%&18', role: 'button' }\n            ]\n        }\n    }\n}\nmsg.payload = tmpPL\nreturn [msg, {payload:Object.values(msg.payload)}];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 840,
        "wires": [
            [
                "297977e4ebdc9f64",
                "5ed35c680b030820"
            ],
            [
                "ddfd8995031c3fe1"
            ]
        ],
        "outputLabels": [
            "object",
            "array"
        ]
    },
    {
        "id": "297977e4ebdc9f64",
        "type": "change",
        "z": "14ce7768b920ca39",
        "g": "71e4f9620c065295",
        "name": "set new Status",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"fill\":\"green\",\"text\":\"Hue refresh finished\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 880,
        "wires": [
            [
                "de5aceaff14cabf6"
            ]
        ]
    },
    {
        "id": "5ed35c680b030820",
        "type": "link out",
        "z": "14ce7768b920ca39",
        "g": "71e4f9620c065295",
        "name": "",
        "mode": "link",
        "links": [
            "13d3ad7b0bb54bfd"
        ],
        "x": 1275,
        "y": 840,
        "wires": []
    },
    {
        "id": "de5aceaff14cabf6",
        "type": "link out",
        "z": "14ce7768b920ca39",
        "g": "71e4f9620c065295",
        "name": "",
        "mode": "link",
        "links": [
            "d33b25a0b1a82156"
        ],
        "x": 1275,
        "y": 880,
        "wires": []
    },
    {
        "id": "a8e1d10b3e4aa4e4",
        "type": "function",
        "z": "14ce7768b920ca39",
        "g": "dc295ae887fd872b",
        "name": "add Specials",
        "func": "msg.payload['hue.0.All.anyOn'] = {\n    id: 'hue.0.All.anyOn',\n    name: 'Hue all',\n    adapterName: 'Hue',\n    channelType: 'Lampe',\n    type: 'Home',\n    info: 'Wollerau',\n    scenes: []\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 700,
        "wires": [
            [
                "ab11bae1af10ac0b"
            ]
        ]
    },
    {
        "id": "e419aa88280f4962",
        "type": "comment",
        "z": "164be6b67a87f9cb",
        "name": "Smartthings - Switch Consumer Mapping Device",
        "info": "",
        "x": 400,
        "y": 60,
        "wires": []
    },
    {
        "id": "faa50b888618f78e",
        "type": "switch",
        "z": "164be6b67a87f9cb",
        "g": "ddab64da02903325",
        "name": "",
        "property": "command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "init",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "refreshConsumers",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "switch",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 430,
        "y": 180,
        "wires": [
            [
                "3c02f87d30b56ac4"
            ],
            [
                "b7600645f32b5762"
            ],
            [
                "0f0e53e3db7f0632"
            ]
        ],
        "outputLabels": [
            "initSwitch",
            "refreshSwitch",
            "switch"
        ]
    },
    {
        "id": "3c02f87d30b56ac4",
        "type": "link out",
        "z": "164be6b67a87f9cb",
        "g": "ddab64da02903325",
        "name": "initSwitch",
        "mode": "link",
        "links": [
            "10f12116ddb33a2b"
        ],
        "x": 545,
        "y": 140,
        "wires": []
    },
    {
        "id": "b7600645f32b5762",
        "type": "link out",
        "z": "164be6b67a87f9cb",
        "g": "ddab64da02903325",
        "name": "refreshSwitch",
        "mode": "link",
        "links": [
            "80a5a5f2cf60c5cd",
            "ccd75a5da1661f4d"
        ],
        "x": 545,
        "y": 180,
        "wires": []
    },
    {
        "id": "f504f03fb899dd6e",
        "type": "switch",
        "z": "164be6b67a87f9cb",
        "g": "ddab64da02903325",
        "name": "in pl",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "smartthings",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 290,
        "y": 180,
        "wires": [
            [
                "faa50b888618f78e"
            ]
        ],
        "outputLabels": [
            "initSwitch"
        ]
    },
    {
        "id": "7685ebb832b100dd",
        "type": "function",
        "z": "164be6b67a87f9cb",
        "g": "b774d1cde5b050d9",
        "name": "init",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 320,
        "wires": [
            [
                "fddb602a4b3245a3",
                "dee837e82e6d137d"
            ]
        ],
        "outputLabels": [
            "objects"
        ]
    },
    {
        "id": "10f12116ddb33a2b",
        "type": "link in",
        "z": "164be6b67a87f9cb",
        "g": "b774d1cde5b050d9",
        "name": "initSwitch",
        "links": [
            "3c02f87d30b56ac4"
        ],
        "x": 255,
        "y": 320,
        "wires": [
            [
                "7685ebb832b100dd"
            ]
        ]
    },
    {
        "id": "c614bce773ef17d9",
        "type": "ioBroker list",
        "z": "164be6b67a87f9cb",
        "g": "f3136e65fb993a51",
        "name": "get all SmartThings Device",
        "topic": "smartthings.0.*",
        "objType": "device",
        "regex": "",
        "asArray": "true",
        "onlyIDs": "false",
        "withValues": "false",
        "x": 560,
        "y": 480,
        "wires": [
            [
                "a739d73faa0466c8",
                "c51de9d77d7ad9c3"
            ]
        ]
    },
    {
        "id": "c51de9d77d7ad9c3",
        "type": "function",
        "z": "164be6b67a87f9cb",
        "g": "f3136e65fb993a51",
        "name": "create List and filter channelType",
        "func": "const tmpPL = {};\nfor(const channel of msg.payload){\n    const subs = channel.common.name.split(' ');\n    if(channel.common && typeof channel.common.name === 'string' && channel.common.name.startsWith('OnOff'))\n    tmpPL[`${channel._id}`] = {\n        id:channel._id,\n        name:channel.common.name,\n        adapterName:'Smartthings',\n        channelType:'OnOff',\n        type:subs.shift(),\n        info:subs.join(\" \"),\n        scenes:[]\n    }\n}\nmsg.payload = tmpPL\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 540,
        "wires": [
            [
                "8a6ef6f7fb369c4f"
            ]
        ]
    },
    {
        "id": "a739d73faa0466c8",
        "type": "change",
        "z": "164be6b67a87f9cb",
        "g": "f3136e65fb993a51",
        "name": "set new Status",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"fill\":\"green\",\"text\":\"Smartthings refresh finished\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 460,
        "wires": [
            [
                "e47651209bef1e61"
            ]
        ]
    },
    {
        "id": "11024d8ae0308a76",
        "type": "switch",
        "z": "164be6b67a87f9cb",
        "g": "f3136e65fb993a51",
        "name": "filter",
        "property": "filter",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "wandschalter",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Mobilerschalter",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 480,
        "wires": [
            [
                "c614bce773ef17d9"
            ],
            [
                "c614bce773ef17d9"
            ]
        ],
        "outputLabels": [
            "wandschalter",
            "Mobilerschalter"
        ]
    },
    {
        "id": "80a5a5f2cf60c5cd",
        "type": "link in",
        "z": "164be6b67a87f9cb",
        "g": "f3136e65fb993a51",
        "name": "initSwitch",
        "links": [
            "b7600645f32b5762"
        ],
        "x": 255,
        "y": 480,
        "wires": [
            [
                "11024d8ae0308a76"
            ]
        ]
    },
    {
        "id": "fddb602a4b3245a3",
        "type": "change",
        "z": "164be6b67a87f9cb",
        "g": "b774d1cde5b050d9",
        "name": "set new Status",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"fill\":\"green\",\"text\":\"Smartthings init finished\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1380,
        "y": 360,
        "wires": [
            [
                "50eb16f1c4805b8f"
            ]
        ]
    },
    {
        "id": "0f0e53e3db7f0632",
        "type": "link out",
        "z": "164be6b67a87f9cb",
        "g": "ddab64da02903325",
        "name": "",
        "mode": "link",
        "links": [
            "b493234c7ae7246a"
        ],
        "x": 545,
        "y": 220,
        "wires": []
    },
    {
        "id": "6c27e7c3b07e9829",
        "type": "link in",
        "z": "164be6b67a87f9cb",
        "name": "",
        "links": [
            "8a6ef6f7fb369c4f",
            "79cee159c0decce6",
            "dee837e82e6d137d",
            "e845c4b0e8ad4130"
        ],
        "x": 1665,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "8a6ef6f7fb369c4f",
        "type": "link out",
        "z": "164be6b67a87f9cb",
        "g": "f3136e65fb993a51",
        "name": "",
        "mode": "link",
        "links": [
            "6c27e7c3b07e9829"
        ],
        "x": 1525,
        "y": 540,
        "wires": []
    },
    {
        "id": "dee837e82e6d137d",
        "type": "link out",
        "z": "164be6b67a87f9cb",
        "g": "b774d1cde5b050d9",
        "name": "",
        "mode": "link",
        "links": [
            "6c27e7c3b07e9829"
        ],
        "x": 1525,
        "y": 320,
        "wires": []
    },
    {
        "id": "50eb16f1c4805b8f",
        "type": "link out",
        "z": "164be6b67a87f9cb",
        "g": "b774d1cde5b050d9",
        "name": "",
        "mode": "link",
        "links": [
            "62fe0603e324af66"
        ],
        "x": 1525,
        "y": 360,
        "wires": []
    },
    {
        "id": "62fe0603e324af66",
        "type": "link in",
        "z": "164be6b67a87f9cb",
        "name": "",
        "links": [
            "50eb16f1c4805b8f",
            "e47651209bef1e61",
            "02cf9d08481ac276"
        ],
        "x": 1665,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "e47651209bef1e61",
        "type": "link out",
        "z": "164be6b67a87f9cb",
        "g": "f3136e65fb993a51",
        "name": "",
        "mode": "link",
        "links": [
            "62fe0603e324af66"
        ],
        "x": 1525,
        "y": 460,
        "wires": []
    },
    {
        "id": "d849044759438be7",
        "type": "ioBroker out",
        "z": "164be6b67a87f9cb",
        "g": "d7d1ce4144ef0cfd",
        "name": "",
        "topic": "",
        "ack": "false",
        "autoCreate": "false",
        "stateName": "",
        "role": "",
        "payloadType": "",
        "readonly": "",
        "stateUnit": "",
        "stateMin": "",
        "stateMax": "",
        "x": 1040,
        "y": 680,
        "wires": []
    },
    {
        "id": "cde9ba75675deee2",
        "type": "ioBroker get",
        "z": "164be6b67a87f9cb",
        "g": "d7d1ce4144ef0cfd",
        "name": "Read current Lampe Status",
        "topic": "",
        "attrname": "result",
        "payloadType": "value",
        "errOnInvalidState": "nothing",
        "x": 600,
        "y": 640,
        "wires": [
            [
                "b30ddaa50bb77cb4"
            ]
        ]
    },
    {
        "id": "ea787059d75a19f1",
        "type": "function",
        "z": "164be6b67a87f9cb",
        "g": "d7d1ce4144ef0cfd",
        "name": "set topic",
        "func": "msg.topic = msg.mapping.consumerIOBrokerChannelPath + '.status.switch.switch.value';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 640,
        "wires": [
            [
                "cde9ba75675deee2"
            ]
        ]
    },
    {
        "id": "b30ddaa50bb77cb4",
        "type": "function",
        "z": "164be6b67a87f9cb",
        "g": "d7d1ce4144ef0cfd",
        "name": "set topic",
        "func": "const switchOff = (consumerIOBrokerChannelPath) => {\n    msg.topic = consumerIOBrokerChannelPath + '.capabilities.switch-off';\n    msg.payload = true;\n    return msg;\n}\n\nconst switchOn = (consumerIOBrokerChannelPath) => {\n    msg.topic = consumerIOBrokerChannelPath + '.capabilities.switch-on';\n    msg.payload = true;\n    return msg;\n}\n\nmsg.result === \"on\" \n    ? switchOff(msg.mapping.consumerIOBrokerChannelPath)\n    : switchOn(msg.mapping.consumerIOBrokerChannelPath)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 640,
        "wires": [
            [
                "d849044759438be7",
                "43cc3442395c67f2",
                "e845c4b0e8ad4130"
            ]
        ]
    },
    {
        "id": "43cc3442395c67f2",
        "type": "change",
        "z": "164be6b67a87f9cb",
        "g": "d7d1ce4144ef0cfd",
        "name": "set new Status",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"fill\":\"green\",\"text\":\"Hue Lampe set\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1040,
        "y": 720,
        "wires": [
            [
                "02cf9d08481ac276"
            ]
        ]
    },
    {
        "id": "b493234c7ae7246a",
        "type": "link in",
        "z": "164be6b67a87f9cb",
        "g": "d7d1ce4144ef0cfd",
        "name": "",
        "links": [
            "0f0e53e3db7f0632"
        ],
        "x": 255,
        "y": 640,
        "wires": [
            [
                "ea787059d75a19f1"
            ]
        ]
    },
    {
        "id": "02cf9d08481ac276",
        "type": "link out",
        "z": "164be6b67a87f9cb",
        "g": "d7d1ce4144ef0cfd",
        "name": "",
        "mode": "link",
        "links": [
            "62fe0603e324af66"
        ],
        "x": 1535,
        "y": 720,
        "wires": []
    },
    {
        "id": "e845c4b0e8ad4130",
        "type": "link out",
        "z": "164be6b67a87f9cb",
        "g": "d7d1ce4144ef0cfd",
        "name": "",
        "mode": "link",
        "links": [
            "6c27e7c3b07e9829"
        ],
        "x": 1535,
        "y": 640,
        "wires": []
    },
    {
        "id": "bf4ed86a596c028b",
        "type": "http in",
        "z": "28b7f32dd29b3136",
        "g": "c9c211bf640ffacb",
        "name": "switch POST",
        "url": "/nodeRed-sg/0/SwitchConsumerMapping/switch",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 160,
        "wires": [
            [
                "bb76238178db3f9c",
                "776a9ed5d8b55ba7"
            ]
        ]
    },
    {
        "id": "bb76238178db3f9c",
        "type": "http response",
        "z": "28b7f32dd29b3136",
        "g": "c9c211bf640ffacb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 310,
        "y": 80,
        "wires": []
    },
    {
        "id": "ebdc8c9475e61b09",
        "type": "function",
        "z": "28b7f32dd29b3136",
        "g": "c9c211bf640ffacb",
        "name": "filter Mappings",
        "func": "let matchArray = []\n\nconst request = (Array.isArray(msg.request)) ? msg.request[0] : msg.request\n\nif(msg.payload && \n        Array.isArray(msg.payload) && \n        msg.payload.length > 0)\n{\n    if(request.hasOwnProperty('id')){\n        matchArray = msg.payload.filter(e => \n            e.hasOwnProperty('styleButtonIOBrokerStatePath') &&\n            e.styleButtonIOBrokerStatePath.split('&%&')[0] === request.id\n        );\n    }\n    if(request.hasOwnProperty('channelID') && request.hasOwnProperty('style')){\n        const channelID = request.channelID.replaceAll('___', '#');\n        matchArray = msg.payload.filter(e => \n            e.hasOwnProperty('switchIOBrokerChannelPath') &&\n            e.hasOwnProperty('style') &&\n            e['switchIOBrokerChannelPath'] === channelID &&\n            e['style'] === request['style']\n        );\n    }\n}\nmsg.payload = matchArray\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 280,
        "wires": [
            [
                "b7a1452e0c0fc858",
                "02b68d95d8031e2a"
            ]
        ]
    },
    {
        "id": "aec8094a0fdd93ae",
        "type": "change",
        "z": "28b7f32dd29b3136",
        "g": "c9c211bf640ffacb",
        "name": "request",
        "rules": [
            {
                "t": "set",
                "p": "request",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 200,
        "wires": [
            [
                "f8e1c877eb35365e"
            ]
        ]
    },
    {
        "id": "a188297e6d715908",
        "type": "ioBroker get",
        "z": "28b7f32dd29b3136",
        "g": "c9c211bf640ffacb",
        "name": "read Mapping IoB",
        "topic": "",
        "attrname": "payload",
        "payloadType": "value",
        "errOnInvalidState": "nothing",
        "x": 1110,
        "y": 200,
        "wires": [
            [
                "ebdc8c9475e61b09"
            ]
        ]
    },
    {
        "id": "f8e1c877eb35365e",
        "type": "change",
        "z": "28b7f32dd29b3136",
        "g": "c9c211bf640ffacb",
        "name": "mapping",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "$parent.mappingPath",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 200,
        "wires": [
            [
                "a188297e6d715908"
            ]
        ]
    },
    {
        "id": "814c6f0c1bba0b79",
        "type": "http in",
        "z": "28b7f32dd29b3136",
        "g": "c9c211bf640ffacb",
        "name": "switch GET",
        "url": "/nodeRed-sg/0/SwitchConsumerMapping/switch",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 200,
        "wires": [
            [
                "aec8094a0fdd93ae",
                "bb76238178db3f9c"
            ]
        ]
    },
    {
        "id": "776a9ed5d8b55ba7",
        "type": "join",
        "z": "28b7f32dd29b3136",
        "g": "c9c211bf640ffacb",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "0.8",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 350,
        "y": 160,
        "wires": [
            [
                "933197bc48ba1f8d"
            ]
        ]
    },
    {
        "id": "b7a1452e0c0fc858",
        "type": "change",
        "z": "28b7f32dd29b3136",
        "g": "c9c211bf640ffacb",
        "name": "set new Status",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"fill\":\"green\",\"text\":\"New call\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1520,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "02b68d95d8031e2a",
        "type": "split",
        "z": "28b7f32dd29b3136",
        "g": "c9c211bf640ffacb",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 450,
        "y": 420,
        "wires": [
            [
                "7b85248607e4ca05"
            ]
        ]
    },
    {
        "id": "a8cb12c64e116771",
        "type": "change",
        "z": "28b7f32dd29b3136",
        "g": "c9c211bf640ffacb",
        "name": "set Payload & command",
        "rules": [
            {
                "t": "set",
                "p": "mapping",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "mapping.consumerIOBrokerChannelPath",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "command",
                "pt": "msg",
                "to": "switch",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 420,
        "wires": [
            [
                "44d4265ac2891046"
            ]
        ]
    },
    {
        "id": "44d4265ac2891046",
        "type": "function",
        "z": "28b7f32dd29b3136",
        "g": "c9c211bf640ffacb",
        "name": "set consumers",
        "func": "const t = flow.get('$parent.ConfigFunctions').find(e => e.ConfigFunctionName === msg.mapping.configType);\nif(t) {\n    msg.consumers = t.consumers;\n    msg.switches = t.switches;\n    msg.filter = t.filter;\n    msg.ConfigFunctionName = t.ConfigFunctionName;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 420,
        "wires": [
            [
                "b94c7a7887519a53"
            ]
        ]
    },
    {
        "id": "b94c7a7887519a53",
        "type": "change",
        "z": "28b7f32dd29b3136",
        "g": "c9c211bf640ffacb",
        "name": "clean",
        "rules": [
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "acknowledged",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "timestamp",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "lastchange",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "req",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "res",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1490,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "7b85248607e4ca05",
        "type": "switch",
        "z": "28b7f32dd29b3136",
        "g": "c9c211bf640ffacb",
        "name": "",
        "property": "payload.styleButtonIOBrokerStatePath",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "&%&",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 420,
        "wires": [
            [
                "17cc7957f03d58bd"
            ],
            [
                "a8cb12c64e116771"
            ]
        ]
    },
    {
        "id": "17cc7957f03d58bd",
        "type": "function",
        "z": "28b7f32dd29b3136",
        "g": "c9c211bf640ffacb",
        "name": "getTopic",
        "func": "msg.topic = msg.payload.styleButtonIOBrokerStatePath.slice(0, msg.payload.styleButtonIOBrokerStatePath.lastIndexOf('.')) + '.buttonevent';\nmsg._tmp_pl = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 320,
        "wires": [
            [
                "20aec828cd287820"
            ]
        ]
    },
    {
        "id": "20aec828cd287820",
        "type": "ioBroker get",
        "z": "28b7f32dd29b3136",
        "g": "c9c211bf640ffacb",
        "name": "",
        "topic": "",
        "attrname": "payload",
        "payloadType": "value",
        "errOnInvalidState": "nothing",
        "x": 780,
        "y": 320,
        "wires": [
            [
                "01df626fae4790f2"
            ]
        ]
    },
    {
        "id": "01df626fae4790f2",
        "type": "function",
        "z": "28b7f32dd29b3136",
        "g": "c9c211bf640ffacb",
        "name": "check ButtonEvent",
        "func": "const returnT = msg.payload.toString();\nmsg.mapping = msg._tmp_pl\ndelete msg._tmp_pl\nmsg.payload = msg.mapping.consumerIOBrokerChannelPath\n\nif (returnT === msg.mapping.styleButtonIOBrokerStatePath.split('&%&')[1]){\n    msg.command = 'switch'\n} else {\n    msg.command = 'not_switch'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 320,
        "wires": [
            [
                "44d4265ac2891046"
            ]
        ]
    },
    {
        "id": "933197bc48ba1f8d",
        "type": "function",
        "z": "28b7f32dd29b3136",
        "g": "c9c211bf640ffacb",
        "name": "filter true",
        "func": "msg.payload = msg.payload.filter(e => e.state.val === true) \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 160,
        "wires": [
            [
                "cde451b7d3b31662"
            ]
        ]
    },
    {
        "id": "cde451b7d3b31662",
        "type": "switch",
        "z": "28b7f32dd29b3136",
        "g": "c9c211bf640ffacb",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 160,
        "wires": [
            [
                "4d5346b1da2e8891"
            ],
            [
                "aec8094a0fdd93ae"
            ]
        ]
    },
    {
        "id": "06dcb6fa3c9b5d4c",
        "type": "ioBroker get object",
        "z": "fc41063a409cd0e5",
        "name": "iobrokertest",
        "topic": "system.host.iobrokertest",
        "attrname": "payload",
        "x": 310,
        "y": 180,
        "wires": [
            [
                "1862bfc5dd1bedc5"
            ]
        ]
    },
    {
        "id": "1862bfc5dd1bedc5",
        "type": "change",
        "z": "fc41063a409cd0e5",
        "name": "get nodered IP",
        "rules": [
            {
                "t": "set",
                "p": "tmp",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "tmp.ip",
                "pt": "msg",
                "to": "payload.common.address[0]",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.ip",
                "pt": "msg",
                "to": "tmp.ip",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "tmp.ip",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 180,
        "wires": [
            [
                "8b3c8aeddd164e48"
            ]
        ]
    },
    {
        "id": "dd10f5636232e6ad",
        "type": "ioBroker get object",
        "z": "fc41063a409cd0e5",
        "name": "node-red",
        "topic": "system.adapter.node-red.0",
        "attrname": "payload",
        "x": 300,
        "y": 300,
        "wires": [
            [
                "6d9810fede484116"
            ]
        ]
    },
    {
        "id": "6d9810fede484116",
        "type": "change",
        "z": "fc41063a409cd0e5",
        "name": "get nodered Port/secure",
        "rules": [
            {
                "t": "set",
                "p": "tmp",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "tmp.port",
                "pt": "msg",
                "to": "payload.native.port",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "tmp.secure",
                "pt": "msg",
                "to": "payload.native.secure",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.port",
                "pt": "msg",
                "to": "tmp.port",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.secure",
                "pt": "msg",
                "to": "tmp.secure",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "tmp",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 300,
        "wires": [
            [
                "8b3c8aeddd164e48"
            ]
        ]
    },
    {
        "id": "8b3c8aeddd164e48",
        "type": "join",
        "z": "fc41063a409cd0e5",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 710,
        "y": 240,
        "wires": [
            [
                "7506b599d833ebef"
            ]
        ]
    },
    {
        "id": "7506b599d833ebef",
        "type": "function",
        "z": "fc41063a409cd0e5",
        "name": "get protocol",
        "func": "msg.payload.protocol = msg.payload.secure ? \"https\" : \"http\";\ndelete msg.payload.secure\n\nmsg.payload.url = `${msg.payload.protocol}://${msg.payload.ip}:${msg.payload.port}`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "05dd875338a9d5ea",
        "type": "inject",
        "z": "8e2e889e14c077b8",
        "g": "608bcb4eabe9512f",
        "name": "envSettings",
        "props": [
            {
                "p": "scriptName",
                "v": "wandschalter_version_script",
                "vt": "str"
            },
            {
                "p": "scriptVersion",
                "v": "0.25",
                "vt": "str"
            },
            {
                "p": "shellyPath",
                "v": "http://192.168.91.221",
                "vt": "str"
            },
            {
                "p": "shellyID",
                "v": "shellyplus1-441793a3f214",
                "vt": "str"
            },
            {
                "p": "cid",
                "v": "0",
                "vt": "num"
            },
            {
                "p": "webAppPath",
                "v": "/nodeRed-sg/0/SwitchConsumerMapping/switch",
                "vt": "str"
            },
            {
                "p": "mqttPort",
                "v": "1882",
                "vt": "str"
            },
            {
                "p": "mqttUser",
                "v": "mqttuser",
                "vt": "str"
            },
            {
                "p": "mqttPass",
                "v": "mqttuser",
                "vt": "str"
            },
            {
                "p": "getWebApiURL",
                "v": "http://localhost:8089/",
                "vt": "str"
            },
            {
                "p": "init",
                "v": "false",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 370,
        "y": 60,
        "wires": [
            [
                "5abe19a568fb37fa"
            ]
        ]
    },
    {
        "id": "0e5f0d5f837c0752",
        "type": "function",
        "z": "8e2e889e14c077b8",
        "g": "608bcb4eabe9512f",
        "name": "storeEnv2Context",
        "func": "for (const [key, value] of Object.entries(msg)){\n    if([\"_msgid\", \"payload\", \"topic\"].includes(key)){\n        continue;\n    }\n    flow.set(key,value);\n}\n\nconst scriptVersionName = flow.get('scriptName') + \"_\" + flow.get('scriptVersion');\nflow.set('scriptVersionName', scriptVersionName)\nflow.set('webAppSwitchURL', msg.payload.url + msg.webAppPath)\n//flow.set('webAppSwitchURL', msg.payload.url + \"/testK\")\nflow.set('ioBrokerIP', msg.payload.ip)\n\nflow.set('onInitShellies', false);\nflow.set('init', false);\n\nmsg.url = msg.getWebApiURL + 'iobroker/allInstanceNames'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 120,
        "wires": [
            [
                "42ab86d2ccb639a9"
            ]
        ],
        "info": "stores environment variables in Flow Context"
    },
    {
        "id": "397694fd0e76206c",
        "type": "comment",
        "z": "8e2e889e14c077b8",
        "name": "Configuration for Shellies",
        "info": "### Description\n * Channel settings\n    * input mode Switch\n    * Set relay type: Detached\n    * Set Relay power on default: on\n    * Consumption type: Lights\n * Webhooks:\n    * as sortes to push\n * Networks:\n    * Access point Disabel\n    * Cloud Enable\n    * Bluetooth Enable\n    * MQTT Enable and set all values\n * script\n    * Script Version\n\n\n\n\n\n---\n\n * Check Version  \n    --> if new Version\n    * Check Webhooks",
        "x": 130,
        "y": 40,
        "wires": []
    },
    {
        "id": "3a24205a2ae1e3df",
        "type": "discovery",
        "z": "8e2e889e14c077b8",
        "g": "a1ce16352877d0d7",
        "name": "",
        "topic": "",
        "service": "_http._tcp",
        "x": 960,
        "y": 60,
        "wires": [
            [
                "4c2b048c7486dd51"
            ]
        ]
    },
    {
        "id": "5abe19a568fb37fa",
        "type": "subflow:fc41063a409cd0e5",
        "z": "8e2e889e14c077b8",
        "g": "608bcb4eabe9512f",
        "name": "",
        "x": 580,
        "y": 60,
        "wires": [
            [
                "0e5f0d5f837c0752"
            ]
        ]
    },
    {
        "id": "4c2b048c7486dd51",
        "type": "function",
        "z": "8e2e889e14c077b8",
        "g": "a1ce16352877d0d7",
        "name": "_http_tcp >> flow",
        "func": "const _http_tcp = flow.get('_http_tcp') ?? {};\nconst shelly = _http_tcp[msg.payload.name] ?? {};\n\nshelly.name = msg.payload.name\nshelly.ip = msg.payload.addresses[0]\nshelly.port = msg.payload.port\nshelly.protocol = msg.payload.type.name\nshelly.url = `${shelly.protocol}://${shelly.ip}:${shelly.port }`\nshelly.gen = msg.payload.txtRecord.gen ?? \"1\"\nshelly.org = msg.payload\n\n_http_tcp[msg.payload.addresses[0]] = shelly;\nflow.set('_http_tcp', _http_tcp);\n\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 60,
        "wires": []
    },
    {
        "id": "fae8d278c96ec5a6",
        "type": "inject",
        "z": "8e2e889e14c077b8",
        "g": "e0df35a1487a9926",
        "name": "",
        "props": [
            {
                "p": "timestamp",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "",
        "crontab": "42 04 * * *",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "x": 150,
        "y": 460,
        "wires": [
            [
                "fb3a715bc66f25c9"
            ]
        ]
    },
    {
        "id": "23bb157b7ae3a64e",
        "type": "join",
        "z": "8e2e889e14c077b8",
        "g": "e0df35a1487a9926",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1270,
        "y": 580,
        "wires": [
            [
                "b08c9d2a93acbcfa"
            ]
        ]
    },
    {
        "id": "1703d30bb5827cd6",
        "type": "function",
        "z": "8e2e889e14c077b8",
        "g": "7529fb642014bbe2",
        "name": "Shelly.Update",
        "func": "msg.url = msg.Shelly._http_tcp.url + '/rpc/Shelly.Update';\nmsg.payload = {\n    stage: 'stable'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1140,
        "wires": [
            [
                "068e95bd023fe48f"
            ]
        ]
    },
    {
        "id": "068e95bd023fe48f",
        "type": "http request",
        "z": "8e2e889e14c077b8",
        "g": "7529fb642014bbe2",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 370,
        "y": 1140,
        "wires": [
            [
                "be30928444179890"
            ]
        ]
    },
    {
        "id": "e53ac6a1ffc5a839",
        "type": "link in",
        "z": "8e2e889e14c077b8",
        "g": "7529fb642014bbe2",
        "name": "_init - Shelly.update",
        "links": [],
        "x": 85,
        "y": 1140,
        "wires": [
            [
                "1703d30bb5827cd6"
            ]
        ]
    },
    {
        "id": "be30928444179890",
        "type": "link out",
        "z": "8e2e889e14c077b8",
        "g": "7529fb642014bbe2",
        "name": "link out 2",
        "mode": "return",
        "links": [],
        "x": 485,
        "y": 1140,
        "wires": []
    },
    {
        "id": "44877b4fa4350589",
        "type": "link call",
        "z": "8e2e889e14c077b8",
        "g": "e0df35a1487a9926",
        "name": "",
        "links": [
            "e53ac6a1ffc5a839"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 450,
        "y": 580,
        "wires": [
            [
                "69a1d7db8741d5cf"
            ]
        ]
    },
    {
        "id": "16d876078f2a8d63",
        "type": "function",
        "z": "8e2e889e14c077b8",
        "g": "3e3159a06022c48d",
        "name": "BLE.SetConfig",
        "func": "msg.url = msg.Shelly._http_tcp.url + '/rpc/BLE.SetConfig?config={\"enable\":true}';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1240,
        "wires": [
            [
                "12f1587fbe11f9f1"
            ]
        ]
    },
    {
        "id": "12f1587fbe11f9f1",
        "type": "http request",
        "z": "8e2e889e14c077b8",
        "g": "3e3159a06022c48d",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 370,
        "y": 1240,
        "wires": [
            [
                "0dae7e0205070f5a"
            ]
        ]
    },
    {
        "id": "387f55d6f30db5b4",
        "type": "link in",
        "z": "8e2e889e14c077b8",
        "g": "3e3159a06022c48d",
        "name": "_init - BLE.SetConfig",
        "links": [],
        "x": 85,
        "y": 1240,
        "wires": [
            [
                "16d876078f2a8d63"
            ]
        ]
    },
    {
        "id": "0dae7e0205070f5a",
        "type": "link out",
        "z": "8e2e889e14c077b8",
        "g": "3e3159a06022c48d",
        "name": "link out 3",
        "mode": "return",
        "links": [],
        "x": 485,
        "y": 1240,
        "wires": []
    },
    {
        "id": "69a1d7db8741d5cf",
        "type": "link call",
        "z": "8e2e889e14c077b8",
        "g": "e0df35a1487a9926",
        "name": "",
        "links": [
            "387f55d6f30db5b4"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 660,
        "y": 580,
        "wires": [
            [
                "fdb79000bbeef62e"
            ]
        ]
    },
    {
        "id": "405e3f50dbfeeddf",
        "type": "function",
        "z": "8e2e889e14c077b8",
        "g": "b4c5697408538620",
        "name": "Cloud.SetConfig",
        "func": "msg.url = msg.Shelly._http_tcp.url + '/rpc/Cloud.SetConfig?config={\"enable\":true}';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1340,
        "wires": [
            [
                "76d22ef5ae654ec2"
            ]
        ]
    },
    {
        "id": "76d22ef5ae654ec2",
        "type": "http request",
        "z": "8e2e889e14c077b8",
        "g": "b4c5697408538620",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 370,
        "y": 1340,
        "wires": [
            [
                "5c6dda08fa80182b"
            ]
        ]
    },
    {
        "id": "5c6dda08fa80182b",
        "type": "link out",
        "z": "8e2e889e14c077b8",
        "g": "b4c5697408538620",
        "name": "link out 4",
        "mode": "return",
        "links": [],
        "x": 475,
        "y": 1340,
        "wires": []
    },
    {
        "id": "97b0088674c7835e",
        "type": "link in",
        "z": "8e2e889e14c077b8",
        "g": "b4c5697408538620",
        "name": "_init - Cloud.SetConfig",
        "links": [],
        "x": 85,
        "y": 1340,
        "wires": [
            [
                "405e3f50dbfeeddf"
            ]
        ]
    },
    {
        "id": "fdb79000bbeef62e",
        "type": "link call",
        "z": "8e2e889e14c077b8",
        "g": "e0df35a1487a9926",
        "name": "",
        "links": [
            "97b0088674c7835e"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 880,
        "y": 580,
        "wires": [
            [
                "9e352bcb7ea05560"
            ]
        ]
    },
    {
        "id": "0c5a662ad7225d96",
        "type": "function",
        "z": "8e2e889e14c077b8",
        "g": "1e09ef214bd99392",
        "name": "MQTT.SetConfig",
        "func": "msg.url = `${msg.Shelly._http_tcp.url}/rpc/MQTT.SetConfig?config={\"enable\":true, \"user\":\"${flow.get('mqttUser')}\", \"pass\":\"${flow.get('mqttPass')}\", \"server\":\"${flow.get('ioBrokerIP')}:${flow.get('mqttPort')}\"}`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1440,
        "wires": [
            [
                "386e28aadb753ae1"
            ]
        ]
    },
    {
        "id": "386e28aadb753ae1",
        "type": "http request",
        "z": "8e2e889e14c077b8",
        "g": "1e09ef214bd99392",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 370,
        "y": 1440,
        "wires": [
            [
                "ed392d7e0e0d2193"
            ]
        ]
    },
    {
        "id": "ed392d7e0e0d2193",
        "type": "link out",
        "z": "8e2e889e14c077b8",
        "g": "1e09ef214bd99392",
        "name": "link out 5",
        "mode": "return",
        "links": [],
        "x": 475,
        "y": 1440,
        "wires": []
    },
    {
        "id": "87a530167ac36a87",
        "type": "link in",
        "z": "8e2e889e14c077b8",
        "g": "1e09ef214bd99392",
        "name": "_init - MQTT.SetConfig",
        "links": [],
        "x": 85,
        "y": 1440,
        "wires": [
            [
                "0c5a662ad7225d96"
            ]
        ]
    },
    {
        "id": "9e352bcb7ea05560",
        "type": "link call",
        "z": "8e2e889e14c077b8",
        "g": "e0df35a1487a9926",
        "name": "",
        "links": [
            "87a530167ac36a87"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 460,
        "y": 640,
        "wires": [
            [
                "bd2db71a13b6841f"
            ]
        ]
    },
    {
        "id": "4b505041d90c0a46",
        "type": "function",
        "z": "8e2e889e14c077b8",
        "g": "6d481a8e9c07d8b9",
        "name": "Shelly.Reboot",
        "func": "msg.url = `${msg.Shelly._http_tcp.url}/rpc/Shelly.Reboot`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1140,
        "wires": [
            [
                "ca9da79fffe139a9"
            ]
        ]
    },
    {
        "id": "ca9da79fffe139a9",
        "type": "http request",
        "z": "8e2e889e14c077b8",
        "g": "6d481a8e9c07d8b9",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 870,
        "y": 1140,
        "wires": [
            [
                "f3c193c1b31e367f"
            ]
        ]
    },
    {
        "id": "f3c193c1b31e367f",
        "type": "link out",
        "z": "8e2e889e14c077b8",
        "g": "6d481a8e9c07d8b9",
        "name": "link out 6",
        "mode": "return",
        "links": [],
        "x": 975,
        "y": 1140,
        "wires": []
    },
    {
        "id": "4be28a2e5ca89006",
        "type": "link in",
        "z": "8e2e889e14c077b8",
        "g": "6d481a8e9c07d8b9",
        "name": "_init - Shelly.Reboot",
        "links": [],
        "x": 585,
        "y": 1140,
        "wires": [
            [
                "4b505041d90c0a46"
            ]
        ]
    },
    {
        "id": "fb23d663d1996ff4",
        "type": "link call",
        "z": "8e2e889e14c077b8",
        "g": "e0df35a1487a9926",
        "name": "",
        "links": [
            "4be28a2e5ca89006"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 940,
        "y": 700,
        "wires": [
            [
                "23bb157b7ae3a64e"
            ]
        ]
    },
    {
        "id": "cbde744a5f797bd4",
        "type": "function",
        "z": "8e2e889e14c077b8",
        "g": "453e87f282e67248",
        "name": "Sys.SetConfig",
        "func": "let ui_data;\nif (msg.Shelly.config.hasOwnProperty('switch:1')){\n    ui_data = '{\"consumption_types\":[\"lights\", \"lights\"]}';\n} else if (msg.Shelly.config.hasOwnProperty('switch:0')) {\n    ui_data = '{\"consumption_types\":[\"lights\"]}';\n} else if (msg.Shelly.config.hasOwnProperty('cover:0')) {\n    ui_data = '{}';\n}\n\nmsg.url = `${msg.Shelly._http_tcp.url}/rpc/Sys.SetConfig?config={\"ui_data\":${ui_data}}`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 1240,
        "wires": [
            [
                "204d977218e7f438"
            ]
        ]
    },
    {
        "id": "204d977218e7f438",
        "type": "http request",
        "z": "8e2e889e14c077b8",
        "g": "453e87f282e67248",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 870,
        "y": 1240,
        "wires": [
            [
                "a5a1d13582c9973f"
            ]
        ]
    },
    {
        "id": "a5a1d13582c9973f",
        "type": "link out",
        "z": "8e2e889e14c077b8",
        "g": "453e87f282e67248",
        "name": "link out 7",
        "mode": "return",
        "links": [],
        "x": 975,
        "y": 1240,
        "wires": []
    },
    {
        "id": "e25f0008fc39639b",
        "type": "link in",
        "z": "8e2e889e14c077b8",
        "g": "453e87f282e67248",
        "name": "_init - Sys.SetConfig",
        "links": [],
        "x": 585,
        "y": 1240,
        "wires": [
            [
                "cbde744a5f797bd4"
            ]
        ]
    },
    {
        "id": "bd2db71a13b6841f",
        "type": "link call",
        "z": "8e2e889e14c077b8",
        "g": "e0df35a1487a9926",
        "name": "",
        "links": [
            "e25f0008fc39639b"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 680,
        "y": 640,
        "wires": [
            [
                "7b39f4addd8b3767"
            ]
        ]
    },
    {
        "id": "7b39f4addd8b3767",
        "type": "link call",
        "z": "8e2e889e14c077b8",
        "g": "e0df35a1487a9926",
        "name": "",
        "links": [
            "6256228fbc7a3c64"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 470,
        "y": 700,
        "wires": [
            [
                "112a8b5cb07ebb8f"
            ]
        ]
    },
    {
        "id": "c0559ff75137f97a",
        "type": "link in",
        "z": "8e2e889e14c077b8",
        "g": "55fccb29f8ea2410",
        "name": "_init - webhook",
        "links": [],
        "x": 85,
        "y": 1780,
        "wires": [
            [
                "de98fc096141cb11"
            ]
        ]
    },
    {
        "id": "de98fc096141cb11",
        "type": "function",
        "z": "8e2e889e14c077b8",
        "g": "55fccb29f8ea2410",
        "name": "Webhook.List",
        "func": "msg.url = `${msg.Shelly._http_tcp.url}/rpc/Webhook.List`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1780,
        "wires": [
            [
                "504bfee405228205"
            ]
        ]
    },
    {
        "id": "504bfee405228205",
        "type": "http request",
        "z": "8e2e889e14c077b8",
        "g": "55fccb29f8ea2410",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 510,
        "y": 1780,
        "wires": [
            [
                "6f69052eb1c78f03"
            ]
        ]
    },
    {
        "id": "6f69052eb1c78f03",
        "type": "function",
        "z": "8e2e889e14c077b8",
        "g": "55fccb29f8ea2410",
        "name": "Webhook.DeleteAll",
        "func": "msg.url = `${msg.Shelly._http_tcp.url}/rpc/Webhook.DeleteAll`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1780,
        "wires": [
            [
                "60abfa17f7220d13"
            ]
        ]
    },
    {
        "id": "96246328b9441322",
        "type": "function",
        "z": "8e2e889e14c077b8",
        "g": "55fccb29f8ea2410",
        "name": "Webhook.Create",
        "func": "const channelID = `${flow.get('shellyInstance')}.${msg.Shelly._http_tcp.name.toLowerCase().replace('-', '___')}___1.Relay${msg.channelID}`;\n\nconst hookTypes = msg.payload.hook_types;\nmsg.url = `${msg.Shelly._http_tcp.url}/rpc`;\n\nmsg.payload = []\n\nfor(const e of hookTypes) {\n    const tE = e.startsWith('input') ? 'input.push' : e;\n    msg.payload.push({ \n        \"id\": 1, \n        \"method\": \"Webhook.Create\", \n        \"params\": { \n            \"cid\": msg.channelID, \n            \"enable\": true, \n            \"event\": e,\n            \"name\": \"wandschalter_\" + e,\n            \"urls\": [`${flow.get('webAppSwitchURL')}?channelID=${channelID}&style=${tE}`]\n        }\n    })\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1840,
        "wires": [
            [
                "2c267bd40590df8c"
            ]
        ]
    },
    {
        "id": "87a7e889552d5bc5",
        "type": "function",
        "z": "8e2e889e14c077b8",
        "g": "55fccb29f8ea2410",
        "name": "Webhook.ListSupported",
        "func": "msg.url = `${msg.Shelly._http_tcp.url}/rpc/Webhook.ListSupported`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 1840,
        "wires": [
            [
                "cf6d6d2364ad0c91"
            ]
        ]
    },
    {
        "id": "cf6d6d2364ad0c91",
        "type": "http request",
        "z": "8e2e889e14c077b8",
        "g": "55fccb29f8ea2410",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 430,
        "y": 1840,
        "wires": [
            [
                "96246328b9441322"
            ]
        ]
    },
    {
        "id": "60abfa17f7220d13",
        "type": "http request",
        "z": "8e2e889e14c077b8",
        "g": "55fccb29f8ea2410",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 870,
        "y": 1780,
        "wires": [
            [
                "87a7e889552d5bc5"
            ]
        ]
    },
    {
        "id": "d8c6cd1bce973b8b",
        "type": "http in",
        "z": "8e2e889e14c077b8",
        "g": "e0df35a1487a9926",
        "name": "refreshShellies",
        "url": "/nodeRed-sg/0/shelly/refreshShellies",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 520,
        "wires": [
            [
                "52215c2b08944854",
                "fb3a715bc66f25c9"
            ]
        ]
    },
    {
        "id": "52215c2b08944854",
        "type": "http response",
        "z": "8e2e889e14c077b8",
        "g": "e0df35a1487a9926",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 230,
        "y": 580,
        "wires": []
    },
    {
        "id": "607944c1e4fbab26",
        "type": "link in",
        "z": "8e2e889e14c077b8",
        "g": "fed38b316335d6dc",
        "name": "_init - init_Script.Create",
        "links": [],
        "x": 585,
        "y": 1340,
        "wires": [
            [
                "bc0e8a892a361eba"
            ]
        ]
    },
    {
        "id": "2b78f1d8241ad02e",
        "type": "function",
        "z": "8e2e889e14c077b8",
        "g": "fed38b316335d6dc",
        "name": "Script.Create",
        "func": "msg.url = `${msg.Shelly._http_tcp.url}/rpc`;\nmsg.payload = [\n    { \"id\": 1, \"method\": \"Script.Create\", \"params\": { \"name\": flow.get('scriptVersionName') } },\n    { \"id\": 1, \"method\": \"Script.PutCode\", \"params\": { \"id\": 1, \"code\": `console.log('Wandschalter-Script: ${flow.get('scriptVersionName')}')` } },\n]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1420,
        "wires": [
            [
                "8da4726c53632d98"
            ]
        ]
    },
    {
        "id": "404e6db842f1f949",
        "type": "link out",
        "z": "8e2e889e14c077b8",
        "g": "fed38b316335d6dc",
        "name": "link out 11",
        "mode": "return",
        "links": [],
        "x": 975,
        "y": 1420,
        "wires": []
    },
    {
        "id": "112a8b5cb07ebb8f",
        "type": "link call",
        "z": "8e2e889e14c077b8",
        "g": "e0df35a1487a9926",
        "name": "",
        "links": [
            "607944c1e4fbab26"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 710,
        "y": 700,
        "wires": [
            [
                "fb23d663d1996ff4"
            ]
        ]
    },
    {
        "id": "bc0e8a892a361eba",
        "type": "function",
        "z": "8e2e889e14c077b8",
        "g": "fed38b316335d6dc",
        "name": "Script.List",
        "func": "msg.url = `${msg.Shelly._http_tcp.url}/rpc`;\nmsg.payload = { \"id\": 1, \"method\": \"Script.List\" }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1340,
        "wires": [
            [
                "08aaa60b54688648"
            ]
        ]
    },
    {
        "id": "08aaa60b54688648",
        "type": "http request",
        "z": "8e2e889e14c077b8",
        "g": "fed38b316335d6dc",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 830,
        "y": 1340,
        "wires": [
            [
                "13321e1fd63350b9"
            ]
        ]
    },
    {
        "id": "13321e1fd63350b9",
        "type": "function",
        "z": "8e2e889e14c077b8",
        "g": "fed38b316335d6dc",
        "name": "Script.Delete",
        "func": "msg.url = `${msg.Shelly._http_tcp.url}/rpc`;\nconst result = msg.payload.result;\nmsg.payload = [];\nif (result.scripts)\n{\n    for(const e of result.scripts){\n        msg.payload.push({ \"id\": 1, \"method\": \"Script.Delete\", \"params\": { \"id\": e.id } })\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 1380,
        "wires": [
            [
                "e5a6cd4aac18ef5c"
            ]
        ]
    },
    {
        "id": "42ab86d2ccb639a9",
        "type": "http request",
        "z": "8e2e889e14c077b8",
        "g": "608bcb4eabe9512f",
        "name": "get Instance from iob",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 600,
        "y": 120,
        "wires": [
            [
                "14d9b33db857ad02"
            ]
        ]
    },
    {
        "id": "14d9b33db857ad02",
        "type": "function",
        "z": "8e2e889e14c077b8",
        "g": "608bcb4eabe9512f",
        "name": ">flow",
        "func": "flow.set('shellyInstance', msg.payload.result.find(e => e.startsWith('shelly')) ?? 'shelly.0');\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 120,
        "wires": []
    },
    {
        "id": "65532ce68f7f05e5",
        "type": "switch",
        "z": "8e2e889e14c077b8",
        "g": "e0df35a1487a9926",
        "name": "only gen2",
        "property": "payload.gen2",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 860,
        "y": 460,
        "wires": [
            [
                "e4d57f080b2c487f"
            ],
            [
                "33270e7fd62656be"
            ]
        ]
    },
    {
        "id": "7d647b50dadfe714",
        "type": "change",
        "z": "8e2e889e14c077b8",
        "g": "e0df35a1487a9926",
        "name": "shellies > pl",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "allShellies",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "onInitShellies",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 460,
        "wires": [
            [
                "41b54ba50f519d55"
            ]
        ]
    },
    {
        "id": "41b54ba50f519d55",
        "type": "split",
        "z": "8e2e889e14c077b8",
        "g": "e0df35a1487a9926",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 730,
        "y": 460,
        "wires": [
            [
                "65532ce68f7f05e5"
            ]
        ]
    },
    {
        "id": "51155897866c3e84",
        "type": "debug",
        "z": "8e2e889e14c077b8",
        "g": "e0df35a1487a9926",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 680,
        "wires": []
    },
    {
        "id": "3d013ed7131cbfd8",
        "type": "ping",
        "z": "8e2e889e14c077b8",
        "g": "60eaf3183a2f1b08",
        "protocol": "Automatic",
        "mode": "triggered",
        "name": "",
        "host": "",
        "timer": "20",
        "inputs": 1,
        "x": 1010,
        "y": 220,
        "wires": [
            [
                "c52a57a0e413252a"
            ]
        ]
    },
    {
        "id": "b44383ecb2d3a599",
        "type": "function",
        "z": "8e2e889e14c077b8",
        "g": "60eaf3183a2f1b08",
        "name": "filter _http_tcp",
        "func": "msg.payload= Object.entries(flow.get('_http_tcp')).filter(([, value]) => value.org.name.toLowerCase().startsWith('shelly')).map(([key,value]) => key);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 220,
        "wires": [
            [
                "3d013ed7131cbfd8"
            ]
        ]
    },
    {
        "id": "d6b956eeaafb8fd7",
        "type": "change",
        "z": "8e2e889e14c077b8",
        "g": "60eaf3183a2f1b08",
        "name": "|x| allShellies",
        "rules": [
            {
                "t": "delete",
                "p": "allShellies",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 220,
        "wires": [
            [
                "b44383ecb2d3a599"
            ]
        ]
    },
    {
        "id": "c52a57a0e413252a",
        "type": "switch",
        "z": "8e2e889e14c077b8",
        "g": "60eaf3183a2f1b08",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1130,
        "y": 220,
        "wires": [
            [],
            [
                "86259027ec165607"
            ]
        ],
        "outputLabels": [
            "not reachable",
            "reachable"
        ]
    },
    {
        "id": "d9777f84d44ce103",
        "type": "inject",
        "z": "8e2e889e14c077b8",
        "g": "60eaf3183a2f1b08",
        "name": "init",
        "props": [],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "x": 150,
        "y": 220,
        "wires": [
            [
                "7d5ae7b0f3927507"
            ]
        ]
    },
    {
        "id": "3a6e9d904dbef7bd",
        "type": "switch",
        "z": "8e2e889e14c077b8",
        "g": "60eaf3183a2f1b08",
        "name": "only gen2",
        "property": "payload.gen",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 360,
        "y": 300,
        "wires": [
            [
                "69cc5e7b877e5c80"
            ],
            [
                "9ed2e5fbdbf2b939"
            ]
        ],
        "outputLabels": [
            "gen != 2",
            "gen == 2"
        ]
    },
    {
        "id": "4c736ec1e8076a35",
        "type": "function",
        "z": "8e2e889e14c077b8",
        "g": "60eaf3183a2f1b08",
        "name": "Shelly.GetConfig",
        "func": "msg.url = msg.payload.url + '/settings';\nmsg.payload = {}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 280,
        "wires": [
            [
                "7cbd0c3690ac5ba5"
            ]
        ]
    },
    {
        "id": "e3955ec7de1dd5f0",
        "type": "function",
        "z": "8e2e889e14c077b8",
        "g": "60eaf3183a2f1b08",
        "name": "Shelly.GetConfig",
        "func": "msg.url = msg.payload.url + '/rpc/Shelly.GetConfig';\nmsg.payload = {}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 320,
        "wires": [
            [
                "7cbd0c3690ac5ba5"
            ]
        ]
    },
    {
        "id": "7cbd0c3690ac5ba5",
        "type": "http request",
        "z": "8e2e889e14c077b8",
        "g": "60eaf3183a2f1b08",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 890,
        "y": 300,
        "wires": [
            [
                "822d62f1d5cc3cc3"
            ]
        ]
    },
    {
        "id": "822d62f1d5cc3cc3",
        "type": "change",
        "z": "8e2e889e14c077b8",
        "g": "60eaf3183a2f1b08",
        "name": "> pl & clean",
        "rules": [
            {
                "t": "set",
                "p": "config",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.mdns",
                "pt": "msg",
                "to": "orgPL",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.on",
                "pt": "msg",
                "to": "result",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.gen2",
                "pt": "msg",
                "to": "gen2",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.config",
                "pt": "msg",
                "to": "config",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload._http_tcp",
                "pt": "msg",
                "to": "_http_tcp",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload.ip",
                "pt": "msg",
                "to": "topic",
                "tot": "msg",
                "dc": true
            },
            {
                "t": "delete",
                "p": "_http_tcp",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "gen2",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "config",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "url",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "statusCode",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "responseUrl",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "redirectList",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "headers",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "retry",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "topic",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "ping",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 300,
        "wires": [
            [
                "ae8b3927738e1e75"
            ]
        ]
    },
    {
        "id": "86259027ec165607",
        "type": "function",
        "z": "8e2e889e14c077b8",
        "g": "60eaf3183a2f1b08",
        "name": "getSingle_http_tcp",
        "func": "msg.payload = flow.get('_http_tcp')[msg.topic]\nmsg._http_tcp = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 220,
        "wires": [
            [
                "3a6e9d904dbef7bd"
            ]
        ]
    },
    {
        "id": "69cc5e7b877e5c80",
        "type": "change",
        "z": "8e2e889e14c077b8",
        "g": "60eaf3183a2f1b08",
        "name": "! gen2",
        "rules": [
            {
                "t": "set",
                "p": "gen2",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 280,
        "wires": [
            [
                "4c736ec1e8076a35"
            ]
        ]
    },
    {
        "id": "9ed2e5fbdbf2b939",
        "type": "change",
        "z": "8e2e889e14c077b8",
        "g": "60eaf3183a2f1b08",
        "name": "gen2",
        "rules": [
            {
                "t": "set",
                "p": "gen2",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 530,
        "y": 320,
        "wires": [
            [
                "e3955ec7de1dd5f0"
            ]
        ]
    },
    {
        "id": "fd60ceed9dfabb45",
        "type": "function",
        "z": "8e2e889e14c077b8",
        "g": "60eaf3183a2f1b08",
        "name": "shellies >> flow",
        "func": "const allShellies = flow.get('allShellies') ?? {};\n\nallShellies[msg.payload.ip] = msg.payload;\nflow.set('allShellies', allShellies);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 360,
        "wires": [
            [
                "f8a702773c297a34"
            ]
        ]
    },
    {
        "id": "8e94e06d6d873012",
        "type": "change",
        "z": "8e2e889e14c077b8",
        "g": "60eaf3183a2f1b08",
        "name": "set init",
        "rules": [
            {
                "t": "set",
                "p": "init",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 220,
        "wires": [
            [
                "d6b956eeaafb8fd7"
            ]
        ]
    },
    {
        "id": "f8a702773c297a34",
        "type": "change",
        "z": "8e2e889e14c077b8",
        "g": "60eaf3183a2f1b08",
        "name": "set init",
        "rules": [
            {
                "t": "set",
                "p": "init",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "9c62623b455b9df7",
        "type": "http in",
        "z": "8e2e889e14c077b8",
        "g": "60eaf3183a2f1b08",
        "name": "init",
        "url": "/nodeRed-sg/0/shelly/init",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 260,
        "wires": [
            [
                "301a2cb06e0af6a8",
                "7d5ae7b0f3927507"
            ]
        ]
    },
    {
        "id": "301a2cb06e0af6a8",
        "type": "http response",
        "z": "8e2e889e14c077b8",
        "g": "60eaf3183a2f1b08",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 190,
        "y": 320,
        "wires": []
    },
    {
        "id": "28d8d25672ebd498",
        "type": "http in",
        "z": "8e2e889e14c077b8",
        "g": "b572a010f1f21020",
        "name": "getShellies",
        "url": "/nodeRed-sg/0/shelly/getShellies",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 900,
        "wires": [
            [
                "f897f225bcc17878"
            ]
        ]
    },
    {
        "id": "f897f225bcc17878",
        "type": "switch",
        "z": "8e2e889e14c077b8",
        "g": "b572a010f1f21020",
        "name": "",
        "property": "init",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 290,
        "y": 900,
        "wires": [
            [
                "da75cc7cfaadc678"
            ],
            [
                "c868ca1b694bf154"
            ]
        ]
    },
    {
        "id": "da75cc7cfaadc678",
        "type": "change",
        "z": "8e2e889e14c077b8",
        "g": "b572a010f1f21020",
        "name": ">payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "allShellies",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 880,
        "wires": [
            [
                "d00743afdaa29a83"
            ]
        ]
    },
    {
        "id": "c868ca1b694bf154",
        "type": "change",
        "z": "8e2e889e14c077b8",
        "g": "b572a010f1f21020",
        "name": "Init not yet finished",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "400",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Init not yet finished",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 920,
        "wires": [
            [
                "d00743afdaa29a83"
            ]
        ]
    },
    {
        "id": "d00743afdaa29a83",
        "type": "http response",
        "z": "8e2e889e14c077b8",
        "g": "b572a010f1f21020",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 630,
        "y": 900,
        "wires": []
    },
    {
        "id": "33270e7fd62656be",
        "type": "change",
        "z": "8e2e889e14c077b8",
        "g": "e0df35a1487a9926",
        "name": "-^- payload",
        "rules": [
            {
                "t": "set",
                "p": "Shelly",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 520,
        "wires": [
            [
                "a6579f766cce45b6"
            ]
        ]
    },
    {
        "id": "1d2f4b6591a401f5",
        "type": "link out",
        "z": "8e2e889e14c077b8",
        "g": "55fccb29f8ea2410",
        "name": "link out 12",
        "mode": "return",
        "links": [],
        "x": 945,
        "y": 1840,
        "wires": []
    },
    {
        "id": "6256228fbc7a3c64",
        "type": "link in",
        "z": "8e2e889e14c077b8",
        "g": "7f2c2b9883eaece7",
        "name": "_init - Switch.SetConfig",
        "links": [],
        "x": 85,
        "y": 1540,
        "wires": [
            [
                "3a544423c358835b"
            ]
        ]
    },
    {
        "id": "eff53443c07a73d3",
        "type": "function",
        "z": "8e2e889e14c077b8",
        "g": "7f2c2b9883eaece7",
        "name": "Switch.SetConfig (Wandschalter)",
        "func": "msg.url = `${msg.Shelly._http_tcp.url}/rpc/Switch.SetConfig?id=${msg.payload.id}&config={\"in_mode\":\"detached\",\"initial_state\":\"on\",\"auto_on\":false,\"auto_off\":false}`;\nmsg.channelID = msg.payload.id\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1680,
        "wires": [
            [
                "e3c453ea694b1e79"
            ]
        ]
    },
    {
        "id": "3a544423c358835b",
        "type": "change",
        "z": "8e2e889e14c077b8",
        "g": "7f2c2b9883eaece7",
        "name": " > pl",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Shelly.config",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 170,
        "y": 1540,
        "wires": [
            [
                "fdcadb4d8c2be756"
            ]
        ]
    },
    {
        "id": "fdcadb4d8c2be756",
        "type": "split",
        "z": "8e2e889e14c077b8",
        "g": "7f2c2b9883eaece7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "key",
        "x": 310,
        "y": 1540,
        "wires": [
            [
                "ddf3a0f4459e8445"
            ]
        ]
    },
    {
        "id": "5b488310419150a6",
        "type": "link out",
        "z": "8e2e889e14c077b8",
        "g": "7f2c2b9883eaece7",
        "name": "link out 8",
        "mode": "return",
        "links": [],
        "x": 1125,
        "y": 1640,
        "wires": []
    },
    {
        "id": "ddf3a0f4459e8445",
        "type": "switch",
        "z": "8e2e889e14c077b8",
        "g": "7f2c2b9883eaece7",
        "name": "per channel",
        "property": "key",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "cover:",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "switch:",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 450,
        "y": 1540,
        "wires": [
            [
                "0d2c73a5ed40a3fd",
                "26a1c51e8de4a96b"
            ],
            [
                "d3f235aa25639161"
            ],
            [
                "26a1c51e8de4a96b"
            ]
        ],
        "outputLabels": [
            "cover",
            "switch",
            "sonstige"
        ]
    },
    {
        "id": "0d2c73a5ed40a3fd",
        "type": "debug",
        "z": "8e2e889e14c077b8",
        "g": "7f2c2b9883eaece7",
        "name": "Storen",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 1540,
        "wires": []
    },
    {
        "id": "d3f235aa25639161",
        "type": "switch",
        "z": "8e2e889e14c077b8",
        "g": "7f2c2b9883eaece7",
        "name": "",
        "property": "payload.name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "Lichtschalter ",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "Wandschalter ",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 190,
        "y": 1620,
        "wires": [
            [
                "9e083eedc6048ce9"
            ],
            [
                "eff53443c07a73d3"
            ]
        ],
        "outputLabels": [
            "Lichtschalter",
            "Wandschalter"
        ]
    },
    {
        "id": "e3c453ea694b1e79",
        "type": "http request",
        "z": "8e2e889e14c077b8",
        "g": "7f2c2b9883eaece7",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 530,
        "y": 1680,
        "wires": [
            [
                "70eed40310b8dd44"
            ]
        ]
    },
    {
        "id": "9e083eedc6048ce9",
        "type": "function",
        "z": "8e2e889e14c077b8",
        "g": "7f2c2b9883eaece7",
        "name": "Switch.SetConfig (Lichtschalter)",
        "func": "msg.url = `${msg.Shelly._http_tcp.url}/rpc/Switch.SetConfig?id=${msg.payload.id}&config={\"in_mode\":\"flip\",\"initial_state\":\"restore_last\",\"auto_on\":false,\"auto_off\":false}`;\nmsg.channelID = msg.payload.id\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1600,
        "wires": [
            [
                "be38c78b1a5bf0a5"
            ]
        ]
    },
    {
        "id": "be38c78b1a5bf0a5",
        "type": "http request",
        "z": "8e2e889e14c077b8",
        "g": "7f2c2b9883eaece7",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 630,
        "y": 1600,
        "wires": [
            [
                "26a1c51e8de4a96b"
            ]
        ]
    },
    {
        "id": "26a1c51e8de4a96b",
        "type": "join",
        "z": "8e2e889e14c077b8",
        "g": "7f2c2b9883eaece7",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1010,
        "y": 1600,
        "wires": [
            [
                "5b488310419150a6"
            ]
        ]
    },
    {
        "id": "70eed40310b8dd44",
        "type": "link call",
        "z": "8e2e889e14c077b8",
        "g": "7f2c2b9883eaece7",
        "name": "",
        "links": [
            "c0559ff75137f97a"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 700,
        "y": 1680,
        "wires": [
            [
                "26a1c51e8de4a96b"
            ]
        ]
    },
    {
        "id": "491d439b8d9da2fc",
        "type": "function",
        "z": "8e2e889e14c077b8",
        "g": "19244311e3ab0ec2",
        "name": "loop",
        "func": "if(!msg.hasOwnProperty('partSG')){\n    msg.partSG = {\n        length: msg.payload.length,\n        correntIndex:0,\n        array: msg.payload\n    }\n} else {\n    msg.partSG.correntIndex = msg.partSG.correntIndex + 1;\n}\n\nif (msg.partSG.correntIndex === msg.partSG.length){\n    delete msg.partSG;\n    return [msg, null];\n}\n\nmsg.payload = msg.partSG.array[msg.partSG.correntIndex];\nreturn [null,msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 2040,
        "wires": [
            [
                "9c97a9722e82ec67"
            ],
            [
                "1a25576d03b03b83"
            ]
        ],
        "outputLabels": [
            "finish",
            "next"
        ]
    },
    {
        "id": "1a25576d03b03b83",
        "type": "http request",
        "z": "8e2e889e14c077b8",
        "g": "19244311e3ab0ec2",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 290,
        "y": 2080,
        "wires": [
            [
                "8a796b928016eb05"
            ]
        ]
    },
    {
        "id": "8a796b928016eb05",
        "type": "delay",
        "z": "8e2e889e14c077b8",
        "g": "19244311e3ab0ec2",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 320,
        "y": 2120,
        "wires": [
            [
                "8744c85f90d76172"
            ]
        ]
    },
    {
        "id": "0a84c08b88417111",
        "type": "link in",
        "z": "8e2e889e14c077b8",
        "g": "19244311e3ab0ec2",
        "name": "helper_loop",
        "links": [],
        "x": 85,
        "y": 2040,
        "wires": [
            [
                "491d439b8d9da2fc"
            ]
        ]
    },
    {
        "id": "9c97a9722e82ec67",
        "type": "link out",
        "z": "8e2e889e14c077b8",
        "g": "19244311e3ab0ec2",
        "name": "link out 13",
        "mode": "return",
        "links": [],
        "x": 465,
        "y": 2040,
        "wires": []
    },
    {
        "id": "2c267bd40590df8c",
        "type": "link call",
        "z": "8e2e889e14c077b8",
        "g": "55fccb29f8ea2410",
        "name": "",
        "links": [
            "0a84c08b88417111"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 790,
        "y": 1840,
        "wires": [
            [
                "1d2f4b6591a401f5"
            ]
        ]
    },
    {
        "id": "e5a6cd4aac18ef5c",
        "type": "link call",
        "z": "8e2e889e14c077b8",
        "g": "fed38b316335d6dc",
        "name": "",
        "links": [
            "0a84c08b88417111"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 850,
        "y": 1380,
        "wires": [
            [
                "2b78f1d8241ad02e"
            ]
        ]
    },
    {
        "id": "8da4726c53632d98",
        "type": "link call",
        "z": "8e2e889e14c077b8",
        "g": "fed38b316335d6dc",
        "name": "",
        "links": [
            "0a84c08b88417111"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 850,
        "y": 1420,
        "wires": [
            [
                "404e6db842f1f949"
            ]
        ]
    },
    {
        "id": "b08c9d2a93acbcfa",
        "type": "change",
        "z": "8e2e889e14c077b8",
        "g": "e0df35a1487a9926",
        "name": "onInitShellies",
        "rules": [
            {
                "t": "set",
                "p": "onInitShellies",
                "pt": "flow",
                "to": "false",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 620,
        "wires": [
            [
                "51155897866c3e84",
                "9973dad889c2a81f"
            ]
        ]
    },
    {
        "id": "7d5ae7b0f3927507",
        "type": "switch",
        "z": "8e2e889e14c077b8",
        "g": "60eaf3183a2f1b08",
        "name": "check onInitShellies",
        "property": "onInitShellies",
        "propertyType": "flow",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 360,
        "y": 220,
        "wires": [
            [
                "8e94e06d6d873012"
            ],
            []
        ]
    },
    {
        "id": "fb3a715bc66f25c9",
        "type": "switch",
        "z": "8e2e889e14c077b8",
        "g": "e0df35a1487a9926",
        "name": "check init",
        "property": "init",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 400,
        "y": 460,
        "wires": [
            [
                "7d647b50dadfe714"
            ],
            []
        ]
    },
    {
        "id": "6154c66acbd494b3",
        "type": "link in",
        "z": "8e2e889e14c077b8",
        "g": "60eaf3183a2f1b08",
        "name": "init",
        "links": [
            "9973dad889c2a81f"
        ],
        "x": 225,
        "y": 360,
        "wires": [
            [
                "7d5ae7b0f3927507"
            ]
        ]
    },
    {
        "id": "9973dad889c2a81f",
        "type": "link out",
        "z": "8e2e889e14c077b8",
        "g": "e0df35a1487a9926",
        "name": "init Shellies out",
        "mode": "link",
        "links": [
            "6154c66acbd494b3"
        ],
        "x": 1405,
        "y": 520,
        "wires": []
    },
    {
        "id": "ae8b3927738e1e75",
        "type": "function",
        "z": "8e2e889e14c077b8",
        "g": "60eaf3183a2f1b08",
        "name": "check script Version Gen2",
        "func": "const scriptVersionName = flow.get('scriptVersionName');\n\nmsg.payload.versionUpToDate = (msg.payload.gen2) \n    ? Object.entries(msg.payload.config)\n        .filter(([key,]) => key.startsWith('script'))\n        .filter(([key, value]) => value.name.startsWith('wandschalter_version_script_'))\n        .some(([key, value]) => value.name === scriptVersionName)\n    : true;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 300,
        "wires": [
            [
                "fd60ceed9dfabb45"
            ]
        ]
    },
    {
        "id": "a6579f766cce45b6",
        "type": "switch",
        "z": "8e2e889e14c077b8",
        "g": "e0df35a1487a9926",
        "name": "versionUpToDate",
        "property": "payload.versionUpToDate",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 520,
        "wires": [
            [
                "e4d57f080b2c487f"
            ],
            [
                "44877b4fa4350589"
            ]
        ]
    },
    {
        "id": "05aa48719cfb1121",
        "type": "inject",
        "z": "56cb5db772fc3848",
        "g": "2b87b7793c66ec0f",
        "name": "init Conifg",
        "props": [],
        "repeat": "",
        "crontab": "00 03 * * *",
        "once": false,
        "onceDelay": "0.3",
        "topic": "",
        "x": 610,
        "y": 200,
        "wires": [
            [
                "d3d3aec723c93dbd"
            ]
        ]
    },
    {
        "id": "fea58fe386d5e05f",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "2b87b7793c66ec0f",
        "name": "Wandschalter Config",
        "rules": [
            {
                "t": "set",
                "p": "ConfigFunctionName",
                "pt": "msg",
                "to": "wandschalterConfig",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "filter",
                "pt": "msg",
                "to": "wandschalter",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "switches",
                "pt": "msg",
                "to": "[\"shelly\"]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "consumers",
                "pt": "msg",
                "to": "[\"hue\",\"smartthings\", \"shelly\"]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 240,
        "wires": [
            [
                "ce0cbd53da6e9507"
            ]
        ]
    },
    {
        "id": "e8aa6bbea6362c42",
        "type": "inject",
        "z": "56cb5db772fc3848",
        "g": "2b87b7793c66ec0f",
        "name": "init Conifg",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "x": 610,
        "y": 120,
        "wires": [
            [
                "d3d3aec723c93dbd"
            ]
        ]
    },
    {
        "id": "146aa1b45c9060a5",
        "type": "inject",
        "z": "56cb5db772fc3848",
        "g": "302fdc27221dc26e",
        "name": "envSettings",
        "props": [
            {
                "p": "adapterName",
                "v": "nodeRed-sg",
                "vt": "str"
            },
            {
                "p": "instanceNumber",
                "v": "0",
                "vt": "str"
            },
            {
                "p": "deviceName",
                "v": "SwitchConsumerMapping",
                "vt": "str"
            },
            {
                "p": "sgWebAPIURL",
                "v": "http://localhost:8089/",
                "vt": "str"
            },
            {
                "p": "initFinished",
                "v": "false",
                "vt": "bool"
            },
            {
                "p": "localServerAdapterURL",
                "v": "http://192.168.90.10:1880/nodeRed-sg/0/SwitchConsumerMapping/",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.0",
        "topic": "",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "6496b92504361d05"
            ]
        ]
    },
    {
        "id": "6496b92504361d05",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "302fdc27221dc26e",
        "name": "storeEnv2Context",
        "func": "for (const [key, value] of Object.entries(msg)){\n    if([\"_msgid\", \"payload\", \"topic\"].includes(key)){\n        continue;\n    }\n    flow.set(key,value);\n}\n\nflow.set('adapter', msg.adapterName);\nflow.set('instance', `${msg.adapterName}.${msg.instanceNumber}`);\nflow.set('device', `${msg.adapterName}.${msg.instanceNumber}.${msg.deviceName}`);\nflow.set('mappingPath', `${msg.adapterName}.${msg.instanceNumber}.${msg.deviceName}.mapping`);\nflow.set('infoPath', `${msg.adapterName}.${msg.instanceNumber}.${msg.deviceName}.info`);\nflow.set('switchURL', `${msg.localServerAdapterURL}switch`)\n\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 60,
        "wires": [],
        "info": "stores environment variables in Flow Context"
    },
    {
        "id": "e3cf91088496c53f",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "2b87b7793c66ec0f",
        "name": "Mobilerschalter Config",
        "rules": [
            {
                "t": "set",
                "p": "ConfigFunctionName",
                "pt": "msg",
                "to": "mobilerschalterConfig",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "filter",
                "pt": "msg",
                "to": "Mobilerschalter",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "switches",
                "pt": "msg",
                "to": "[\"mihome\", \"hue\"]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "consumers",
                "pt": "msg",
                "to": "[\"hue\", \"smartthings\", \"shelly\"]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 300,
        "wires": [
            [
                "ce0cbd53da6e9507"
            ]
        ]
    },
    {
        "id": "e2973f0a529c3104",
        "type": "subflow:f3fb093646919445",
        "z": "56cb5db772fc3848",
        "g": "2b87b7793c66ec0f",
        "name": "init MiHome",
        "x": 1790,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "0b091d762507f934",
        "type": "inject",
        "z": "56cb5db772fc3848",
        "g": "d632100434f155f7",
        "name": "refersh Conifg",
        "props": [],
        "repeat": "900",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "x": 140,
        "y": 480,
        "wires": [
            [
                "7ac3219a6dfa8a5f"
            ]
        ]
    },
    {
        "id": "3374e25bff1a6346",
        "type": "subflow:f3fb093646919445",
        "z": "56cb5db772fc3848",
        "g": "d632100434f155f7",
        "name": "refresh MiHome Switch",
        "x": 610,
        "y": 480,
        "wires": [
            [
                "3e7b8c75a4fe3057"
            ]
        ]
    },
    {
        "id": "2f59cd5ebf479de4",
        "type": "subflow:2a5c9ff66c4fad1d",
        "z": "56cb5db772fc3848",
        "g": "d632100434f155f7",
        "name": "refresh Shelly Switch",
        "x": 600,
        "y": 540,
        "wires": [
            [
                "3e7b8c75a4fe3057"
            ]
        ]
    },
    {
        "id": "7a00a2c975e98e9b",
        "type": "subflow:2a5c9ff66c4fad1d",
        "z": "56cb5db772fc3848",
        "g": "2b87b7793c66ec0f",
        "name": "init Shelly",
        "x": 1780,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "8702b7498c76e9c6",
        "type": "subflow:14ce7768b920ca39",
        "z": "56cb5db772fc3848",
        "g": "d632100434f155f7",
        "name": "refresh Hue Consumers",
        "x": 1390,
        "y": 520,
        "wires": [
            [
                "e37893560118893e"
            ]
        ]
    },
    {
        "id": "ed5d5c63d2e25d8b",
        "type": "subflow:14ce7768b920ca39",
        "z": "56cb5db772fc3848",
        "g": "2b87b7793c66ec0f",
        "name": "init Hue",
        "x": 1780,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "ceae67b59ad601b9",
        "type": "subflow:164be6b67a87f9cb",
        "z": "56cb5db772fc3848",
        "g": "d632100434f155f7",
        "name": "refresh Smartthings Consumer",
        "x": 1410,
        "y": 580,
        "wires": [
            [
                "e37893560118893e"
            ]
        ]
    },
    {
        "id": "df4c01558db57118",
        "type": "subflow:164be6b67a87f9cb",
        "z": "56cb5db772fc3848",
        "g": "2b87b7793c66ec0f",
        "name": "init Smartthings",
        "x": 1800,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "84c638aaae2acf96",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "2b87b7793c66ec0f",
        "name": "init Sonoff FilteredSwitch (SubFn)",
        "func": "if(\n    msg.command === 'init' && \n    msg.switches.includes('sonoff'))\n    {\n        return msg;  \n    }\nreturn;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1860,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "67e77eb3c7cf1a78",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "2b87b7793c66ec0f",
        "name": "init MiHome Cons (SubFn)",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "539fbc8df6e4e451",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "d632100434f155f7",
        "name": "refersh MiHome Cons (SubFn)",
        "func": "return (msg.consumers.includes('mihome') && msg.payload === 'mihome') ? {...msg, payload:{}} : undefined;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "03a41f5d1f3045c8",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "d632100434f155f7",
        "name": "refersh Sonoff FilteredSwitch (SubFn)",
        "func": "return (msg.switches.includes('sonoff') && msg.payload === 'sonoff') ? {...msg, payload:{}} : undefined;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "cab0465d3ed25fba",
        "type": "comment",
        "z": "56cb5db772fc3848",
        "g": "096cfeb3ddca584d",
        "name": "MappingFormat",
        "info": "[{\n    \"switchIOBrokerChannelPath\":\"\",\n    \"styleButtonIOBrokerStatePath\":\"\",\n    \"style\":\"\",\n    \"consumerIOBrokerChannelPath\":\"\",\n    \"consumerIOBrokerStatePath\":\"\"\n}]",
        "x": 120,
        "y": 180,
        "wires": []
    },
    {
        "id": "7a02329e52e48eeb",
        "type": "inject",
        "z": "56cb5db772fc3848",
        "g": "096cfeb3ddca584d",
        "name": "start",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 240,
        "wires": [
            [
                "713611af8ff0c62a"
            ]
        ]
    },
    {
        "id": "713611af8ff0c62a",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "096cfeb3ddca584d",
        "name": "setAllMappings",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"switchIOBrokerChannelPath\":\"mihome.0.devices.switch_158d000202fcff\",\"styleButtonIOBrokerStatePath\":\"mihome.0.devices.switch_158d000202fcff.double\",\"consumerIOBrokerChannelPath\":\"shelly.0.shellyplus1#441793a3f214#1.Relay0\",\"configType\":\"mobilerschalterConfig\"},{\"switchIOBrokerChannelPath\":\"mihome.0.devices.switch_158d000202fcff\",\"styleButtonIOBrokerStatePath\":\"mihome.0.devices.switch_158d000202fcff.long\",\"consumerIOBrokerChannelPath\":\"shelly.0.shellyplus2pm#0cdc7efa7e0c#1.Cover0\",\"consumerIOBrokerStatePath\":\"shelly.0.shellyplus2pm#0cdc7efa7e0c#1.Cover0.Stop\",\"configType\":\"mobilerschalterConfig\"},{\"switchIOBrokerChannelPath\":\"mihome.0.devices.switch_158d000202fcff\",\"styleButtonIOBrokerStatePath\":\"mihome.0.devices.switch_158d000202fcff.click\",\"consumerIOBrokerChannelPath\":\"hue.0.Zimmer_Büro\",\"consumerIOBrokerStatePath\":\"hue.0.Zimmer_Büro.scene_lesen\",\"configType\":\"mobilerschalterConfig\"},{\"switchIOBrokerChannelPath\":\"shelly.0.shellyplus1#441793a3f214#1.Relay0\",\"style\":\"input.push\",\"consumerIOBrokerChannelPath\":\"smartthings.0.edf94671-c0ec-4643-8972-defb7a053787\",\"configType\":\"wandschalterConfig\"},{\"switchIOBrokerChannelPath\":\"mihome.0.devices.switch_158d0001e832e8\",\"styleButtonIOBrokerStatePath\":\"mihome.0.devices.switch_158d0001e832e8.click\",\"consumerIOBrokerChannelPath\":\"hue.0.Zimmer_Büro\",\"consumerIOBrokerStatePath\":\"hue.0.Zimmer_Büro.scene_hell\",\"configType\":\"mobilerschalterConfig\"},{\"switchIOBrokerChannelPath\":\"shelly.0.shellyplus1#441793a40f78#1.Relay0\",\"style\":\"input.push\",\"consumerIOBrokerChannelPath\":\"hue.0.Zimmer_Büro\",\"consumerIOBrokerStatePath\":\"hue.0.Zimmer_Büro.scene_lesen\",\"configType\":\"wandschalterConfig\"}]",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "command",
                "pt": "msg",
                "to": "setAllMappings",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 240,
        "wires": [
            [
                "49ff69fef955d712"
            ]
        ]
    },
    {
        "id": "a68c5ea689a23eca",
        "type": "subflow:f3fb093646919445",
        "z": "56cb5db772fc3848",
        "g": "46fd50ff78af5efa",
        "name": "switch MiHome Switch",
        "x": 1680,
        "y": 780,
        "wires": [
            [
                "95778deb4780634b"
            ]
        ]
    },
    {
        "id": "d3a358d0a5fe454e",
        "type": "subflow:14ce7768b920ca39",
        "z": "56cb5db772fc3848",
        "g": "46fd50ff78af5efa",
        "name": "switch Hue Consumers",
        "x": 1690,
        "y": 840,
        "wires": [
            [
                "95778deb4780634b"
            ]
        ]
    },
    {
        "id": "ee9d91eaadd86107",
        "type": "subflow:164be6b67a87f9cb",
        "z": "56cb5db772fc3848",
        "g": "46fd50ff78af5efa",
        "name": "switch Smartthings Consumer",
        "x": 1710,
        "y": 900,
        "wires": [
            [
                "95778deb4780634b"
            ]
        ]
    },
    {
        "id": "10896b17fee1ecc7",
        "type": "subflow:28b7f32dd29b3136",
        "z": "56cb5db772fc3848",
        "g": "46fd50ff78af5efa",
        "name": "",
        "x": 1310,
        "y": 820,
        "wires": [
            [
                "d3a358d0a5fe454e",
                "ee9d91eaadd86107",
                "3c6a1c727e33ee16"
            ]
        ]
    },
    {
        "id": "95778deb4780634b",
        "type": "join",
        "z": "56cb5db772fc3848",
        "g": "46fd50ff78af5efa",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 2030,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "3c6a1c727e33ee16",
        "type": "subflow:2a5c9ff66c4fad1d",
        "z": "56cb5db772fc3848",
        "g": "46fd50ff78af5efa",
        "name": "init Shelly Switch",
        "x": 1670,
        "y": 960,
        "wires": [
            [
                "95778deb4780634b"
            ]
        ]
    },
    {
        "id": "8bba49f52e184dee",
        "type": "subflow:2a5c9ff66c4fad1d",
        "z": "56cb5db772fc3848",
        "g": "d632100434f155f7",
        "name": "refresh Shelly Consumer",
        "x": 1390,
        "y": 640,
        "wires": [
            [
                "e37893560118893e"
            ]
        ]
    },
    {
        "id": "050d0f5ad8a64f0d",
        "type": "subflow:14ce7768b920ca39",
        "z": "56cb5db772fc3848",
        "g": "d632100434f155f7",
        "name": "refresh Hue Switches",
        "x": 600,
        "y": 600,
        "wires": [
            [
                "3e7b8c75a4fe3057"
            ]
        ]
    },
    {
        "id": "e0eb904b969d027e",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "642f6fa5575a0e49",
        "name": "commands",
        "rules": [
            {
                "t": "set",
                "p": "command",
                "pt": "msg",
                "to": "initMapping",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "refreshProcess",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1710,
        "y": 600,
        "wires": [
            [
                "e6153885a1f4bc1c"
            ]
        ]
    },
    {
        "id": "63a9e920374cd420",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "d5cf4cf9191699ba",
        "name": "Register ioBroker States",
        "func": "if(msg.payload && \n        Array.isArray(msg.payload) && \n        msg.payload.length > 0  && \n    msg.payload.some(e => e.hasOwnProperty('styleButtonIOBrokerStatePath') && e.styleButtonIOBrokerStatePath !== ''))\n{\n    msg.payload = msg.payload.filter(e => e.hasOwnProperty('styleButtonIOBrokerStatePath') && e.styleButtonIOBrokerStatePath !== '').map(mapping => {\n        return {\n            stateID: mapping['styleButtonIOBrokerStatePath'].split('&%&')[0],\n            urls: [flow.get('switchURL')],\n            forceOverwritte: false\n        }\n    })\n    msg.url = flow.get('sgWebAPIURL') + 'iobroker/addURLNotificationSubscriptions'\n    return [msg, null];\n}\nelse{\n    msg.payload = 'nothing to register'\n    return [null,msg];\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1790,
        "y": 2500,
        "wires": [
            [
                "05114c08e8883d20"
            ],
            [
                "f382a65beb5e8561"
            ]
        ],
        "outputLabels": [
            "has to register",
            "nothing to register"
        ]
    },
    {
        "id": "05114c08e8883d20",
        "type": "http request",
        "z": "56cb5db772fc3848",
        "g": "d5cf4cf9191699ba",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1990,
        "y": 2460,
        "wires": [
            [
                "f382a65beb5e8561"
            ]
        ]
    },
    {
        "id": "11631d1c6898e1a1",
        "type": "link in",
        "z": "56cb5db772fc3848",
        "g": "d5cf4cf9191699ba",
        "name": "_helper - addAllStyleButtonMappings",
        "links": [],
        "x": 1475,
        "y": 2500,
        "wires": [
            [
                "b261326171c504d2"
            ]
        ]
    },
    {
        "id": "b261326171c504d2",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "d5cf4cf9191699ba",
        "name": "--> mappings",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "mappings",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1590,
        "y": 2500,
        "wires": [
            [
                "63a9e920374cd420"
            ]
        ]
    },
    {
        "id": "c3f5ae4ccca7498e",
        "type": "link in",
        "z": "56cb5db772fc3848",
        "g": "5556ddbab7caf80c",
        "name": "_mappings - deleteMappings",
        "links": [],
        "x": 55,
        "y": 2340,
        "wires": [
            [
                "92d24cdf3a1f283d"
            ]
        ]
    },
    {
        "id": "4ffdeea35a703b52",
        "type": "comment",
        "z": "56cb5db772fc3848",
        "g": "5556ddbab7caf80c",
        "name": "input: none",
        "info": "",
        "x": 100,
        "y": 2300,
        "wires": []
    },
    {
        "id": "9cbc7fc01cd76baf",
        "type": "link out",
        "z": "56cb5db772fc3848",
        "g": "5556ddbab7caf80c",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 935,
        "y": 2340,
        "wires": []
    },
    {
        "id": "49ff69fef955d712",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "096cfeb3ddca584d",
        "name": "",
        "links": [
            "41b724f988ccfcea"
        ],
        "timeout": "30",
        "x": 310,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "e6153885a1f4bc1c",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "642f6fa5575a0e49",
        "name": "",
        "links": [
            "41b724f988ccfcea"
        ],
        "timeout": "30",
        "x": 1870,
        "y": 600,
        "wires": [
            [
                "4bfdc2fcb4549a15"
            ]
        ]
    },
    {
        "id": "fd8c703ff11a14df",
        "type": "link out",
        "z": "56cb5db772fc3848",
        "g": "50c57295c4c8e77a",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 265,
        "y": 2200,
        "wires": []
    },
    {
        "id": "ed705c1392b1ec93",
        "type": "comment",
        "z": "56cb5db772fc3848",
        "g": "50c57295c4c8e77a",
        "name": "return: Array with all Mappings",
        "info": "",
        "x": 160,
        "y": 2160,
        "wires": []
    },
    {
        "id": "2efdb0920dfd6082",
        "type": "link in",
        "z": "56cb5db772fc3848",
        "g": "50c57295c4c8e77a",
        "name": "_mappings - getMappings",
        "links": [],
        "x": 55,
        "y": 2200,
        "wires": [
            [
                "835399a23d348a5c"
            ]
        ]
    },
    {
        "id": "835399a23d348a5c",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "50c57295c4c8e77a",
        "name": "<-- mappings",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "mappings",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 2200,
        "wires": [
            [
                "fd8c703ff11a14df"
            ]
        ]
    },
    {
        "id": "f9656a651af5b88e",
        "type": "inject",
        "z": "56cb5db772fc3848",
        "g": "dc19a4bcf38f0673",
        "name": "getAllMappings",
        "props": [
            {
                "p": "command",
                "v": "getAllMappings",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 920,
        "y": 1420,
        "wires": [
            [
                "51dfb0e0275cf0ca"
            ]
        ]
    },
    {
        "id": "51dfb0e0275cf0ca",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "dc19a4bcf38f0673",
        "name": "",
        "links": [
            "41b724f988ccfcea"
        ],
        "timeout": "30",
        "x": 1330,
        "y": 1640,
        "wires": [
            [
                "3caf5e497890f412"
            ]
        ]
    },
    {
        "id": "6633442a3fd08f53",
        "type": "debug",
        "z": "56cb5db772fc3848",
        "g": "dc19a4bcf38f0673",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "error",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2040,
        "y": 1640,
        "wires": []
    },
    {
        "id": "e897fb7ad66b1758",
        "type": "inject",
        "z": "56cb5db772fc3848",
        "g": "dc19a4bcf38f0673",
        "name": "deleteAllMappings",
        "props": [
            {
                "p": "command",
                "v": "deleteAllMappings",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1990,
        "y": 1520,
        "wires": [
            [
                "51dfb0e0275cf0ca"
            ]
        ]
    },
    {
        "id": "6efc421c7d6332d8",
        "type": "inject",
        "z": "56cb5db772fc3848",
        "g": "dc19a4bcf38f0673",
        "name": "setAllMappings",
        "props": [
            {
                "p": "command",
                "v": "setAllMappings",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "[{\"switchIOBrokerChannelPath\":\"mihome.0.devices.switch_158d000202fcff\",\"styleButtonIOBrokerStatePath\":\"mihome.0.devices.switch_158d000202fcff.double\",\"consumerIOBrokerChannelPath\":\"shelly.0.shellyplus1#441793a3f214#1.Relay0\",\"configType\":\"mobilerschalterConfig\"},{\"switchIOBrokerChannelPath\":\"mihome.0.devices.switch_158d000202fcff\",\"styleButtonIOBrokerStatePath\":\"mihome.0.devices.switch_158d000202fcff.long\",\"consumerIOBrokerChannelPath\":\"shelly.0.shellyplus2pm#0cdc7efa7e0c#1.Cover0\",\"consumerIOBrokerStatePath\":\"shelly.0.shellyplus2pm#0cdc7efa7e0c#1.Cover0.Stop\",\"configType\":\"mobilerschalterConfig\"},{\"switchIOBrokerChannelPath\":\"mihome.0.devices.switch_158d000202fcff\",\"styleButtonIOBrokerStatePath\":\"mihome.0.devices.switch_158d000202fcff.click\",\"consumerIOBrokerChannelPath\":\"hue.0.Zimmer_Büro\",\"consumerIOBrokerStatePath\":\"hue.0.Zimmer_Büro.scene_lesen\",\"configType\":\"mobilerschalterConfig\"},{\"switchIOBrokerChannelPath\":\"shelly.0.shellyplus1#441793a3f214#1.Relay0\",\"style\":\"input.push\",\"consumerIOBrokerChannelPath\":\"smartthings.0.edf94671-c0ec-4643-8972-defb7a053787\",\"configType\":\"wandschalterConfig\"},{\"switchIOBrokerChannelPath\":\"mihome.0.devices.switch_158d0001e832e8\",\"styleButtonIOBrokerStatePath\":\"mihome.0.devices.switch_158d0001e832e8.click\",\"consumerIOBrokerChannelPath\":\"hue.0.Zimmer_Büro\",\"consumerIOBrokerStatePath\":\"hue.0.Zimmer_Büro.scene_hell\",\"configType\":\"mobilerschalterConfig\"},{\"switchIOBrokerChannelPath\":\"shelly.0.shellyplus1#441793a40f78#1.Relay0\",\"style\":\"input.push\",\"consumerIOBrokerChannelPath\":\"hue.0.Zimmer_Büro\",\"consumerIOBrokerStatePath\":\"hue.0.Zimmer_Büro.scene_lesen\",\"configType\":\"wandschalterConfig\"}]",
        "payloadType": "json",
        "x": 1800,
        "y": 1440,
        "wires": [
            [
                "51dfb0e0275cf0ca"
            ]
        ]
    },
    {
        "id": "35173d1130b19a4a",
        "type": "comment",
        "z": "56cb5db772fc3848",
        "g": "fbf48a5c6959f16e",
        "name": "input: Object with either {\"styleButtonIOBrokerStatePath\" : ..} of {\"switchIOBrokerChannelPath\" : .., \"style\" : ..} return: matching mapping",
        "info": "",
        "x": 810,
        "y": 2160,
        "wires": []
    },
    {
        "id": "b36f4c7111666fb5",
        "type": "link in",
        "z": "56cb5db772fc3848",
        "g": "fbf48a5c6959f16e",
        "name": "_mappings - getMapping",
        "links": [],
        "x": 375,
        "y": 2200,
        "wires": [
            [
                "97157167c54395e3"
            ]
        ]
    },
    {
        "id": "c090ef86e2b65544",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "fbf48a5c6959f16e",
        "name": "search match",
        "func": "if(Array.isArray(msg.mappings) && msg.mappings.length > 0){\n    if(msg.singleMapping.hasOwnProperty('styleButtonIOBrokerStatePath')){\n        msg.payload = msg.mappings.find(e => e.styleButtonIOBrokerStatePath === msg.singleMapping.styleButtonIOBrokerStatePath);\n        return msg\n    }\n    if (msg.singleMapping.hasOwnProperty('switchIOBrokerChannelPath') && msg.singleMapping.hasOwnProperty('style')){\n        msg.payload = msg.mappings.find(e => e.switchIOBrokerChannelPath === msg.singleMapping.switchIOBrokerChannelPath && \n                            e.style ===  msg.singleMapping.style);\n        return msg\n    }\n}\nmsg.payload = undefined\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 2200,
        "wires": [
            [
                "fe15477c13152019"
            ]
        ]
    },
    {
        "id": "97157167c54395e3",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "fbf48a5c6959f16e",
        "name": "mappings",
        "rules": [
            {
                "t": "set",
                "p": "mappings",
                "pt": "msg",
                "to": "mappings",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "singleMapping",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 2200,
        "wires": [
            [
                "c090ef86e2b65544"
            ]
        ]
    },
    {
        "id": "e088fdbd83af047a",
        "type": "link out",
        "z": "56cb5db772fc3848",
        "g": "fbf48a5c6959f16e",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 1245,
        "y": 2200,
        "wires": []
    },
    {
        "id": "35b8a7c9bce8b54c",
        "type": "inject",
        "z": "56cb5db772fc3848",
        "g": "dc19a4bcf38f0673",
        "name": "getSingleMapping 1",
        "props": [
            {
                "p": "command",
                "v": "getSingleMapping",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "{\"styleButtonIOBrokerStatePath\":\"mihome.0.devices.switch_158d000202fcff.double\"}",
        "payloadType": "json",
        "x": 930,
        "y": 1580,
        "wires": [
            [
                "51dfb0e0275cf0ca"
            ]
        ]
    },
    {
        "id": "38e5e8030ef85b2a",
        "type": "inject",
        "z": "56cb5db772fc3848",
        "g": "dc19a4bcf38f0673",
        "name": "getSingleMapping 2",
        "props": [
            {
                "p": "command",
                "v": "getSingleMapping",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "{\"switchIOBrokerChannelPath\":\"shelly.0.shellyplus1#441793a3f214#1.Relay0\", \"style\":\"input.push\"}",
        "payloadType": "json",
        "x": 930,
        "y": 1620,
        "wires": [
            [
                "51dfb0e0275cf0ca"
            ]
        ]
    },
    {
        "id": "dd6d4d4fc828bd97",
        "type": "inject",
        "z": "56cb5db772fc3848",
        "g": "dc19a4bcf38f0673",
        "name": "getSingleMapping error",
        "props": [
            {
                "p": "command",
                "v": "getSingleMapping",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "{\"styleButtonIOBrokerStatePath\":\"mihome.0.devices.switch_158d000202fcff.double1\"}",
        "payloadType": "json",
        "x": 940,
        "y": 1660,
        "wires": [
            [
                "51dfb0e0275cf0ca"
            ]
        ]
    },
    {
        "id": "ba2945fcc6ef023a",
        "type": "comment",
        "z": "56cb5db772fc3848",
        "g": "d6191b2cb0a4400d",
        "name": "input: valid new mapping struct",
        "info": "",
        "x": 170,
        "y": 2740,
        "wires": []
    },
    {
        "id": "8e04544527b84345",
        "type": "link in",
        "z": "56cb5db772fc3848",
        "g": "d6191b2cb0a4400d",
        "name": "_mappings - addMapping",
        "links": [],
        "x": 55,
        "y": 2780,
        "wires": [
            [
                "1f8f7c5cc407a66d"
            ]
        ]
    },
    {
        "id": "fe15477c13152019",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "fbf48a5c6959f16e",
        "name": "clean",
        "rules": [
            {
                "t": "delete",
                "p": "singleMapping",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 2200,
        "wires": [
            [
                "e088fdbd83af047a"
            ]
        ]
    },
    {
        "id": "479fabf5052d9e74",
        "type": "link out",
        "z": "56cb5db772fc3848",
        "g": "d6191b2cb0a4400d",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 1345,
        "y": 2780,
        "wires": []
    },
    {
        "id": "53bfa1651474f53b",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "d6191b2cb0a4400d",
        "name": "-|- pl",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "singleNewMapping",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 2740,
        "wires": [
            [
                "27a992142238e5b0"
            ]
        ]
    },
    {
        "id": "75ccc9a81acce6dc",
        "type": "inject",
        "z": "56cb5db772fc3848",
        "g": "dc19a4bcf38f0673",
        "name": "setSingleMappings 1",
        "props": [
            {
                "p": "command",
                "v": "addSingleMapping",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "{\"switchIOBrokerChannelPath\":\"mihome.0.devices.switch_158d000202fcff\",\"styleButtonIOBrokerStatePath\":\"mihome.0.devices.switch_158d000202fcff.voltage\",\"consumerIOBrokerChannelPath\":\"shelly.0.shellyplus1#441793a3f214#1.Relay0\",\"configType\":\"mobilerschalterConfig\"}",
        "payloadType": "json",
        "x": 1470,
        "y": 1420,
        "wires": [
            [
                "51dfb0e0275cf0ca"
            ]
        ]
    },
    {
        "id": "03f508b74ae36106",
        "type": "inject",
        "z": "56cb5db772fc3848",
        "g": "dc19a4bcf38f0673",
        "name": "setSingleMappings error",
        "props": [
            {
                "p": "command",
                "v": "addSingleMapping",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "[{\"switchIOBrokerChannelPath\":\"mihome.0.devices.switch_158d000202fcff\",\"styleButtonIOBrokerStatePath\":\"mihome.0.devices.switch_158d000202fcff.double\",\"consumerIOBrokerChannelPath\":\"shelly.0.shellyplus1#441793a3f214#1.Relay0\",\"configType\":\"mobilerschalterConfig\"},{\"switchIOBrokerChannelPath\":\"mihome.0.devices.switch_158d000202fcff\",\"styleButtonIOBrokerStatePath\":\"mihome.0.devices.switch_158d000202fcff.long\",\"consumerIOBrokerChannelPath\":\"shelly.0.shellyplus2pm#0cdc7efa7e0c#1.Cover0\",\"consumerIOBrokerStatePath\":\"shelly.0.shellyplus2pm#0cdc7efa7e0c#1.Cover0.Stop\",\"configType\":\"mobilerschalterConfig\"},{\"switchIOBrokerChannelPath\":\"mihome.0.devices.switch_158d000202fcff\",\"styleButtonIOBrokerStatePath\":\"mihome.0.devices.switch_158d000202fcff.click\",\"consumerIOBrokerChannelPath\":\"hue.0.Zimmer_Büro\",\"consumerIOBrokerStatePath\":\"hue.0.Zimmer_Büro.scene_lesen\",\"configType\":\"mobilerschalterConfig\"},{\"switchIOBrokerChannelPath\":\"shelly.0.shellyplus1#441793a3f214#1.Relay0\",\"style\":\"input.push\",\"consumerIOBrokerChannelPath\":\"smartthings.0.edf94671-c0ec-4643-8972-defb7a053787\",\"configType\":\"wandschalterConfig\"},{\"switchIOBrokerChannelPath\":\"mihome.0.devices.switch_158d0001e832e8\",\"styleButtonIOBrokerStatePath\":\"mihome.0.devices.switch_158d0001e832e8.click\",\"consumerIOBrokerChannelPath\":\"hue.0.Zimmer_Büro\",\"consumerIOBrokerStatePath\":\"hue.0.Zimmer_Büro.scene_hell\",\"configType\":\"mobilerschalterConfig\"},{\"switchIOBrokerChannelPath\":\"shelly.0.shellyplus1#441793a40f78#1.Relay0\",\"style\":\"input.push\",\"consumerIOBrokerChannelPath\":\"hue.0.Zimmer_Büro\",\"consumerIOBrokerStatePath\":\"hue.0.Zimmer_Büro.scene_lesen\",\"configType\":\"wandschalterConfig\"}]",
        "payloadType": "json",
        "x": 1450,
        "y": 1500,
        "wires": [
            [
                "51dfb0e0275cf0ca"
            ]
        ]
    },
    {
        "id": "a888ca5ab922b19d",
        "type": "inject",
        "z": "56cb5db772fc3848",
        "g": "dc19a4bcf38f0673",
        "name": "setSingleMappings 2",
        "props": [
            {
                "p": "command",
                "v": "addSingleMapping",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "{\"switchIOBrokerChannelPath\":\"shelly.0.shellyplus1#441793a40f78#1.Relay0\",\"style\":\"input.pull\",\"consumerIOBrokerChannelPath\":\"hue.0.Zimmer_Büro\",\"consumerIOBrokerStatePath\":\"hue.0.Zimmer_Büro.scene_lesen\",\"configType\":\"wandschalterConfig\"}",
        "payloadType": "json",
        "x": 1470,
        "y": 1460,
        "wires": [
            [
                "51dfb0e0275cf0ca"
            ]
        ]
    },
    {
        "id": "343f7b62881d5eee",
        "type": "http in",
        "z": "56cb5db772fc3848",
        "g": "c6db4e196ccb8cb9",
        "name": "setAllMappings",
        "url": "/nodeRed-sg/0/SwitchConsumerMapping/setAllMappings",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 820,
        "wires": [
            [
                "2446e92ecc52b9e9"
            ]
        ]
    },
    {
        "id": "d78ea6ced71f2895",
        "type": "http in",
        "z": "56cb5db772fc3848",
        "g": "c6db4e196ccb8cb9",
        "name": "getSingleMapping",
        "url": "/nodeRed-sg/0/SwitchConsumerMapping/getSingleMapping",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 900,
        "wires": [
            [
                "1c70fa22a086c780"
            ]
        ]
    },
    {
        "id": "5c090b3d6ac6999a",
        "type": "http in",
        "z": "56cb5db772fc3848",
        "g": "c6db4e196ccb8cb9",
        "name": "addSingleMapping",
        "url": "/nodeRed-sg/0/SwitchConsumerMapping/addSingleMapping",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 940,
        "wires": [
            [
                "f12a43ed013dd349"
            ]
        ]
    },
    {
        "id": "fe9be47307547f41",
        "type": "http in",
        "z": "56cb5db772fc3848",
        "g": "c6db4e196ccb8cb9",
        "name": "changeSingleMapping",
        "url": "/nodeRed-sg/0/SwitchConsumerMapping/changeSingleMapping",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 1020,
        "wires": [
            [
                "efa72ecd0d9efb73"
            ]
        ]
    },
    {
        "id": "8c1cc076da147d90",
        "type": "http in",
        "z": "56cb5db772fc3848",
        "g": "c6db4e196ccb8cb9",
        "name": "getAllMappings",
        "url": "/nodeRed-sg/0/SwitchConsumerMapping/getAllMappings",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 780,
        "wires": [
            [
                "a380a3a4ccae9433"
            ]
        ]
    },
    {
        "id": "0f0019c76aa9b2c8",
        "type": "http response",
        "z": "56cb5db772fc3848",
        "g": "c6db4e196ccb8cb9",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1030,
        "y": 940,
        "wires": []
    },
    {
        "id": "4da0fb3f137f6264",
        "type": "http in",
        "z": "56cb5db772fc3848",
        "g": "c6db4e196ccb8cb9",
        "name": "deleteAllMappings",
        "url": "/nodeRed-sg/0/SwitchConsumerMapping/deleteAllMappings",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 860,
        "wires": [
            [
                "4307e811c9364fce"
            ]
        ]
    },
    {
        "id": "a380a3a4ccae9433",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "c6db4e196ccb8cb9",
        "name": "command",
        "rules": [
            {
                "t": "set",
                "p": "command",
                "pt": "msg",
                "to": "getAllMappings",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 780,
        "wires": [
            [
                "c0edbe700f901013"
            ]
        ]
    },
    {
        "id": "2446e92ecc52b9e9",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "c6db4e196ccb8cb9",
        "name": "command",
        "rules": [
            {
                "t": "set",
                "p": "command",
                "pt": "msg",
                "to": "setAllMappings",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 820,
        "wires": [
            [
                "c0edbe700f901013"
            ]
        ]
    },
    {
        "id": "c0edbe700f901013",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "c6db4e196ccb8cb9",
        "name": "",
        "links": [
            "41b724f988ccfcea"
        ],
        "timeout": "30",
        "x": 590,
        "y": 940,
        "wires": [
            [
                "a31990303b2cc41b"
            ]
        ]
    },
    {
        "id": "4307e811c9364fce",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "c6db4e196ccb8cb9",
        "name": "command",
        "rules": [
            {
                "t": "set",
                "p": "command",
                "pt": "msg",
                "to": "deleteAllMappings",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 860,
        "wires": [
            [
                "c0edbe700f901013"
            ]
        ]
    },
    {
        "id": "1c70fa22a086c780",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "c6db4e196ccb8cb9",
        "name": "command",
        "rules": [
            {
                "t": "set",
                "p": "command",
                "pt": "msg",
                "to": "getSingleMapping",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 900,
        "wires": [
            [
                "c0edbe700f901013"
            ]
        ]
    },
    {
        "id": "f12a43ed013dd349",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "c6db4e196ccb8cb9",
        "name": "command",
        "rules": [
            {
                "t": "set",
                "p": "command",
                "pt": "msg",
                "to": "addSingleMapping",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 940,
        "wires": [
            [
                "c0edbe700f901013"
            ]
        ]
    },
    {
        "id": "98273a30e2583f9e",
        "type": "inject",
        "z": "56cb5db772fc3848",
        "g": "dc19a4bcf38f0673",
        "name": "deleteSingleMapping 1",
        "props": [
            {
                "p": "command",
                "v": "deleteSingleMapping",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "{\"styleButtonIOBrokerStatePath\":\"mihome.0.devices.switch_158d000202fcff.double\"}",
        "payloadType": "json",
        "x": 940,
        "y": 1800,
        "wires": [
            [
                "51dfb0e0275cf0ca"
            ]
        ]
    },
    {
        "id": "afb24c16fb1451f6",
        "type": "inject",
        "z": "56cb5db772fc3848",
        "g": "dc19a4bcf38f0673",
        "name": "deleteSingleMapping 2",
        "props": [
            {
                "p": "command",
                "v": "deleteSingleMapping",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "{\"switchIOBrokerChannelPath\":\"shelly.0.shellyplus1#441793a3f214#1.Relay0\",\"style\":\"input.push\"}",
        "payloadType": "json",
        "x": 940,
        "y": 1840,
        "wires": [
            [
                "51dfb0e0275cf0ca"
            ]
        ]
    },
    {
        "id": "1e94827f89af2147",
        "type": "inject",
        "z": "56cb5db772fc3848",
        "g": "dc19a4bcf38f0673",
        "name": "deleteSingleMapping error",
        "props": [
            {
                "p": "command",
                "v": "deleteSingleMapping",
                "vt": "str"
            },
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "{\"styleButtonIOBrokerStatePath\":\"mihome.0.devices.switch_158d000202fcff.double1\"}",
        "payloadType": "json",
        "x": 950,
        "y": 1880,
        "wires": [
            [
                "51dfb0e0275cf0ca"
            ]
        ]
    },
    {
        "id": "938b712ea27f19f7",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "f0049f45ce09ebb0",
        "name": "default",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2090,
        "y": 2220,
        "wires": [
            [
                "e931cdf3de6df77d"
            ]
        ]
    },
    {
        "id": "d23ca10885f76fd1",
        "type": "switch",
        "z": "56cb5db772fc3848",
        "g": "f0049f45ce09ebb0",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1910,
        "y": 2220,
        "wires": [
            [
                "e931cdf3de6df77d"
            ],
            [
                "938b712ea27f19f7"
            ]
        ]
    },
    {
        "id": "9fcffc37a12e49fc",
        "type": "ioBroker get",
        "z": "56cb5db772fc3848",
        "g": "f0049f45ce09ebb0",
        "name": "read Mapping IoB",
        "topic": "",
        "attrname": "payload",
        "payloadType": "value",
        "errOnInvalidState": "false",
        "x": 1750,
        "y": 2220,
        "wires": [
            [
                "d23ca10885f76fd1"
            ]
        ]
    },
    {
        "id": "8c3a573c15f9f7f0",
        "type": "link in",
        "z": "56cb5db772fc3848",
        "g": "f0049f45ce09ebb0",
        "name": "_helper - getMappingsFromIoB",
        "links": [],
        "x": 1475,
        "y": 2220,
        "wires": [
            [
                "16b85f6eeb664ada"
            ]
        ]
    },
    {
        "id": "e931cdf3de6df77d",
        "type": "link out",
        "z": "56cb5db772fc3848",
        "g": "f0049f45ce09ebb0",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 2165,
        "y": 2180,
        "wires": []
    },
    {
        "id": "e9d165b3a9849f3a",
        "type": "comment",
        "z": "56cb5db772fc3848",
        "g": "f0049f45ce09ebb0",
        "name": "input: none (refreshProcess) return: Array with all Mappings / null if not yet finished",
        "info": "",
        "x": 1750,
        "y": 2180,
        "wires": []
    },
    {
        "id": "7cc02b9e219dcef9",
        "type": "link in",
        "z": "56cb5db772fc3848",
        "g": "bd19de5ccd074a20",
        "name": "_helper - checkIfInitFinished",
        "links": [],
        "x": 1475,
        "y": 2060,
        "wires": [
            [
                "ca604a62a60a6001"
            ]
        ]
    },
    {
        "id": "ca604a62a60a6001",
        "type": "switch",
        "z": "56cb5db772fc3848",
        "g": "bd19de5ccd074a20",
        "name": "refreshProcess",
        "property": "refreshProcess",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1600,
        "y": 2060,
        "wires": [
            [
                "e1d0fdfd6e561ec8"
            ],
            [
                "955406f82ce83c3c"
            ]
        ]
    },
    {
        "id": "955406f82ce83c3c",
        "type": "switch",
        "z": "56cb5db772fc3848",
        "g": "bd19de5ccd074a20",
        "name": "only if initFinished",
        "property": "initFinished",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1790,
        "y": 2080,
        "wires": [
            [
                "e1d0fdfd6e561ec8"
            ],
            [
                "9a6053dcb135c907"
            ]
        ]
    },
    {
        "id": "9a6053dcb135c907",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "bd19de5ccd074a20",
        "name": "E",
        "func": "node.error('init musst be finished')\nnode.status({\n        \"fill\": \"red\",\n        \"shape\": \"ring\",\n        \"text\": \"init musst be finished\"\n})\nmsg.payload = false\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 2080,
        "wires": [
            [
                "c43a51bdca0afe48"
            ]
        ],
        "outputLabels": [
            "false"
        ]
    },
    {
        "id": "5c6bbd11973a1a31",
        "type": "comment",
        "z": "56cb5db772fc3848",
        "g": "bd19de5ccd074a20",
        "name": "input: none (refreshProcess) return:boolean (if init finished)",
        "info": "",
        "x": 1670,
        "y": 2020,
        "wires": []
    },
    {
        "id": "e1d0fdfd6e561ec8",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "bd19de5ccd074a20",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1950,
        "y": 2040,
        "wires": [
            [
                "c43a51bdca0afe48"
            ]
        ]
    },
    {
        "id": "c43a51bdca0afe48",
        "type": "link out",
        "z": "56cb5db772fc3848",
        "g": "bd19de5ccd074a20",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 2055,
        "y": 2080,
        "wires": []
    },
    {
        "id": "16b85f6eeb664ada",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "f0049f45ce09ebb0",
        "name": "mapping",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "mappingPath",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1580,
        "y": 2220,
        "wires": [
            [
                "9fcffc37a12e49fc"
            ]
        ]
    },
    {
        "id": "c74f314df002d612",
        "type": "comment",
        "z": "56cb5db772fc3848",
        "g": "d5cf4cf9191699ba",
        "name": "input: none",
        "info": "",
        "x": 1520,
        "y": 2460,
        "wires": []
    },
    {
        "id": "f382a65beb5e8561",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "d5cf4cf9191699ba",
        "name": "E",
        "func": "if(!msg.statusCode || [200,201].includes(msg.statusCode)){\n    node.status({\n        \"fill\": \"green\",\n        \"shape\": \"ring\",\n        \"text\": 'all ok'\n    })\n    msg.payload = 'all ok';\n} else {\n    node.status({\n        \"fill\": \"red\",\n        \"shape\": \"ring\",\n        \"text\": JSON.stringify(msg.payload) + `statusCode: ${msg.statusCode}`\n    })\n    node.error(JSON.stringify(msg.payload) + `statusCode: ${msg.statusCode}`);\n    msg.error = JSON.stringify(msg.payload) + `statusCode: ${msg.statusCode}`;\n    msg.payload = undefined;\n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2010,
        "y": 2500,
        "wires": [
            [
                "850aff3d92bf0df2"
            ]
        ]
    },
    {
        "id": "850aff3d92bf0df2",
        "type": "link out",
        "z": "56cb5db772fc3848",
        "g": "d5cf4cf9191699ba",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 2105,
        "y": 2500,
        "wires": []
    },
    {
        "id": "35c63c08ed7e4f72",
        "type": "link in",
        "z": "56cb5db772fc3848",
        "g": "94643627157a481b",
        "name": "_mappings - initMappings",
        "links": [],
        "x": 55,
        "y": 2060,
        "wires": [
            [
                "281212159939fd48"
            ]
        ]
    },
    {
        "id": "f05211d048619b67",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "94643627157a481b",
        "name": "initFinished === true",
        "rules": [
            {
                "t": "set",
                "p": "initFinished",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 2060,
        "wires": [
            [
                "c09e096f594b50c3"
            ]
        ]
    },
    {
        "id": "281212159939fd48",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "94643627157a481b",
        "name": "<-- IoB",
        "links": [
            "8c3a573c15f9f7f0"
        ],
        "timeout": "30",
        "x": 150,
        "y": 2060,
        "wires": [
            [
                "f26e8fd564575e90"
            ]
        ]
    },
    {
        "id": "f26e8fd564575e90",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "94643627157a481b",
        "name": "--> mappings",
        "rules": [
            {
                "t": "set",
                "p": "mappings",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 2060,
        "wires": [
            [
                "3b0643fd73c0c1b0"
            ]
        ]
    },
    {
        "id": "c09e096f594b50c3",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "94643627157a481b",
        "name": "E",
        "func": "node.status({\n        \"fill\": \"green\",\n        \"shape\": \"ring\",\n        \"text\": \"init finished\"\n})\nmsg.payload = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 2060,
        "wires": [
            [
                "7d5b85f0dffa4810"
            ]
        ]
    },
    {
        "id": "e4572e9d5aaef48d",
        "type": "comment",
        "z": "56cb5db772fc3848",
        "g": "94643627157a481b",
        "name": "input: none",
        "info": "",
        "x": 100,
        "y": 2020,
        "wires": []
    },
    {
        "id": "3b0643fd73c0c1b0",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "94643627157a481b",
        "name": "--> Mappings",
        "links": [
            "11631d1c6898e1a1"
        ],
        "timeout": "30",
        "x": 450,
        "y": 2060,
        "wires": [
            [
                "f05211d048619b67"
            ]
        ]
    },
    {
        "id": "d46c6bcfc1af13be",
        "type": "comment",
        "z": "56cb5db772fc3848",
        "g": "99a575cc6659e616",
        "name": "commands",
        "info": "getAllMappings\nsetAllMappings\ndeleteAllMappings\ngetSingleMapping\naddSingleMapping\nchangeSingleMapping\ndeleteSingleMapping\nregisterMappings",
        "x": 100,
        "y": 1420,
        "wires": []
    },
    {
        "id": "aa652de7f30fe6f6",
        "type": "switch",
        "z": "56cb5db772fc3848",
        "g": "99a575cc6659e616",
        "name": "msg.command",
        "property": "command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getAllMappings",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "setAllMappings",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "deleteAllMappings",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getSingleMapping",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "addSingleMapping",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "changeSingleMapping",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "deleteSingleMapping",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "initMapping",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 180,
        "y": 1740,
        "wires": [
            [
                "5ebe8d2f7b553201"
            ],
            [
                "993e3a967c0c5f62"
            ],
            [
                "a5c90ee399d2b890"
            ],
            [
                "29b4d3351b5394b2"
            ],
            [
                "312bd2e6d1f75f4b"
            ],
            [
                "b89dba25e716f564"
            ],
            [
                "16ce550c1be3ece7"
            ],
            [
                "0be28bf68bb1baee"
            ]
        ],
        "inputLabels": [
            "msg.command"
        ],
        "outputLabels": [
            "getAllMappings",
            "setAllMappings",
            "deleteAllMappings",
            "getSingleMapping",
            "addSingleMapping",
            "changeSingleMapping",
            "deleteSingleMapping",
            ""
        ]
    },
    {
        "id": "5ebe8d2f7b553201",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "99a575cc6659e616",
        "name": "",
        "links": [
            "2efdb0920dfd6082"
        ],
        "timeout": "30",
        "x": 510,
        "y": 1600,
        "wires": [
            [
                "b6aff314fa4f3ad2"
            ]
        ]
    },
    {
        "id": "b6aff314fa4f3ad2",
        "type": "link out",
        "z": "56cb5db772fc3848",
        "g": "99a575cc6659e616",
        "name": "output",
        "mode": "return",
        "links": [],
        "x": 735,
        "y": 1660,
        "wires": []
    },
    {
        "id": "993e3a967c0c5f62",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "99a575cc6659e616",
        "name": "",
        "links": [
            "9cf59065727c472d"
        ],
        "timeout": "30",
        "x": 510,
        "y": 1640,
        "wires": [
            [
                "b6aff314fa4f3ad2"
            ]
        ]
    },
    {
        "id": "a5c90ee399d2b890",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "99a575cc6659e616",
        "name": "",
        "links": [
            "c3f5ae4ccca7498e"
        ],
        "timeout": "30",
        "x": 520,
        "y": 1680,
        "wires": [
            [
                "b6aff314fa4f3ad2"
            ]
        ]
    },
    {
        "id": "41b724f988ccfcea",
        "type": "link in",
        "z": "56cb5db772fc3848",
        "g": "99a575cc6659e616",
        "name": "_mappings",
        "links": [],
        "x": 55,
        "y": 1460,
        "wires": [
            [
                "061cd86bdf2dcd13"
            ]
        ]
    },
    {
        "id": "29b4d3351b5394b2",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "99a575cc6659e616",
        "name": "",
        "links": [
            "b36f4c7111666fb5"
        ],
        "timeout": "30",
        "x": 510,
        "y": 1720,
        "wires": [
            [
                "b6aff314fa4f3ad2"
            ]
        ]
    },
    {
        "id": "312bd2e6d1f75f4b",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "99a575cc6659e616",
        "name": "",
        "links": [
            "8e04544527b84345"
        ],
        "timeout": "30",
        "x": 510,
        "y": 1760,
        "wires": [
            [
                "b6aff314fa4f3ad2"
            ]
        ]
    },
    {
        "id": "16ce550c1be3ece7",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "99a575cc6659e616",
        "name": "",
        "links": [
            "4473b25ab0b3f517"
        ],
        "timeout": "30",
        "x": 520,
        "y": 1840,
        "wires": [
            [
                "b6aff314fa4f3ad2"
            ]
        ]
    },
    {
        "id": "bd5c4c47030ab3db",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "99a575cc6659e616",
        "name": "Error Message",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "init Process not yet finished",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "425",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 1460,
        "wires": [
            [
                "b6aff314fa4f3ad2"
            ]
        ]
    },
    {
        "id": "b6cae4f29673d4be",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "99a575cc6659e616",
        "name": "del tmpPayload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "tmpPayload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "tmpPayload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 1600,
        "wires": [
            [
                "aa652de7f30fe6f6"
            ]
        ]
    },
    {
        "id": "6c95acc9b56f7e6b",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "99a575cc6659e616",
        "name": "init?",
        "links": [
            "7cc02b9e219dcef9"
        ],
        "timeout": "30",
        "x": 150,
        "y": 1520,
        "wires": [
            [
                "b321a7e87046f588"
            ]
        ]
    },
    {
        "id": "b321a7e87046f588",
        "type": "switch",
        "z": "56cb5db772fc3848",
        "g": "99a575cc6659e616",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 290,
        "y": 1520,
        "wires": [
            [
                "bd5c4c47030ab3db"
            ],
            [
                "b6cae4f29673d4be"
            ]
        ]
    },
    {
        "id": "061cd86bdf2dcd13",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "99a575cc6659e616",
        "name": "set tmpPayload",
        "rules": [
            {
                "t": "set",
                "p": "tmpPayload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 1460,
        "wires": [
            [
                "6c95acc9b56f7e6b"
            ]
        ]
    },
    {
        "id": "7d5b85f0dffa4810",
        "type": "link out",
        "z": "56cb5db772fc3848",
        "g": "94643627157a481b",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 895,
        "y": 2060,
        "wires": []
    },
    {
        "id": "0be28bf68bb1baee",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "99a575cc6659e616",
        "name": "",
        "links": [
            "35c63c08ed7e4f72"
        ],
        "timeout": "30",
        "x": 510,
        "y": 1880,
        "wires": [
            [
                "b6aff314fa4f3ad2"
            ]
        ]
    },
    {
        "id": "4bfdc2fcb4549a15",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "d632100434f155f7",
        "name": "end",
        "func": "if(msg.error){\n    node.status({\n        \"fill\": \"red\",\n        \"shape\": \"ring\",\n        \"text\": `init finished with Error - ${msg.error}`\n    })\n} else {\n    node.status({\n        \"fill\": \"green\",\n        \"shape\": \"ring\",\n        \"text\": `init finished`\n    })\n}",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2070,
        "y": 600,
        "wires": []
    },
    {
        "id": "4473b25ab0b3f517",
        "type": "link in",
        "z": "56cb5db772fc3848",
        "g": "17860d7cf8884a5a",
        "name": "_mappings - deleteMapping",
        "links": [],
        "x": 55,
        "y": 2480,
        "wires": [
            [
                "2ba2b389ce46ac42"
            ]
        ]
    },
    {
        "id": "cd37ad7e182c1795",
        "type": "link out",
        "z": "56cb5db772fc3848",
        "g": "17860d7cf8884a5a",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 1365,
        "y": 2460,
        "wires": []
    },
    {
        "id": "9648eb362d5c88ee",
        "type": "comment",
        "z": "56cb5db772fc3848",
        "g": "17860d7cf8884a5a",
        "name": "input: Object with either {\"styleButtonIOBrokerStatePath\" : ..} of {\"switchIOBrokerChannelPath\" : .., \"style\" : ..}",
        "info": "",
        "x": 410,
        "y": 2440,
        "wires": []
    },
    {
        "id": "6a9250ad1910bbb0",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "d70acdfc626c44e3",
        "name": "delete ioBroker States",
        "func": "if (msg.payload && typeof msg.payload === 'object' && msg.payload.hasOwnProperty('styleButtonIOBrokerStatePath') && msg.payload.styleButtonIOBrokerStatePath !== ''){\n    msg.payload = [msg.payload];\n}\nif(msg.payload && \n        Array.isArray(msg.payload) && \n        msg.payload.length > 0  && \n        msg.payload.some(e => e.hasOwnProperty('styleButtonIOBrokerStatePath')))\n{\n    msg.payload = msg.payload.map(mapping => {\n        return {\n            stateID: mapping['styleButtonIOBrokerStatePath'].split('&%&')[0],\n            urls: [flow.get('switchURL')],\n        }\n    })\n    msg.url = flow.get('sgWebAPIURL') + 'iobroker/deleteURLNotificationSubscriptions'\n    return [msg, null];\n}\nelse{\n    msg.payload = 'nothing to delete'\n    return [null,msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 2640,
        "wires": [
            [
                "e1d58ba2a048c92d"
            ],
            [
                "a923a0846f01e6b2"
            ]
        ],
        "outputLabels": [
            "has to register",
            "nothing to register"
        ]
    },
    {
        "id": "e1d58ba2a048c92d",
        "type": "http request",
        "z": "56cb5db772fc3848",
        "g": "d70acdfc626c44e3",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1810,
        "y": 2620,
        "wires": [
            [
                "a923a0846f01e6b2"
            ]
        ]
    },
    {
        "id": "31ecd12185cfa34d",
        "type": "link in",
        "z": "56cb5db772fc3848",
        "g": "d70acdfc626c44e3",
        "name": "_helper - deleteSingleStyleButtonMappings",
        "links": [],
        "x": 1475,
        "y": 2640,
        "wires": [
            [
                "6a9250ad1910bbb0"
            ]
        ]
    },
    {
        "id": "a923a0846f01e6b2",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "d70acdfc626c44e3",
        "name": "E",
        "func": "if(!msg.statusCode || [200,201].includes(msg.statusCode)){\n    node.status({\n        \"fill\": \"green\",\n        \"shape\": \"ring\",\n        \"text\": 'all ok'\n    })\n    msg.payload = 'all ok';\n} else {\n    node.status({\n        \"fill\": \"red\",\n        \"shape\": \"ring\",\n        \"text\": JSON.stringify(msg.payload) + `statusCode: ${msg.statusCode}`\n    })\n    node.error(JSON.stringify(msg.payload) + `statusCode: ${msg.statusCode}`);\n    msg.error = JSON.stringify(msg.payload) + `statusCode: ${msg.statusCode}`;\n    msg.payload = undefined\n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 2640,
        "wires": [
            [
                "9a569b6e35859b9d"
            ]
        ]
    },
    {
        "id": "580be89e912716ea",
        "type": "comment",
        "z": "56cb5db772fc3848",
        "g": "d70acdfc626c44e3",
        "name": "input: mappings array do delete",
        "info": "",
        "x": 1590,
        "y": 2600,
        "wires": []
    },
    {
        "id": "2ba2b389ce46ac42",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "17860d7cf8884a5a",
        "name": "<-- Mapping",
        "links": [
            "b36f4c7111666fb5"
        ],
        "timeout": "30",
        "x": 170,
        "y": 2480,
        "wires": [
            [
                "12f4157faa44caec"
            ]
        ]
    },
    {
        "id": "8a324d8cfb293e66",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "17860d7cf8884a5a",
        "name": "-x- Mapping",
        "links": [
            "31ecd12185cfa34d"
        ],
        "timeout": "30",
        "x": 570,
        "y": 2500,
        "wires": [
            [
                "4b5582e877aeb5df"
            ]
        ]
    },
    {
        "id": "3af26513644cdfd7",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "17860d7cf8884a5a",
        "name": "-^- pl",
        "rules": [
            {
                "t": "set",
                "p": "singleDeleteMapping",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 2500,
        "wires": [
            [
                "8a324d8cfb293e66"
            ]
        ]
    },
    {
        "id": "92e1084ca59cbb0b",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "17860d7cf8884a5a",
        "name": "<-- Mapping",
        "func": "const newMappings = msg.mappings.filter(e => \n    !Object.entries(msg.singleDeleteMapping).every(([key,value]) => e.hasOwnProperty(key) && e[key] === value)\n);\nmsg.payload = newMappings;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 2500,
        "wires": [
            [
                "aa9e84c7cd7e35d8"
            ]
        ]
    },
    {
        "id": "4b5582e877aeb5df",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "17860d7cf8884a5a",
        "name": "mappings",
        "rules": [
            {
                "t": "set",
                "p": "mappings",
                "pt": "msg",
                "to": "mappings",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 2500,
        "wires": [
            [
                "92e1084ca59cbb0b"
            ]
        ]
    },
    {
        "id": "aa9e84c7cd7e35d8",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "17860d7cf8884a5a",
        "name": "--> mappings",
        "rules": [
            {
                "t": "set",
                "p": "mappings",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "mappings",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 2500,
        "wires": [
            [
                "4a7ed1be549dcf0f"
            ]
        ]
    },
    {
        "id": "4a7ed1be549dcf0f",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "17860d7cf8884a5a",
        "name": "--> IoB",
        "links": [
            "59384571eb1d628f"
        ],
        "timeout": "30",
        "x": 1170,
        "y": 2500,
        "wires": [
            [
                "59981fad65ceefa0"
            ]
        ]
    },
    {
        "id": "710a466010c6bb35",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "5556ddbab7caf80c",
        "name": "-x- Mappings",
        "links": [
            "31ecd12185cfa34d"
        ],
        "timeout": "30",
        "x": 310,
        "y": 2340,
        "wires": [
            [
                "e666b4cd3d8924b3"
            ]
        ]
    },
    {
        "id": "e666b4cd3d8924b3",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "5556ddbab7caf80c",
        "name": "--> mappings",
        "rules": [
            {
                "t": "set",
                "p": "mappings",
                "pt": "flow",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 2340,
        "wires": [
            [
                "7e1f077e4dfa883c"
            ]
        ]
    },
    {
        "id": "7e1f077e4dfa883c",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "5556ddbab7caf80c",
        "name": "--> IoB",
        "links": [
            "59384571eb1d628f"
        ],
        "timeout": "30",
        "x": 610,
        "y": 2340,
        "wires": [
            [
                "83da244a4712be6a"
            ]
        ]
    },
    {
        "id": "9a569b6e35859b9d",
        "type": "link out",
        "z": "56cb5db772fc3848",
        "g": "d70acdfc626c44e3",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 2035,
        "y": 2640,
        "wires": []
    },
    {
        "id": "92d24cdf3a1f283d",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "5556ddbab7caf80c",
        "name": "mappings",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "mappings",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 2340,
        "wires": [
            [
                "710a466010c6bb35"
            ]
        ]
    },
    {
        "id": "12f4157faa44caec",
        "type": "switch",
        "z": "56cb5db772fc3848",
        "g": "17860d7cf8884a5a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 310,
        "y": 2480,
        "wires": [
            [
                "cd37ad7e182c1795"
            ],
            [
                "3af26513644cdfd7"
            ]
        ]
    },
    {
        "id": "557d5ab56fefaafb",
        "type": "comment",
        "z": "56cb5db772fc3848",
        "g": "fd2a8d4e66d37ad2",
        "name": "input: valid new mapping struct",
        "info": "",
        "x": 1590,
        "y": 2740,
        "wires": []
    },
    {
        "id": "6b614cf62a1d1452",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "fd2a8d4e66d37ad2",
        "name": "add ioBroker States",
        "func": "if (msg.payload && typeof msg.payload === 'object' && msg.payload.hasOwnProperty('styleButtonIOBrokerStatePath') && msg.payload.styleButtonIOBrokerStatePath !== ''){\n\n    msg.payload = {\n        stateID: msg.payload['styleButtonIOBrokerStatePath'].split('&%&')[0],\n        urls: [flow.get('switchURL')],\n    }\n    msg.url = flow.get('sgWebAPIURL') + 'iobroker/addURLNotificationSubscription'\n    return [msg, null];\n}\nelse{\n    msg.payload = 'nothing to add'\n    return [null,msg];\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1610,
        "y": 2780,
        "wires": [
            [
                "6a194a64fcdfaf5e"
            ],
            [
                "d65b77e1f112656e"
            ]
        ],
        "outputLabels": [
            "has to register",
            "nothing to register"
        ]
    },
    {
        "id": "6a194a64fcdfaf5e",
        "type": "http request",
        "z": "56cb5db772fc3848",
        "g": "fd2a8d4e66d37ad2",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1810,
        "y": 2760,
        "wires": [
            [
                "d65b77e1f112656e"
            ]
        ]
    },
    {
        "id": "d65b77e1f112656e",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "fd2a8d4e66d37ad2",
        "name": "E",
        "func": "if(!msg.statusCode || [200,201].includes(msg.statusCode)){\n    node.status({\n        \"fill\": \"green\",\n        \"shape\": \"ring\",\n        \"text\": 'all ok'\n    })\n    msg.payload = 'all ok';\n} else {\n    node.status({\n        \"fill\": \"red\",\n        \"shape\": \"ring\",\n        \"text\": JSON.stringify(msg.payload) + `statusCode: ${msg.statusCode}`\n    })\n    node.error(JSON.stringify(msg.payload) + `statusCode: ${msg.statusCode}`);\n    msg.error = JSON.stringify(msg.payload) + `statusCode: ${msg.statusCode}`;\n    msg.payload = undefined;\n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 2780,
        "wires": [
            [
                "5c08266ac30e3b38"
            ]
        ]
    },
    {
        "id": "f6035bc8855f2dfc",
        "type": "link in",
        "z": "56cb5db772fc3848",
        "g": "fd2a8d4e66d37ad2",
        "name": "_helper - addSingleStyleButtonMapping",
        "links": [],
        "x": 1475,
        "y": 2780,
        "wires": [
            [
                "6b614cf62a1d1452"
            ]
        ]
    },
    {
        "id": "5c08266ac30e3b38",
        "type": "link out",
        "z": "56cb5db772fc3848",
        "g": "fd2a8d4e66d37ad2",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 2035,
        "y": 2780,
        "wires": []
    },
    {
        "id": "27a992142238e5b0",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "d6191b2cb0a4400d",
        "name": "+ Mapping",
        "links": [
            "f6035bc8855f2dfc"
        ],
        "timeout": "30",
        "x": 570,
        "y": 2740,
        "wires": [
            [
                "39911bf05decd3fa"
            ]
        ]
    },
    {
        "id": "6552ce52702943e7",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "d6191b2cb0a4400d",
        "name": "--> mappings",
        "func": "msg.mappings.push(msg.singleNewMapping)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 2740,
        "wires": [
            [
                "25b19bfd971dc7f6"
            ]
        ]
    },
    {
        "id": "39911bf05decd3fa",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "d6191b2cb0a4400d",
        "name": "mappings",
        "rules": [
            {
                "t": "set",
                "p": "mappings",
                "pt": "msg",
                "to": "mappings",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 2740,
        "wires": [
            [
                "6552ce52702943e7"
            ]
        ]
    },
    {
        "id": "25b19bfd971dc7f6",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "d6191b2cb0a4400d",
        "name": "--> IoB",
        "links": [
            "59384571eb1d628f"
        ],
        "timeout": "30",
        "x": 1010,
        "y": 2740,
        "wires": [
            [
                "fcb3129c941cd7b4"
            ]
        ]
    },
    {
        "id": "83da244a4712be6a",
        "type": "delay",
        "z": "56cb5db772fc3848",
        "g": "5556ddbab7caf80c",
        "name": "200ms",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 730,
        "y": 2340,
        "wires": [
            [
                "afd40f9b31243c62"
            ]
        ]
    },
    {
        "id": "7d939e05ac17abdd",
        "type": "comment",
        "z": "56cb5db772fc3848",
        "g": "820c7528eb1934f2",
        "name": "input: Array with all Mappings",
        "info": "",
        "x": 160,
        "y": 2600,
        "wires": []
    },
    {
        "id": "9cf59065727c472d",
        "type": "link in",
        "z": "56cb5db772fc3848",
        "g": "820c7528eb1934f2",
        "name": "_mappings - setMappings",
        "links": [],
        "x": 55,
        "y": 2640,
        "wires": [
            [
                "9ec65c11594618b4"
            ]
        ]
    },
    {
        "id": "9ec65c11594618b4",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "820c7528eb1934f2",
        "name": "-^- pl",
        "rules": [
            {
                "t": "set",
                "p": "newOne",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 150,
        "y": 2640,
        "wires": [
            [
                "60c766df43488f1a"
            ]
        ]
    },
    {
        "id": "26a0f4286fe3f050",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "820c7528eb1934f2",
        "name": "-x- Mappings",
        "links": [
            "c3f5ae4ccca7498e"
        ],
        "timeout": "30",
        "x": 650,
        "y": 2600,
        "wires": [
            [
                "f537a4505b9ffe6f"
            ]
        ]
    },
    {
        "id": "f537a4505b9ffe6f",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "820c7528eb1934f2",
        "name": "--> Mappings",
        "rules": [
            {
                "t": "set",
                "p": "mappings",
                "pt": "flow",
                "to": "newOne",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "newOne",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 2600,
        "wires": [
            [
                "76c235d6b118656a"
            ]
        ]
    },
    {
        "id": "76c235d6b118656a",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "820c7528eb1934f2",
        "name": "--> IoB",
        "links": [
            "59384571eb1d628f"
        ],
        "timeout": "30",
        "x": 950,
        "y": 2600,
        "wires": [
            [
                "3e1d1e3113fe6157"
            ]
        ]
    },
    {
        "id": "3e1d1e3113fe6157",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "820c7528eb1934f2",
        "name": "--> Mappings",
        "links": [
            "11631d1c6898e1a1"
        ],
        "timeout": "30",
        "x": 1090,
        "y": 2600,
        "wires": [
            [
                "3d9b35e93cb5be72"
            ]
        ]
    },
    {
        "id": "7f3524e124ed3237",
        "type": "link out",
        "z": "56cb5db772fc3848",
        "g": "820c7528eb1934f2",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 1345,
        "y": 2640,
        "wires": []
    },
    {
        "id": "fcb3129c941cd7b4",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "d6191b2cb0a4400d",
        "name": "clean",
        "rules": [
            {
                "t": "delete",
                "p": "singleNewMapping",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 2740,
        "wires": [
            [
                "a8d941495148f42e"
            ]
        ]
    },
    {
        "id": "a8d941495148f42e",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "d6191b2cb0a4400d",
        "name": "E",
        "func": "node.status({\n        \"fill\": \"green\",\n        \"shape\": \"ring\",\n        \"text\": \"added\"\n})\nmsg.payload = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 2740,
        "wires": [
            [
                "479fabf5052d9e74"
            ]
        ]
    },
    {
        "id": "3d9b35e93cb5be72",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "820c7528eb1934f2",
        "name": "clean",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 2600,
        "wires": [
            [
                "7f3524e124ed3237"
            ]
        ]
    },
    {
        "id": "afd40f9b31243c62",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "5556ddbab7caf80c",
        "name": "clean",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 2340,
        "wires": [
            [
                "9cbc7fc01cd76baf"
            ]
        ]
    },
    {
        "id": "59981fad65ceefa0",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "17860d7cf8884a5a",
        "name": "clean",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "singleDeleteMapping",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 2500,
        "wires": [
            [
                "cd37ad7e182c1795"
            ]
        ]
    },
    {
        "id": "425b7b115b8ce4f9",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "dc19a4bcf38f0673",
        "name": "getAllMappings",
        "rules": [
            {
                "t": "set",
                "p": "command",
                "pt": "msg",
                "to": "getAllMappings",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1760,
        "y": 1680,
        "wires": [
            [
                "3819205f16c4bf22"
            ]
        ]
    },
    {
        "id": "3819205f16c4bf22",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "dc19a4bcf38f0673",
        "name": ".",
        "links": [
            "41b724f988ccfcea"
        ],
        "timeout": "30",
        "x": 1910,
        "y": 1680,
        "wires": [
            [
                "49769e1a045b2703"
            ]
        ]
    },
    {
        "id": "caa68ec3642a6996",
        "type": "debug",
        "z": "56cb5db772fc3848",
        "g": "dc19a4bcf38f0673",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2050,
        "y": 1720,
        "wires": []
    },
    {
        "id": "3caf5e497890f412",
        "type": "switch",
        "z": "56cb5db772fc3848",
        "g": "dc19a4bcf38f0673",
        "name": "if error",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1530,
        "y": 1640,
        "wires": [
            [
                "6633442a3fd08f53"
            ],
            [
                "8c0369ab564fe0f4"
            ]
        ]
    },
    {
        "id": "d06efa2d207a499d",
        "type": "http in",
        "z": "56cb5db772fc3848",
        "g": "c6db4e196ccb8cb9",
        "name": "deleteSingleMapping",
        "url": "/nodeRed-sg/0/SwitchConsumerMapping/deleteSingleMapping",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 980,
        "wires": [
            [
                "69734db52ab756cb"
            ]
        ]
    },
    {
        "id": "69734db52ab756cb",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "c6db4e196ccb8cb9",
        "name": "command",
        "rules": [
            {
                "t": "set",
                "p": "command",
                "pt": "msg",
                "to": "deleteSingleMapping",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 980,
        "wires": [
            [
                "c0edbe700f901013"
            ]
        ]
    },
    {
        "id": "4490852279317458",
        "type": "link in",
        "z": "56cb5db772fc3848",
        "g": "d0238f59f65bdf55",
        "name": "_mappings - changeMapping",
        "links": [],
        "x": 65,
        "y": 2940,
        "wires": [
            [
                "dd4f6651d02c255a"
            ]
        ]
    },
    {
        "id": "a84555afa7c98efa",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "d0238f59f65bdf55",
        "name": "-^- pl",
        "rules": [
            {
                "t": "set",
                "p": "new",
                "pt": "msg",
                "to": "payload.new",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "old",
                "pt": "msg",
                "to": "payload.old",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 2900,
        "wires": [
            [
                "75f8a8e4ba5812e8"
            ]
        ]
    },
    {
        "id": "8480744815bcf880",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "d0238f59f65bdf55",
        "name": "clean",
        "rules": [
            {
                "t": "delete",
                "p": "old",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "new",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 2940,
        "wires": [
            [
                "fcfbdca2e0e91f6f"
            ]
        ]
    },
    {
        "id": "fcfbdca2e0e91f6f",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "d0238f59f65bdf55",
        "name": "E",
        "func": "node.status({\n        \"fill\": \"green\",\n        \"shape\": \"ring\",\n        \"text\": \"changed\"\n})\nmsg.payload = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 2940,
        "wires": [
            [
                "9b75e7defece6ca9"
            ]
        ]
    },
    {
        "id": "9b75e7defece6ca9",
        "type": "link out",
        "z": "56cb5db772fc3848",
        "g": "d0238f59f65bdf55",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 1345,
        "y": 2940,
        "wires": []
    },
    {
        "id": "dd4f6651d02c255a",
        "type": "switch",
        "z": "56cb5db772fc3848",
        "g": "d0238f59f65bdf55",
        "name": "check new",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "new",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 180,
        "y": 2940,
        "wires": [
            [
                "3dd022e18f7ffac6"
            ],
            [
                "5f82bee4f171318a"
            ]
        ]
    },
    {
        "id": "3dd022e18f7ffac6",
        "type": "switch",
        "z": "56cb5db772fc3848",
        "g": "d0238f59f65bdf55",
        "name": "check old",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "old",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 330,
        "y": 2940,
        "wires": [
            [
                "a84555afa7c98efa"
            ],
            [
                "5f82bee4f171318a"
            ]
        ]
    },
    {
        "id": "5f82bee4f171318a",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "d0238f59f65bdf55",
        "name": "error",
        "rules": [
            {
                "t": "set",
                "p": "error",
                "pt": "msg",
                "to": "need a new and old part",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "400",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 2980,
        "wires": [
            [
                "71b8982179b86635"
            ]
        ]
    },
    {
        "id": "a31990303b2cc41b",
        "type": "switch",
        "z": "56cb5db772fc3848",
        "g": "c6db4e196ccb8cb9",
        "name": "if error",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 790,
        "y": 940,
        "wires": [
            [
                "b936c4b2667fcac7"
            ],
            [
                "0f0019c76aa9b2c8"
            ]
        ]
    },
    {
        "id": "b936c4b2667fcac7",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "c6db4e196ccb8cb9",
        "name": "error",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "error",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 880,
        "wires": [
            [
                "f07895d419ca3379"
            ]
        ]
    },
    {
        "id": "f07895d419ca3379",
        "type": "switch",
        "z": "56cb5db772fc3848",
        "g": "c6db4e196ccb8cb9",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 810,
        "y": 880,
        "wires": [
            [
                "d4631af68cdbef27"
            ],
            [
                "0f0019c76aa9b2c8"
            ]
        ]
    },
    {
        "id": "d4631af68cdbef27",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "c6db4e196ccb8cb9",
        "name": "statusCode",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "400",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 860,
        "wires": [
            [
                "0f0019c76aa9b2c8"
            ]
        ]
    },
    {
        "id": "e8a85aaf1eacaddc",
        "type": "comment",
        "z": "56cb5db772fc3848",
        "g": "d0238f59f65bdf55",
        "name": "input: {new: Mapping ; old: Mapping}",
        "info": "",
        "x": 180,
        "y": 2880,
        "wires": []
    },
    {
        "id": "921ecf5020a29d0f",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "d0238f59f65bdf55",
        "name": "old -> pl",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "old",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 2940,
        "wires": [
            [
                "685c9034f440afe5"
            ]
        ]
    },
    {
        "id": "685c9034f440afe5",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "d0238f59f65bdf55",
        "name": "-x- mapping",
        "links": [
            "4473b25ab0b3f517"
        ],
        "timeout": "30",
        "x": 650,
        "y": 2940,
        "wires": [
            [
                "66ec8019c3288a55"
            ]
        ]
    },
    {
        "id": "66ec8019c3288a55",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "d0238f59f65bdf55",
        "name": "new -> pl",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "new",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 2940,
        "wires": [
            [
                "4bd7e18b6ddd8060"
            ]
        ]
    },
    {
        "id": "4bd7e18b6ddd8060",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "d0238f59f65bdf55",
        "name": "+ Mapping",
        "links": [
            "8e04544527b84345"
        ],
        "timeout": "30",
        "x": 950,
        "y": 2940,
        "wires": [
            [
                "8480744815bcf880"
            ]
        ]
    },
    {
        "id": "71b8982179b86635",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "d0238f59f65bdf55",
        "name": "E",
        "func": "node.status({\n        \"fill\": \"red\",\n        \"shape\": \"ring\",\n        \"text\": \"not changed\"\n})\nmsg.payload = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 3000,
        "wires": [
            [
                "9b75e7defece6ca9"
            ]
        ]
    },
    {
        "id": "b89dba25e716f564",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "99a575cc6659e616",
        "name": "",
        "links": [
            "4490852279317458"
        ],
        "timeout": "30",
        "x": 520,
        "y": 1800,
        "wires": [
            [
                "b6aff314fa4f3ad2"
            ]
        ]
    },
    {
        "id": "efa72ecd0d9efb73",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "c6db4e196ccb8cb9",
        "name": "command",
        "rules": [
            {
                "t": "set",
                "p": "command",
                "pt": "msg",
                "to": "changeSingleMapping",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1020,
        "wires": [
            [
                "c0edbe700f901013"
            ]
        ]
    },
    {
        "id": "77f3d5e5480718a7",
        "type": "inject",
        "z": "56cb5db772fc3848",
        "g": "dc19a4bcf38f0673",
        "name": "Change",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "command",
                "v": "changeSingleMapping",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"old\":{\"switchIOBrokerChannelPath\":\"mihome.0.devices.switch_158d000202fcff\",\"styleButtonIOBrokerStatePath\":\"mihome.0.devices.switch_158d000202fcff.voltage\",\"consumerIOBrokerChannelPath\":\"shelly.0.shellyplus1#441793a3f214#1.Relay0\",\"configType\":\"mobilerschalterConfig\"},\"new\":{\"switchIOBrokerChannelPath\":\"mihome.0.devices.switch_158d000202fcff\",\"styleButtonIOBrokerStatePath\":\"mihome.0.devices.switch_158d000202fcff.percent\",\"consumerIOBrokerChannelPath\":\"hue.0.Zimmer_Büro\",\"consumerIOBrokerStatePath\":\"hue.0.Zimmer_Büro.scene_lesen\",\"configType\":\"mobilerschalterConfig\"}}",
        "payloadType": "json",
        "x": 1410,
        "y": 1820,
        "wires": [
            [
                "51dfb0e0275cf0ca"
            ]
        ]
    },
    {
        "id": "74a5f285e03eb0e6",
        "type": "switch",
        "z": "56cb5db772fc3848",
        "g": "642f6fa5575a0e49",
        "name": "init finished",
        "property": "initFinished",
        "propertyType": "flow",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1710,
        "y": 560,
        "wires": [
            [
                "65244882681ca07b"
            ],
            []
        ],
        "outputLabels": [
            "init false",
            "init true"
        ]
    },
    {
        "id": "65244882681ca07b",
        "type": "join",
        "z": "56cb5db772fc3848",
        "g": "642f6fa5575a0e49",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1850,
        "y": 560,
        "wires": [
            [
                "e0eb904b969d027e"
            ]
        ]
    },
    {
        "id": "e37893560118893e",
        "type": "join",
        "z": "56cb5db772fc3848",
        "g": "642f6fa5575a0e49",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1690,
        "y": 520,
        "wires": [
            [
                "09d2a0230ce4b95b"
            ]
        ]
    },
    {
        "id": "09d2a0230ce4b95b",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "642f6fa5575a0e49",
        "name": "cons",
        "func": "// consolidate switch data\n\nconst consumerData = {}\nmsg.payload.forEach(e => {\n    Object.entries(e).forEach(([key,value]) => {\n        consumerData[key] = value;\n    })\n})\n\nflow.set(`${msg.ConfigFunctionName}_ConsumersList`, consumerData)\nmsg.payload = {}\nmsg.consumersList = consumerData;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 520,
        "wires": [
            [
                "74a5f285e03eb0e6"
            ]
        ]
    },
    {
        "id": "151db519b0da645c",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "a36b255dfe72b7b4",
        "name": "<< cons",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "consumers",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "parts",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 540,
        "wires": [
            [
                "9fd0454ec9a91df5"
            ]
        ]
    },
    {
        "id": "9fd0454ec9a91df5",
        "type": "split",
        "z": "56cb5db772fc3848",
        "g": "a36b255dfe72b7b4",
        "name": "consumers",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 990,
        "y": 580,
        "wires": [
            [
                "7551827320087f13"
            ]
        ]
    },
    {
        "id": "7551827320087f13",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "a36b255dfe72b7b4",
        "name": "command",
        "rules": [
            {
                "t": "set",
                "p": "command",
                "pt": "msg",
                "to": "refreshConsumers",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 580,
        "wires": [
            [
                "8702b7498c76e9c6",
                "ceae67b59ad601b9",
                "8bba49f52e184dee"
            ]
        ]
    },
    {
        "id": "3e7b8c75a4fe3057",
        "type": "join",
        "z": "56cb5db772fc3848",
        "g": "a36b255dfe72b7b4",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 890,
        "y": 500,
        "wires": [
            [
                "13958edb4758eec9"
            ]
        ]
    },
    {
        "id": "13958edb4758eec9",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "a36b255dfe72b7b4",
        "name": "cons",
        "func": "// consolidate switch data\n\nconst switchData = {}\nmsg.payload.forEach(e => {\n    Object.entries(e).forEach(([key,value]) => {\n        switchData[key] = value;\n    })\n})\n\nflow.set(`${msg.ConfigFunctionName}_SwitchesList`, switchData)\nmsg.payload = {}\nmsg.switchesList = switchData\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 500,
        "wires": [
            [
                "151db519b0da645c"
            ]
        ]
    },
    {
        "id": "7ac3219a6dfa8a5f",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "9161986243c97407",
        "name": "<-- ConfigFn",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ConfigFunctions",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 500,
        "wires": [
            [
                "2c8cb9ea682d218d"
            ]
        ]
    },
    {
        "id": "2c8cb9ea682d218d",
        "type": "split",
        "z": "56cb5db772fc3848",
        "g": "9161986243c97407",
        "name": "ConfigFn",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 340,
        "y": 540,
        "wires": [
            [
                "7830a1c5776e9853"
            ]
        ]
    },
    {
        "id": "7830a1c5776e9853",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "9161986243c97407",
        "name": "pl2msg",
        "rules": [
            {
                "t": "set",
                "p": "ConfigFunctionName",
                "pt": "msg",
                "to": "payload.ConfigFunctionName",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "filter",
                "pt": "msg",
                "to": "payload.filter",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "switches",
                "pt": "msg",
                "to": "payload.switches",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "consumers",
                "pt": "msg",
                "to": "payload.consumers",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "command",
                "pt": "msg",
                "to": "refreshSwitch",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.switches",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "parts",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 580,
        "wires": [
            [
                "45d568974bb8d92e"
            ]
        ]
    },
    {
        "id": "45d568974bb8d92e",
        "type": "split",
        "z": "56cb5db772fc3848",
        "g": "9161986243c97407",
        "name": "switches",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 360,
        "y": 620,
        "wires": [
            [
                "3374e25bff1a6346",
                "2f59cd5ebf479de4",
                "050d0f5ad8a64f0d"
            ]
        ]
    },
    {
        "id": "ceca1f3e575a1b0a",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "36cf720bb0b524a9",
        "name": "--> ConfigFtn",
        "rules": [
            {
                "t": "set",
                "p": "ConfigFunctions",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1410,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "d6aeca2830390f52",
        "type": "join",
        "z": "56cb5db772fc3848",
        "g": "36cf720bb0b524a9",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": ".2",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1390,
        "y": 200,
        "wires": [
            [
                "ceca1f3e575a1b0a"
            ]
        ]
    },
    {
        "id": "ce0cbd53da6e9507",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "36cf720bb0b524a9",
        "name": "check",
        "func": "// check mapping configration\nif(\n        msg.ConfigFunctionName && \n        msg.filter && \n        msg.switches && \n        msg.consumers)\n    {\n        msg.command = 'init';\n        msg.payload = msg.switches;\n        node.status({fill:\"green\",shape:\"dot\",text:\"ok\"});\n    }else{\n        node.status({fill:\"red\",shape:\"ring\",text:\"nok\"});\n        msg = undefined\n    }\nconst {ConfigFunctionName, filter, switches, consumers} = msg\nreturn [{payload:{ConfigFunctionName, filter, switches, consumers}}, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 280,
        "wires": [
            [
                "d6aeca2830390f52"
            ],
            [
                "e2973f0a529c3104",
                "7a00a2c975e98e9b",
                "df4c01558db57118",
                "ed5d5c63d2e25d8b"
            ]
        ],
        "outputLabels": [
            "to store",
            "to init"
        ],
        "icon": "node-red/bridge.svg"
    },
    {
        "id": "d3d3aec723c93dbd",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "263c4fe68215bb7f",
        "name": ".",
        "rules": [],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 180,
        "wires": [
            [
                "fea58fe386d5e05f",
                "e3cf91088496c53f",
                "8101d3eb2ecad436"
            ]
        ]
    },
    {
        "id": "8101d3eb2ecad436",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "263c4fe68215bb7f",
        "name": "Info",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Used for Mapping Switch to Consumers like Lights",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "infoPath",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 120,
        "wires": [
            [
                "6d6f6cd7414acf76"
            ]
        ]
    },
    {
        "id": "6d6f6cd7414acf76",
        "type": "ioBroker out",
        "z": "56cb5db772fc3848",
        "g": "263c4fe68215bb7f",
        "name": "info",
        "topic": "",
        "ack": "true",
        "autoCreate": "true",
        "stateName": "adapter info",
        "role": "info.display",
        "payloadType": "string",
        "readonly": "true",
        "stateUnit": "",
        "stateMin": "",
        "stateMax": "",
        "x": 930,
        "y": 120,
        "wires": []
    },
    {
        "id": "b24ed0679be56911",
        "type": "comment",
        "z": "56cb5db772fc3848",
        "g": "25dca1802782ff81",
        "name": "input: new mapping struct",
        "info": "",
        "x": 1570,
        "y": 2880,
        "wires": []
    },
    {
        "id": "b0d112b768431ae2",
        "type": "link in",
        "z": "56cb5db772fc3848",
        "g": "25dca1802782ff81",
        "name": "_helper - checkMapping",
        "links": [],
        "x": 1485,
        "y": 2940,
        "wires": [
            [
                "44b855a13840e870"
            ]
        ]
    },
    {
        "id": "44b855a13840e870",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "25dca1802782ff81",
        "name": "check",
        "func": "const pl = msg.payload;\nmsg.payload = true;\n\n\n// check if object\nif(typeof pl !== 'object'){\n    msg.payload = false;\n}\n\n// check if all values are strings\nif (!Object.values(pl).every(e => typeof e === 'string')) {\n    msg.payload = false;\n}\n\n// check if all keys are valid\nif(!Object.keys(pl).every(e => \n        [\n            'switchIOBrokerChannelPath', \n            'styleButtonIOBrokerStatePath', \n            'style', \n            'consumerIOBrokerChannelPath', \n            'consumerIOBrokerStatePath',\n            'configType'\n    ].includes(e))) {\n    msg.payload = false;\n}\n\n// check all mandatory keys\nif (!(pl.hasOwnProperty('switchIOBrokerChannelPath') && pl.hasOwnProperty('consumerIOBrokerChannelPath') && pl.hasOwnProperty('configType'))) {\n    msg.payload = false;\n}\n\n// check mandatory key variation\nif(!((pl.hasOwnProperty('style') && pl.configType ==='wandschalterConfig' )|| \n    (pl.hasOwnProperty('styleButtonIOBrokerStatePath') && pl.configType === 'mobilerschalterConfig'))) {\n    msg.payload = false;\n}\n\n// if new some additional checks\nif(msg.isNewMapping === true){\n    const mappings = flow.get('mappings')\n    if(pl.hasOwnProperty('styleButtonIOBrokerStatePath')){\n        if (mappings.some(e => e.styleButtonIOBrokerStatePath !== '' && e.styleButtonIOBrokerStatePath === pl.styleButtonIOBrokerStatePath && e.switchIOBrokerChannelPath === pl.switchIOBrokerChannelPath)){\n            msg.payload = false;\n            msg.error = 'mapping already available';\n        }\n    }\n    if(pl.hasOwnProperty('style')){\n        if (mappings.some(e => e.style !== '' && e.style === pl.style && e.switchIOBrokerChannelPath === pl.switchIOBrokerChannelPath)){\n            msg.payload = false;\n            msg.error = 'mapping already available';\n        }\n    }\n    \n}\n\nif(msg.payload === false && !msg.error){\n    msg.error = 'not a valid mapping object'\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1590,
        "y": 2940,
        "wires": [
            [
                "57e7e52275986df8"
            ]
        ],
        "outputLabels": [
            "true"
        ]
    },
    {
        "id": "57e7e52275986df8",
        "type": "link out",
        "z": "56cb5db772fc3848",
        "g": "25dca1802782ff81",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 1705,
        "y": 2940,
        "wires": []
    },
    {
        "id": "c22076d71d641ad2",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "d6191b2cb0a4400d",
        "name": "ck",
        "links": [
            "32548b26e7d05ada"
        ],
        "timeout": "30",
        "x": 250,
        "y": 2780,
        "wires": [
            [
                "575f7a10be197b08"
            ]
        ]
    },
    {
        "id": "575f7a10be197b08",
        "type": "switch",
        "z": "56cb5db772fc3848",
        "g": "d6191b2cb0a4400d",
        "name": "ck",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 2780,
        "wires": [
            [
                "53bfa1651474f53b"
            ],
            [
                "479fabf5052d9e74"
            ]
        ]
    },
    {
        "id": "29fdf08801e00d6c",
        "type": "split",
        "z": "56cb5db772fc3848",
        "g": "7a607ca9e7452423",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1570,
        "y": 3100,
        "wires": [
            [
                "ea6bfe04df68c36f"
            ]
        ]
    },
    {
        "id": "ea6bfe04df68c36f",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "7a607ca9e7452423",
        "name": "ck",
        "links": [
            "b0d112b768431ae2"
        ],
        "timeout": "30",
        "x": 1690,
        "y": 3100,
        "wires": [
            [
                "0c240bcf8da27eab"
            ]
        ]
    },
    {
        "id": "0c240bcf8da27eab",
        "type": "join",
        "z": "56cb5db772fc3848",
        "g": "7a607ca9e7452423",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1810,
        "y": 3100,
        "wires": [
            [
                "377bb62175c30f4e"
            ]
        ]
    },
    {
        "id": "ed44dd5d79ea370b",
        "type": "comment",
        "z": "56cb5db772fc3848",
        "g": "7a607ca9e7452423",
        "name": "input: Array with valid new mapping struct",
        "info": "",
        "x": 1620,
        "y": 3040,
        "wires": []
    },
    {
        "id": "1f1fd9bf4cb96224",
        "type": "link in",
        "z": "56cb5db772fc3848",
        "g": "7a607ca9e7452423",
        "name": "_helper - checkMappings",
        "links": [],
        "x": 1485,
        "y": 3100,
        "wires": [
            [
                "29fdf08801e00d6c"
            ]
        ]
    },
    {
        "id": "02e5325b6930f1ed",
        "type": "link out",
        "z": "56cb5db772fc3848",
        "g": "7a607ca9e7452423",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 2015,
        "y": 3100,
        "wires": []
    },
    {
        "id": "1f8f7c5cc407a66d",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "d6191b2cb0a4400d",
        "name": "-⁻ pl",
        "rules": [
            {
                "t": "set",
                "p": "singleNewMapping",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 130,
        "y": 2780,
        "wires": [
            [
                "c22076d71d641ad2"
            ]
        ]
    },
    {
        "id": "60c766df43488f1a",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "820c7528eb1934f2",
        "name": "ck",
        "links": [
            "1f1fd9bf4cb96224"
        ],
        "timeout": "30",
        "x": 270,
        "y": 2640,
        "wires": [
            [
                "c8830264e9d53ced"
            ]
        ]
    },
    {
        "id": "c8830264e9d53ced",
        "type": "switch",
        "z": "56cb5db772fc3848",
        "g": "820c7528eb1934f2",
        "name": "ck",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 2640,
        "wires": [
            [
                "40bb5cba30b7fe53"
            ],
            [
                "7f3524e124ed3237"
            ]
        ]
    },
    {
        "id": "40bb5cba30b7fe53",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "820c7528eb1934f2",
        "name": "-|- pl",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "newOne",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 2600,
        "wires": [
            [
                "26a0f4286fe3f050"
            ]
        ]
    },
    {
        "id": "377bb62175c30f4e",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "7a607ca9e7452423",
        "name": "every",
        "func": "msg.payload = msg.payload.every(e => e===true)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1930,
        "y": 3100,
        "wires": [
            [
                "02e5325b6930f1ed"
            ]
        ]
    },
    {
        "id": "8c0369ab564fe0f4",
        "type": "switch",
        "z": "56cb5db772fc3848",
        "g": "dc19a4bcf38f0673",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1610,
        "y": 1700,
        "wires": [
            [
                "425b7b115b8ce4f9"
            ],
            [
                "425b7b115b8ce4f9"
            ],
            [
                "caa68ec3642a6996"
            ]
        ]
    },
    {
        "id": "49769e1a045b2703",
        "type": "debug",
        "z": "56cb5db772fc3848",
        "g": "dc19a4bcf38f0673",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2050,
        "y": 1680,
        "wires": []
    },
    {
        "id": "4a2831749dd38244",
        "type": "comment",
        "z": "56cb5db772fc3848",
        "g": "90e2359804ab0380",
        "name": "input: new mapping struct",
        "info": "",
        "x": 1890,
        "y": 2880,
        "wires": []
    },
    {
        "id": "32548b26e7d05ada",
        "type": "link in",
        "z": "56cb5db772fc3848",
        "g": "90e2359804ab0380",
        "name": "_helper - checkNewMapping",
        "links": [],
        "x": 1805,
        "y": 2940,
        "wires": [
            [
                "db38cb0f97b8c717"
            ]
        ]
    },
    {
        "id": "817af22f9e1b2402",
        "type": "link out",
        "z": "56cb5db772fc3848",
        "g": "90e2359804ab0380",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 2155,
        "y": 2940,
        "wires": []
    },
    {
        "id": "980490cbb3066b51",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "90e2359804ab0380",
        "name": "ck",
        "links": [
            "b0d112b768431ae2"
        ],
        "timeout": "30",
        "x": 2070,
        "y": 2940,
        "wires": [
            [
                "817af22f9e1b2402"
            ]
        ]
    },
    {
        "id": "db38cb0f97b8c717",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "90e2359804ab0380",
        "name": "isNewMapping",
        "rules": [
            {
                "t": "set",
                "p": "isNewMapping",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 2940,
        "wires": [
            [
                "980490cbb3066b51"
            ]
        ]
    },
    {
        "id": "bd5d805b9dc2811d",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "d0238f59f65bdf55",
        "name": "get Mapping",
        "links": [
            "b36f4c7111666fb5"
        ],
        "timeout": "30",
        "x": 740,
        "y": 2900,
        "wires": [
            [
                "7abc4626458fd07f"
            ]
        ]
    },
    {
        "id": "75f8a8e4ba5812e8",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "d0238f59f65bdf55",
        "name": "old -> pl",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "old",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 2900,
        "wires": [
            [
                "bd5d805b9dc2811d"
            ]
        ]
    },
    {
        "id": "7abc4626458fd07f",
        "type": "switch",
        "z": "56cb5db772fc3848",
        "g": "d0238f59f65bdf55",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 880,
        "y": 2900,
        "wires": [
            [
                "f26a88e324eb2aa3"
            ],
            [
                "921ecf5020a29d0f"
            ]
        ]
    },
    {
        "id": "02b35159af2e8c21",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "d0238f59f65bdf55",
        "name": "E",
        "func": "node.status({\n        \"fill\": \"red\",\n        \"shape\": \"ring\",\n        \"text\": \"not changed, because mapping is not available\"\n})\nmsg.payload = undefined;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 2880,
        "wires": [
            [
                "9b75e7defece6ca9"
            ]
        ]
    },
    {
        "id": "f26a88e324eb2aa3",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "d0238f59f65bdf55",
        "name": "error",
        "rules": [
            {
                "t": "set",
                "p": "error",
                "pt": "msg",
                "to": "old is not available",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "400",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 2880,
        "wires": [
            [
                "02b35159af2e8c21"
            ]
        ]
    },
    {
        "id": "93e0f2f375b829ad",
        "type": "link in",
        "z": "56cb5db772fc3848",
        "g": "1b89fcdd6bfe016f",
        "name": "_helper - extendConfigFunctions",
        "links": [],
        "x": 1475,
        "y": 3200,
        "wires": [
            [
                "c25f4a3e87254140"
            ]
        ]
    },
    {
        "id": "c25f4a3e87254140",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "1b89fcdd6bfe016f",
        "name": "<-- ConfigFn",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "ConfigFunctions",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1580,
        "y": 3200,
        "wires": [
            [
                "38a3ce815b6744e3"
            ]
        ]
    },
    {
        "id": "38a3ce815b6744e3",
        "type": "split",
        "z": "56cb5db772fc3848",
        "g": "1b89fcdd6bfe016f",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1720,
        "y": 3200,
        "wires": [
            [
                "595fe361d49b5acb"
            ]
        ]
    },
    {
        "id": "595fe361d49b5acb",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "1b89fcdd6bfe016f",
        "name": "combine",
        "func": "msg.payload.switchesList = flow.get(`${msg.payload.ConfigFunctionName}_SwitchesList`);\nmsg.payload.consumersList = flow.get(`${msg.payload.ConfigFunctionName}_ConsumersList`);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1850,
        "y": 3200,
        "wires": [
            [
                "350a8353ca73edaa"
            ]
        ]
    },
    {
        "id": "350a8353ca73edaa",
        "type": "join",
        "z": "56cb5db772fc3848",
        "g": "1b89fcdd6bfe016f",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1980,
        "y": 3200,
        "wires": [
            [
                "22da41a834303f8e"
            ]
        ]
    },
    {
        "id": "22da41a834303f8e",
        "type": "link out",
        "z": "56cb5db772fc3848",
        "g": "1b89fcdd6bfe016f",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 2065,
        "y": 3200,
        "wires": []
    },
    {
        "id": "185fe6f639de36fb",
        "type": "http in",
        "z": "56cb5db772fc3848",
        "g": "356ce99ca6d1b9a2",
        "name": "getAllConfigurations",
        "url": "/nodeRed-sg/0/SwitchConsumerMapping/getAllConfigurations",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 1120,
        "wires": [
            [
                "6b4a830b6ea213ef"
            ]
        ]
    },
    {
        "id": "f7099618b285e397",
        "type": "http response",
        "z": "56cb5db772fc3848",
        "g": "356ce99ca6d1b9a2",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1230,
        "y": 1200,
        "wires": []
    },
    {
        "id": "d6a43d1501edb4d5",
        "type": "switch",
        "z": "56cb5db772fc3848",
        "g": "356ce99ca6d1b9a2",
        "name": "if error",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 950,
        "y": 1120,
        "wires": [
            [
                "f7099618b285e397"
            ],
            [
                "4023fc5ab4ef29e4"
            ]
        ]
    },
    {
        "id": "4023fc5ab4ef29e4",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "356ce99ca6d1b9a2",
        "name": "error",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "error",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 1180,
        "wires": [
            [
                "c15437a4eb24adb9"
            ]
        ]
    },
    {
        "id": "c15437a4eb24adb9",
        "type": "switch",
        "z": "56cb5db772fc3848",
        "g": "356ce99ca6d1b9a2",
        "name": "hasStatusCode",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 980,
        "y": 1220,
        "wires": [
            [
                "f7099618b285e397"
            ],
            [
                "596981ad36298f0f"
            ]
        ]
    },
    {
        "id": "596981ad36298f0f",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "356ce99ca6d1b9a2",
        "name": "statusCode",
        "rules": [
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "400",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 1280,
        "wires": [
            [
                "f7099618b285e397"
            ]
        ]
    },
    {
        "id": "6b4a830b6ea213ef",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "356ce99ca6d1b9a2",
        "name": "-^- pl",
        "rules": [
            {
                "t": "set",
                "p": "orgPayload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1120,
        "wires": [
            [
                "5329992d3ee642aa"
            ]
        ]
    },
    {
        "id": "75d1d4529f34f6c3",
        "type": "ioBroker out",
        "z": "56cb5db772fc3848",
        "g": "f6456617e15f5358",
        "name": "writte",
        "topic": "",
        "ack": "false",
        "autoCreate": "true",
        "stateName": "",
        "role": "",
        "payloadType": "",
        "readonly": "",
        "stateUnit": "",
        "stateMin": "",
        "stateMax": "",
        "x": 2070,
        "y": 2360,
        "wires": []
    },
    {
        "id": "8bf39362515fdc92",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "f6456617e15f5358",
        "name": "config",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "mappingPath",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "stateName",
                "pt": "msg",
                "to": "Switch Consumer Mapping",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "stateRole",
                "pt": "msg",
                "to": "common.json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "stateType",
                "pt": "msg",
                "to": "state",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "mappings",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1590,
        "y": 2360,
        "wires": [
            [
                "f0e544d770b8bfd3"
            ]
        ]
    },
    {
        "id": "59384571eb1d628f",
        "type": "link in",
        "z": "56cb5db772fc3848",
        "g": "f6456617e15f5358",
        "name": "_helper - saveMappingsToIoB",
        "links": [],
        "x": 1495,
        "y": 2360,
        "wires": [
            [
                "8bf39362515fdc92",
                "87c393c23483b207"
            ]
        ]
    },
    {
        "id": "2700da950341d669",
        "type": "comment",
        "z": "56cb5db772fc3848",
        "g": "f6456617e15f5358",
        "name": "input: none",
        "info": "",
        "x": 1520,
        "y": 2320,
        "wires": []
    },
    {
        "id": "87c393c23483b207",
        "type": "link out",
        "z": "56cb5db772fc3848",
        "g": "f6456617e15f5358",
        "name": "",
        "mode": "return",
        "links": [],
        "x": 1645,
        "y": 2320,
        "wires": []
    },
    {
        "id": "f0e544d770b8bfd3",
        "type": "function",
        "z": "56cb5db772fc3848",
        "g": "f6456617e15f5358",
        "name": "filter empty string",
        "func": "msg.payload = msg.payload.map(e => {\n    Object.entries(e).forEach(([key, value]) => {\n        if(value === '') delete e[key]\n    })\n    return e\n})\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1750,
        "y": 2360,
        "wires": [
            [
                "716af178cd88a7b5"
            ]
        ]
    },
    {
        "id": "716af178cd88a7b5",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "f6456617e15f5358",
        "name": "--> mappings",
        "rules": [
            {
                "t": "set",
                "p": "mappings",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1930,
        "y": 2360,
        "wires": [
            [
                "75d1d4529f34f6c3"
            ]
        ]
    },
    {
        "id": "985e770126f9f489",
        "type": "http in",
        "z": "56cb5db772fc3848",
        "g": "d632100434f155f7",
        "name": "getRefreshConfig",
        "url": "/nodeRed-sg/0/SwitchConsumerMapping/getRefreshConfig",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 540,
        "wires": [
            [
                "7ac3219a6dfa8a5f",
                "c2531f9a5b5b4de4"
            ]
        ]
    },
    {
        "id": "c2531f9a5b5b4de4",
        "type": "http response",
        "z": "56cb5db772fc3848",
        "g": "d632100434f155f7",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 150,
        "y": 620,
        "wires": []
    },
    {
        "id": "5329992d3ee642aa",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "356ce99ca6d1b9a2",
        "name": "init?",
        "links": [
            "7cc02b9e219dcef9"
        ],
        "timeout": "30",
        "x": 270,
        "y": 1160,
        "wires": [
            [
                "53f95205ed441f77"
            ]
        ]
    },
    {
        "id": "53f95205ed441f77",
        "type": "switch",
        "z": "56cb5db772fc3848",
        "g": "356ce99ca6d1b9a2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 1160,
        "wires": [
            [
                "fa8994ed4bfeec73"
            ],
            [
                "1c38a8a8b58be731"
            ]
        ]
    },
    {
        "id": "fa8994ed4bfeec73",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "356ce99ca6d1b9a2",
        "name": "Error init Message",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "init Process not yet finished",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "statusCode",
                "pt": "msg",
                "to": "425",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 1120,
        "wires": [
            [
                "d6a43d1501edb4d5"
            ]
        ]
    },
    {
        "id": "1c38a8a8b58be731",
        "type": "switch",
        "z": "56cb5db772fc3848",
        "g": "356ce99ca6d1b9a2",
        "name": "split2Fn",
        "property": "req.url",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "getAllConfigurations",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "getSimpleConfigFN",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "getExtConfigFN",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "getAllConfigurationFromConfigFN",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 260,
        "y": 1260,
        "wires": [
            [
                "f89258c4debe20c9"
            ],
            [],
            [],
            [],
            []
        ]
    },
    {
        "id": "f89258c4debe20c9",
        "type": "link call",
        "z": "56cb5db772fc3848",
        "g": "356ce99ca6d1b9a2",
        "name": "get Ext ConfigFn",
        "links": [
            "93e0f2f375b829ad"
        ],
        "timeout": "30",
        "x": 450,
        "y": 1220,
        "wires": [
            [
                "c6154eac364b26a4"
            ]
        ]
    },
    {
        "id": "c6154eac364b26a4",
        "type": "change",
        "z": "56cb5db772fc3848",
        "g": "356ce99ca6d1b9a2",
        "name": "add other configs",
        "rules": [
            {
                "t": "set",
                "p": "tmp",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.ConfigFunctions",
                "pt": "msg",
                "to": "tmp",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "tmp",
                "pt": "msg"
            },
            {
                "t": "set",
                "p": "payload.switchURL",
                "pt": "msg",
                "to": "switchURL",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "payload.mappings",
                "pt": "msg",
                "to": "mappings",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 1220,
        "wires": [
            [
                "d6a43d1501edb4d5"
            ]
        ]
    },
    {
        "id": "3b1bb5ff1c7e4022",
        "type": "comment",
        "z": "d012f2eded9735e0",
        "g": "141c382388db17d3",
        "name": "daily restart of smartthings adapter",
        "info": "",
        "x": 200,
        "y": 100,
        "wires": []
    },
    {
        "id": "165c4ba355b225fc",
        "type": "inject",
        "z": "d012f2eded9735e0",
        "g": "141c382388db17d3",
        "name": "daily",
        "props": [],
        "repeat": "",
        "crontab": "00 03 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "4e0f6f2b6464dbad"
            ]
        ]
    },
    {
        "id": "52c8c4cb0e20b0a9",
        "type": "ioBroker out",
        "z": "d012f2eded9735e0",
        "g": "141c382388db17d3",
        "name": "system.adapter.smartthings.0.alive",
        "topic": "system.adapter.smartthings.0.alive",
        "ack": "true",
        "autoCreate": "false",
        "stateName": "",
        "role": "",
        "payloadType": "",
        "readonly": "",
        "stateUnit": "",
        "stateMin": "",
        "stateMax": "",
        "x": 760,
        "y": 140,
        "wires": []
    },
    {
        "id": "4e0f6f2b6464dbad",
        "type": "change",
        "z": "d012f2eded9735e0",
        "g": "141c382388db17d3",
        "name": "stop",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 140,
        "wires": [
            [
                "52c8c4cb0e20b0a9",
                "2ce7c1e5857ca959"
            ]
        ]
    },
    {
        "id": "2ce7c1e5857ca959",
        "type": "delay",
        "z": "d012f2eded9735e0",
        "g": "141c382388db17d3",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 400,
        "y": 160,
        "wires": [
            [
                "f420af6a154bd258"
            ]
        ]
    },
    {
        "id": "f420af6a154bd258",
        "type": "change",
        "z": "d012f2eded9735e0",
        "g": "141c382388db17d3",
        "name": "start",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 160,
        "wires": [
            [
                "52c8c4cb0e20b0a9"
            ]
        ]
    },
    {
        "id": "5382e1a7820f9322",
        "type": "comment",
        "z": "d012f2eded9735e0",
        "g": "9e89abb4f8cdeec8",
        "name": "daily restart of smartthings adapter",
        "info": "",
        "x": 200,
        "y": 280,
        "wires": []
    },
    {
        "id": "abbc7c532288d85f",
        "type": "inject",
        "z": "d012f2eded9735e0",
        "g": "9e89abb4f8cdeec8",
        "name": "daily",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "payload.command",
                "v": "restart",
                "vt": "str"
            },
            {
                "p": "payload.adapterName",
                "v": "smartthings",
                "vt": "str"
            },
            {
                "p": "payload.instance",
                "v": "0",
                "vt": "num"
            },
            {
                "p": "url",
                "v": "http://localhost:8089/iobroker/controlAdapter",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 03 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "7593b7e03a9d4625"
            ]
        ]
    },
    {
        "id": "7593b7e03a9d4625",
        "type": "http request",
        "z": "d012f2eded9735e0",
        "g": "9e89abb4f8cdeec8",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 290,
        "y": 320,
        "wires": [
            []
        ]
    }
]